/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package fr.theialand.insitu.dataportal.server.koppenclimate.api;

import fr.theialand.insitu.dataportal.server.koppenclimate.model.LocationKoppenClimateDTO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-04-15T15:48:18.579958+02:00[Europe/Paris]")
@Validated
@Tag(name = "climate", description = "the climate API")
public interface ClimateApi {

    default ClimateApiDelegate getDelegate() {
        return new ClimateApiDelegate() {};
    }

    /**
     * GET /climate
     * Returns the koppen climate code at one (latitude,longitude) point. 
     *
     * @param location Location in latitude, longitude format, similar to the Google Elevation API (required)
     * @return A JSON object with a single result containing latitude, longitude and koppenClimate. (status code 200)
     */
    @Operation(
        operationId = "getClimate",
        tags = { "koppenClimate" },
        responses = {
            @ApiResponse(responseCode = "200", description = "A JSON object with a single result containing latitude, longitude and koppenClimate.", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  LocationKoppenClimateDTO.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/climate",
        produces = { "application/json" }
    )
    default ResponseEntity<LocationKoppenClimateDTO> getClimate(
        @NotNull @Parameter(name = "location", description = "Location in latitude, longitude format, similar to the Google Elevation API", required = true, schema = @Schema(description = "")) @Valid @RequestParam(value = "location", required = true) String location
    ) {
        return getDelegate().getClimate(location);
    }

}
