server.port=8081

### RabbitMQ
amqp.queue.name=populate.geonetwork.queue
amqp.exchange.name=theia-in-situ
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.username=${RABBITMQ_USER}
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1s
spring.rabbitmq.listener.simple.retry.max-attempts=4
spring.rabbitmq.listener.simple.retry.max-interval=300s
spring.rabbitmq.listener.simple.retry.multiplier=5

###  GEONETWORK
#geonetwork.address=http://127.0.0.1:8080/geonetwork/srv/api
#geonetwork.address=https://test-theia.osug.fr/geonetwork/srv/api
geonetwork.address=${GEONETWORK_HOST}
geonetwork.user=${GEONETWORK_USER}
geonetwork.password=${GEONETWORK_PASSWORD}
geonetwork.group=theia

###  MongoDB
#Used in this module to query already existing dataset history and to fill creation date for each dataset
spring.data.mongodb.uri = ${MONGODB_URL}
spring.data.mongodb.database=theia-in-situ
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

###Json schema
#json.schema.url = ${SCHEMA_JSON_URL}
#json.schema.version = DRAFT_2019_09
#
#management.endpoints.web.exposure.include=beans