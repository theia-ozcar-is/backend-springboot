openapi: 3.0.1
info:
  contact:
    email: geonetwork-users@lists.sourceforge.net
    name: GeoNetwork user mailing list
    url: https://sourceforge.net/p/geonetwork/mailman/geonetwork-users/
  description: This is the description of the GeoNetwork OpenAPI. Use this API to
    manage your catalog.
  license:
    name: GPL 2.0
    url: http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
  title: GeoNetwork 4.0.0 OpenAPI Documentation
  version: 4.0.0
externalDocs:
  description: Learn how to access the catalog using the GeoNetwork REST API.
  url: http://localhost:8080/geonetwork/doc/api
servers:
- description: My GeoNetwork
  url: '{catalog}/{portal}/api'
  variables:
    catalog:
      default: http://localhost:8080/geonetwork
      description: The GeoNetwork catalog to contact
      enum:
      - http://localhost:8080/geonetwork
      - ../..
    portal:
      default: srv
      description: The thematic portal
      enum:
      - srv
security:
- basicAuth: []
tags:
- description: Metadata record operations
  name: records
- description: Regions operations
  name: regions
- description: Identifiers operations
  name: identifiers
- description: Catalog operations
  name: site
- description: Metadata record editing operations
  name: records
- description: Static pages inside GeoNetwork
  name: pages
- description: Harvester operations
  name: harvesters
- description: Registries related operations
  name: registries
- description: Related records
  name: related
- description: Utility operations
  name: tools
- description: Proxy for ElasticSearch catalog search operations
  name: search
- description: Standard related operations
  name: standards
- description: User selections related operations
  name: userselections
- description: Logos operations
  name: logos
- description: User custom searches operations
  name: usersearches
- description: Workflow status operations
  name: status
- description: Privileges operations
  name: operations
- description: User operations
  name: users
- description: Processing operations
  name: processes
- description: User feedback
  name: userfeedback
- description: Selection related operations
  name: selections
- description: Groups operations
  name: groups
- description: Me operations
  name: me
- description: User interface configuration operations
  name: ui
- description: Functionalities for custom styling
  name: customstyle
- description: Source catalogue operations
  name: sources
- description: Record link operations
  name: links
- description: Languages operations
  name: languages
- description: Mapservers related operations
  name: mapservers
- description: Tags operations
  name: tags
paths:
  /registries/actions/entries/synchronize:
    get:
      description: Scan one or more records for element matching the XPath provided
        and then check if this element is available in the directory. If Found, the
        element from the directory update the element in the record and optionally
        properties are preserved.<br/><br/>The identifier XPath is used to find a
        match. An optional filtercan be added to restrict search to a subset of the
        directory. If no identifier XPaths is provided, the UUID is based on the content
        of the snippet (hash). It is recommended to use an identifier for better matching
        (eg. ISO19139 contact with different roles will not match on the automatic
        UUID mode).
      operationId: previewUpdatedRecordEntries
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: XPath of the elements to extract as entry.
        example: .//gmd:CI_ResponsibleParty
        explode: true
        in: query
        name: xpath
        required: true
        schema:
          type: string
        style: form
      - description: XPath of the element identifier. If not defined a random UUID
          is generated and analysis will not check for duplicates.
        example: '@uuid or .//gmd:electronicMailAddress/gco:CharacterString/text()'
        explode: true
        in: query
        name: identifierXpath
        required: false
        schema:
          type: string
        style: form
      - description: List of XPath of properties to copy from record to matching entry.
        example: ./gmd:role/*/@codeListValue
        explode: true
        in: query
        name: propertiesToCopy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Replace entry by XLink.
        example: '@uuid'
        explode: true
        in: query
        name: substituteAsXLink
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter query for directory search.
        example: groupPublished:IFREMER
        explode: true
        in: query
        name: fq
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                type: object
          description: OK
      summary: Preview updated matching entries in records
      tags:
      - registries
      x-accepts: application/json
    put:
      description: Scan one or more records for element matching the XPath provided
        and then check if this element is available in the directory. If Found, the
        element from the directory update the element in the record and optionally
        properties are preserved.<br/><br/>The identifier XPath is used to find a
        match. An optional filtercan be added to restrict search to a subset of the
        directory. If no identifier XPaths is provided, the UUID is based on the content
        of the snippet (hash). It is recommended to use an identifier for better matching
        (eg. ISO19139 contact with different roles will not match on the automatic
        UUID mode).
      operationId: updateRecordEntries
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: XPath of the elements to extract as entry.
        example: .//gmd:CI_ResponsibleParty
        explode: true
        in: query
        name: xpath
        required: true
        schema:
          type: string
        style: form
      - description: XPath of the element identifier. If not defined a random UUID
          is generated and analysis will not check for duplicates.
        example: '@uuid'
        explode: true
        in: query
        name: identifierXpath
        required: false
        schema:
          type: string
        style: form
      - description: List of XPath of properties to copy from record to matching entry.
        example: ./gmd:role/*/@codeListValue
        explode: true
        in: query
        name: propertiesToCopy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Replace entry by XLink.
        explode: true
        in: query
        name: substituteAsXLink
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter query for directory search.
        example: groupPublished:IFREMER
        explode: true
        in: query
        name: fq
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created
      summary: Update matching entries in records
      tags:
      - registries
      x-accepts: application/json
  /registries/actions/entries/import/spatial:
    post:
      description: Directory entry (AKA subtemplates) are XML fragments that can be
        inserted in metadata records. Use this service to import geographic extent
        entries from an ESRI Shapefile format.
      operationId: importSpatialEntries
      parameters:
      - description: Attribute to use for UUID. If none, random UUID are generated.
        explode: true
        in: query
        name: uuidAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Pattern to build UUID from. Default is '{{uuid}}'.
        explode: true
        in: query
        name: uuidPattern
        required: false
        schema:
          default: '{{uuid}}'
          type: string
        style: form
      - description: 'Attribute to use for extent description. If none, no extent
          description defined. TODO: Add per language desc ?'
        explode: true
        in: query
        name: descriptionAttribute
        required: false
        schema:
          type: string
        style: form
      - description: geomProjectionTo
        explode: true
        in: query
        name: geomProjectionTo
        required: false
        schema:
          type: string
        style: form
      - description: lenient
        explode: true
        in: query
        name: lenient
        required: false
        schema:
          type: boolean
        style: form
      - description: Create only bounding box for each spatial objects.
        explode: true
        in: query
        name: onlyBoundingBox
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Process
        explode: true
        in: query
        name: process
        required: false
        schema:
          type: string
        style: form
      - description: Schema identifier
        explode: true
        in: query
        name: schema
        required: false
        schema:
          type: string
        style: form
      - description: Record identifier processing.
        explode: true
        in: query
        name: uuidProcessing
        required: false
        schema:
          default: NOTHING
          enum:
          - GENERATEUUID
          - NOTHING
          - OVERWRITE
          type: string
        style: form
      - description: The group the record is attached to.
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
        description: The ZIP file to upload containing the Shapefile.
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Directory entries imported.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Reviewvers can access it.
      summary: Import spatial directory entries
      tags:
      - registries
      x-contentType: multipart/form-data
      x-accepts: application/json
  /tags/{tagIdentifier}:
    get:
      operationId: getTag
      parameters:
      - description: Tag identifier
        explode: false
        in: path
        name: tagIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataCategory'
          description: Tag details.
      summary: Get a tag
      tags:
      - tags
      x-accepts: application/json
    put:
      operationId: updateTag
      parameters:
      - description: Tag identifier
        explode: false
        in: path
        name: tagIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataCategory'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            '*/*':
              schema:
                type: string
          description: Operation not allowed. Only UserAdmins can access it.
        "204":
          content:
            '*/*':
              schema:
                type: string
          description: Tag updated.
      summary: Update a tag
      tags:
      - tags
      x-contentType: application/json
      x-accepts: application/json
  /tags:
    get:
      operationId: getTags
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataCategory'
                type: array
          description: List of tags.
      summary: Get tags
      tags:
      - tags
      x-accepts: application/json
  /mapservers/{mapserverId}:
    get:
      operationId: getMapserver
      parameters:
      - description: Mapserver identifier
        explode: false
        in: path
        name: mapserverId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymousMapserver'
          description: Resource not found.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymousMapserver'
          description: Operation not allowed. Only Editors can access it.
      summary: Get a mapserver
      tags:
      - mapservers
      x-accepts: application/json
    put:
      operationId: updateMapserver
      parameters:
      - description: Mapserver identifier
        explode: false
        in: path
        name: mapserverId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapServer'
        description: Mapserver details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "204":
          description: Mapserver updated.
        "403":
          description: Operation not allowed. Only Reviewvers can access it.
      summary: Update a mapserver
      tags:
      - mapservers
      x-contentType: application/json
      x-accepts: application/json
  /mapservers:
    get:
      description: Mapservers are used by the catalog to publish record attachments
        (eg. ZIP file with shape) or record associated resources (eg. database table,
        file on the local network) in a remote mapserver like GeoServer or MapServer.
        The catalog communicate with the mapserver using GeoServer REST API.
      operationId: getMapservers
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AnonymousMapserver'
                type: array
          description: Operation not allowed. Only Editors can access it.
      summary: Get mapservers
      tags:
      - mapservers
      x-accepts: application/json
    put:
      description: Return the id of the newly created mapserver.
      operationId: addMapserver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapServer'
        description: Mapserver details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Mapserver created.
        "400":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Bad parameters.
        "403":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Operation not allowed. Only Reviewvers can access it.
      summary: Add a mapserver
      tags:
      - mapservers
      x-contentType: application/json
      x-accepts: application/json
  /mapservers/{mapserverId}/records/{metadataUuid}:
    delete:
      operationId: deleteMapserverResource
      parameters:
      - description: Mapserver identifier
        explode: false
        in: path
        name: mapserverId
        required: true
        schema:
          type: string
        style: simple
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Resource name (could be a file or a db connection)
        explode: true
        in: query
        name: resource
        required: true
        schema:
          type: string
        style: form
      - description: Metadata title
        explode: true
        in: query
        name: metadataTitle
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Metadata abstract
        explode: true
        in: query
        name: metadataAbstract
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: Operation not allowed. Only Editors can access it.
      summary: Remove a metadata mapserver resource
      tags:
      - mapservers
      x-accepts: application/json
    get:
      operationId: getMapserverResource
      parameters:
      - description: Mapserver identifier
        explode: false
        in: path
        name: mapserverId
        required: true
        schema:
          type: string
        style: simple
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Resource name (could be a file or a db connection)
        explode: true
        in: query
        name: resource
        required: true
        schema:
          type: string
        style: form
      - description: Metadata title
        explode: true
        in: query
        name: metadataTitle
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Metadata abstract
        explode: true
        in: query
        name: metadataAbstract
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: Operation not allowed. Only Editors can access it.
      summary: 'Check metadata mapserver resource is published '
      tags:
      - mapservers
      x-accepts: application/json
    put:
      operationId: publishMapserverResource
      parameters:
      - description: Mapserver identifier
        explode: false
        in: path
        name: mapserverId
        required: true
        schema:
          type: string
        style: simple
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Resource name (could be a file or a db connection)
        explode: true
        in: query
        name: resource
        required: true
        schema:
          type: string
        style: form
      - description: Metadata title
        explode: true
        in: query
        name: metadataTitle
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Metadata abstract
        explode: true
        in: query
        name: metadataAbstract
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: Operation not allowed. Only Editors can access it.
      summary: Publish a metadata resource in a mapserver
      tags:
      - mapservers
      x-accepts: application/json
  /isolanguages:
    get:
      description: ISO languages provides a list of all languages (eg. used for autocompletion
        in metadata editor).
      operationId: getIsoLanguages
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IsoLanguage'
                type: array
          description: OK
      summary: Get ISO languages
      tags:
      - languages
      x-accepts: application/json
  /records/links:
    delete:
      operationId: purgeAll
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Remove all links and status history
      tags:
      - links
      x-accepts: application/json
    get:
      operationId: getRecordLinks
      parameters:
      - description: 'Filter, e.g. "{url: ''png'', lastState: ''ko'', records: ''e421'',
          groupId: 12}", lastState being ''ok''/''ko''/''unknown'''
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/JSONObject'
        style: form
      - description: Optional, filter links to records published in that group.
        explode: true
        in: query
        name: groupIdFilter
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Optional, filter links to records created in that group.
        explode: true
        in: query
        name: groupOwnerIdFilter
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLink'
          description: OK
      summary: Get record links
      tags:
      - links
      x-accepts: application/json
    post:
      description: One of uuids or bucket parameter is required if not an Administrator.
        Only records that you can edit will be validated.
      operationId: analyzeRecordLinks
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: Only allowed if Administrator.
        explode: true
        in: query
        name: removeFirst
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: analyze
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Created
      summary: Analyze records links
      tags:
      - links
      x-accepts: application/json
  /records/links/csv:
    get:
      description: Get record links as CSV
      operationId: getRecordLinksAsCsv
      parameters:
      - description: 'Filter, e.g. "{url: ''png'', lastState: ''ko'', records: ''e421'',
          groupId: 12}", lastState being ''ok''/''ko''/''unknown'''
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/JSONObject'
        style: form
      - description: Optional, filter links to records published in that group.
        explode: true
        in: query
        name: groupIdFilter
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Optional, filter links to records created in that group.
        explode: true
        in: query
        name: groupOwnerIdFilter
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: OK
      tags:
      - links
      x-accepts: application/json
  /sources:
    get:
      description: List all subportal available.
      operationId: getSources_1
      parameters:
      - description: Group owner of the source (only applies to subportal).
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: List of portals.
      summary: Get portal list
      tags:
      - sources
      x-accepts: application/json
  /sources/{type}:
    get:
      description: Sources are the local catalogue, subportal, external catalogue
        (when importing MEF files) or harvesters.
      operationId: getSourcesByType
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - portal
          - subportal
          - externalportal
          - harvester
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: OK
      summary: Get all sources by type
      tags:
      - sources
      x-accepts: application/json
  /customstyle:
    get:
      description: This returns a map with all Less variables.
      operationId: getCssStyle
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: Get CssStyleSettings
      tags:
      - customstyle
      x-accepts: application/json
    post:
      description: Saves custom style variables.
      operationId: saveCssStyle
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
      summary: Saves custom style variables.
      tags:
      - customstyle
      x-contentType: application/json
      x-accepts: application/json
  /records/{metadataUuid}/tags:
    delete:
      operationId: deleteTags
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Tag identifier. If none, all tags are removed.
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "204":
          description: Record tags removed.
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Delete tags of a record
      tags:
      - records
      x-accepts: application/json
    get:
      description: Tags are used to classify information.<br/><a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/tag-information/tagging-with-categories.html'>More
        info</a>
      operationId: getRecordTags
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataCategory'
                type: array
                uniqueItems: true
          description: Record tags.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataCategory'
                type: array
                uniqueItems: true
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get record tags
      tags:
      - records
      x-accepts: application/json
    put:
      operationId: tagRecord
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Tag identifier
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Clear all before adding new ones
        explode: true
        in: query
        name: clear
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
        "201":
          description: Record tags added.
      summary: Add tags to a record
      tags:
      - records
      x-accepts: application/json
  /records/tags:
    delete:
      operationId: deleteTagForRecords
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: Tag identifier
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Report about removed records.
      summary: Delete tags to one or more records
      tags:
      - records
      x-accepts: application/json
    put:
      operationId: tagRecords
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: Tag identifier
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Clear all before adding new ones
        explode: true
        in: query
        name: clear
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Report about updated records.
      summary: Add tags to one or more records
      tags:
      - records
      x-accepts: application/json
  /records/backups:
    put:
      description: The backup contains all metadata not harvested including templates.
      operationId: trigger
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Return succeed message.
      summary: Trigger MEF backup archive
      tags:
      - records
      x-accepts: application/json
  /records/backups/latest:
    get:
      description: The backup contains all metadata not harvested including templates.
      operationId: downloadBackup
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Resource not found.
      summary: Download MEF backup archive
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/query:
    get:
      operationId: getSavedQueries
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SavedQuery'
                type: array
          description: Saved query available.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SavedQuery'
                type: array
          description: Operation not allowed. User needs to be able to view the resource.
      summary: List saved queries for this metadata
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/query/{savedQuery}:
    post:
      description: All parameters will be substituted to the XPath query. eg. {{protocol}}
        in the XPath expression will be replaced by the protocol parameter provided
        in the request body.
      operationId: applyQuery
      parameters:
      - description: The metadata UUID
        example: 43d7c186-2187-4bcd-8843-41e575a5ef56
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The saved query to apply
        example: wfs-indexing-config
        explode: false
        in: path
        name: savedQuery
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: List of matching elements. If element are nodes, then they
            are returned as string.
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Apply a saved query for this metadata
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/processes:
    get:
      description: Analyze the record an suggest processes to improve the quality
        of the record.<br/><a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/workflow/batchupdate-xsl.html'>More
        info</a>
      operationId: getSuggestions
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuggestionType'
                type: array
          description: Operation not allowed. User needs to be able to edit the resource.
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuggestionType'
                type: array
          description: Record suggestions.
      summary: Get suggestions
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/processes/{process}:
    get:
      description: Process a metadata with an XSL transformation declared in the metadata
        schema (See the process folder). Parameters sent to the service are forwarded
        to XSL process.
      operationId: processRecordPreview
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Process identifier
        explode: false
        in: path
        name: process
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Element'
          description: A preview of the processed record.
        "403":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Element'
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Preview process result
      tags:
      - records
      x-accepts: application/json
    post:
      description: Process a metadata with an XSL transformation declared in the metadata
        schema (See the process folder). Parameters sent to the service are forwarded
        to XSL process.
      operationId: processRecord
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Process identifier
        explode: false
        in: path
        name: process
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/xml:
              schema:
                type: string
          description: Operation not allowed. User needs to be able to edit the resource.
        "204":
          content:
            application/xml:
              schema:
                type: string
          description: Record processed and saved.
      summary: Apply a process
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/validate/internal:
    put:
      description: 'User MUST be able to edit the record to validate it. FIXME : id
        MUST be the id of the current metadata record in session ?'
      operationId: validateRecord
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Validation status. Should be provided only in case of SUBTEMPLATE
          validation. If provided for another type, throw a BadParameter Exception
        explode: true
        in: query
        name: isvalid
        required: false
        schema:
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reports'
          description: Validation report.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reports'
            application/xml:
              schema:
                $ref: '#/components/schemas/Reports'
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Validate a record
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/rate:
    put:
      description: User rating of metadata. If the metadata was harvested using the
        'GeoNetwork' protocol and the system setting localrating/enable is false (the
        default), the user's rating is shared between GN nodes in this harvesting
        network. If the metadata was not harvested or if localrating/enable is true
        then 'local rating' is applied, counting only rating from users of this node.<br/>When
        a remote rating is applied, the local rating is not updated. It will be updated
        on the next harvest run (FIXME ?).
      operationId: rateRecord
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              format: int32
              type: integer
        description: Rating
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                format: int32
                type: integer
          description: New rating value.
        "403":
          content:
            '*/*':
              schema:
                format: int32
                type: integer
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Rate a record
      tags:
      - records
      x-contentType: application/json
      x-accepts: application/json
  /records/{metadataUuid}/doi:
    put:
      operationId: createDoi
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Metadata not found.
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Operation not allowed. User needs to be able to edit the resource.
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Service unavailable.
        "201":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Check status of the report.
      summary: Submit a record to the Datacite metadata store in order to create a
        DOI.
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/doi/checkPreConditions:
    get:
      operationId: checkDoiStatus
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: boolean
                type: object
          description: Record can be proposed to DataCite.
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: boolean
                type: object
          description: Metadata not found.
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: boolean
                type: object
          description: Operation not allowed. User needs to be able to edit the resource.
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: boolean
                type: object
          description: Service unavailable.
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: boolean
                type: object
          description: Record does not meet preconditions. Check error message.
      summary: Check that a record can be submitted to DataCite for DOI creation.
        DataCite requires some fields to be populated.
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/attachments/print-thumbnail:
    put:
      description: <a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/associating-resources/linking-thumbnail.html#generating-a-thumbnail-using-wms-layers'>More
        info</a>
      operationId: saveThumbnail
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The mapprint module JSON configuration
        explode: true
        in: query
        name: jsonConfig
        required: true
        schema:
          type: string
        style: form
      - description: The rotation angle of the map
        explode: true
        in: query
        name: rotationAngle
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Thumbnail created.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Create an overview using the map print module
      tags:
      - records
      x-accepts: application/json
  /records/zip:
    get:
      description: Metadata Exchange Format (MEF) is returned. MEF is a ZIP file containing
        the metadata as XML and some others files depending on the version requested.
        See http://geonetwork-opensource.org/manuals/trunk/eng/users/annexes/mef-format.html.
      operationId: exportAsMef
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: MEF file format.
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: FULL
          enum:
          - simple
          - partial
          - full
          type: string
        style: form
      - description: With related records (parent and service).
        explode: true
        in: query
        name: withRelated
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Resolve XLinks in the records.
        explode: true
        in: query
        name: withXLinksResolved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Preserve XLink URLs in the records.
        explode: true
        in: query
        name: withXLinkAttribute
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: addSchemaLocation
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Download the approved version
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          description: other response
        "200":
          content:
            application/x-gn-mef-2-zip: {}
          description: Return requested records as ZIP.
        "403":
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get a set of metadata records as ZIP
      tags:
      - records
      x-accepts: application/x-gn-mef-2-zip
  /records/pdf:
    get:
      description: The PDF is a short summary of each records with links to the complete
        metadata record in different format (ie. landing page on the portal, XML)
      operationId: exportAsPdf
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: Return requested records as PDF.
        "403":
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get a set of metadata records as PDF
      tags:
      - records
      x-accepts: application/json
  /records/csv:
    get:
      description: The CSV is a short summary of each records.
      operationId: exportAsCsv
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: Return requested records as CSV.
        "403":
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get a set of metadata records as CSV
      tags:
      - records
      x-accepts: application/json
  /records:
    delete:
      description: 'User MUST be able to edit the record to delete it. '
      operationId: deleteRecords
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: Backup first the record as MEF in the metadata removed folder.
        explode: true
        in: query
        name: withBackup
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Report about deleted records.
      summary: Delete one or more records
      tags:
      - records
      x-accepts: application/json
    get:
      description: "."
      operationId: getAsRdf
      parameters: []
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: Return the catalog content as RDF.
        "303":
          description: Redirect the client to the first in-sequence page resource.
            This happens when the paging parameters (from, hitsPerPage) are not included
            in the request.
      summary: Get catalog content as RDF. This endpoint supports the same Lucene
        query parameters as for the GUI search.
      tags:
      - records
      x-accepts: application/json
    post:
      description: Add record in the catalog by uploading files.
      operationId: insertFile
      parameters:
      - description: The type of record.
        explode: true
        in: query
        name: metadataType
        required: false
        schema:
          default: METADATA
          enum:
          - METADATA
          - TEMPLATE
          - SUB_TEMPLATE
          - TEMPLATE_OF_SUB_TEMPLATE
          type: string
        style: form
      - description: XML or MEF file to upload
        explode: true
        in: query
        name: file
        required: false
        schema:
          items:
            format: binary
            type: string
          type: array
        style: form
      - description: Record identifier processing.
        explode: true
        in: query
        name: uuidProcessing
        required: false
        schema:
          default: NOTHING
          enum:
          - GENERATEUUID
          - NOTHING
          - OVERWRITE
          type: string
        style: form
      - description: The group the record is attached to.
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - description: Tags to assign to the record.
        explode: true
        in: query
        name: category
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Validate the record first and reject it if not valid.
        explode: true
        in: query
        name: rejectIfInvalid
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: (XML file only) Publish record.
        explode: true
        in: query
        name: publishToAll
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: (MEF file only) Assign to current catalog.
        explode: true
        in: query
        name: assignToCatalog
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: XSL transformation to apply to the record.
        explode: true
        in: query
        name: transformWith
        required: false
        schema:
          default: _none_
          type: string
        style: form
      - description: Force the schema of the record. If not set, schema autodetection
          is used (and is the preferred method).
        explode: true
        in: query
        name: schema
        required: false
        schema:
          type: string
        style: form
      - description: (experimental) Add extra information to the record.
        explode: true
        in: query
        name: extra
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Report about imported records.
      summary: Add a record from XML or MEF/ZIP file
      tags:
      - records
      x-accepts: application/json
    put:
      description: Add one or more record from an XML fragment, URL or file in a folder
        on the catalog server. When loadingfrom the catalog server folder, it might
        be faster to use a local filesystem harvester.
      operationId: insert
      parameters:
      - description: The type of record.
        explode: true
        in: query
        name: metadataType
        required: false
        schema:
          default: METADATA
          enum:
          - METADATA
          - TEMPLATE
          - SUB_TEMPLATE
          - TEMPLATE_OF_SUB_TEMPLATE
          type: string
        style: form
      - description: URL of a file to download and insert.
        explode: true
        in: query
        name: url
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Server folder where to look for files.
        explode: true
        in: query
        name: serverFolder
        required: false
        schema:
          type: string
        style: form
      - description: (Server folder import only) Recursive search in folder.
        explode: true
        in: query
        name: recursiveSearch
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: (XML file only) Publish record.
        explode: true
        in: query
        name: publishToAll
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: (MEF file only) Assign to current catalog.
        explode: true
        in: query
        name: assignToCatalog
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Record identifier processing.
        explode: true
        in: query
        name: uuidProcessing
        required: false
        schema:
          default: NOTHING
          enum:
          - GENERATEUUID
          - NOTHING
          - OVERWRITE
          type: string
        style: form
      - description: The group the record is attached to.
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - description: Tags to assign to the record.
        explode: true
        in: query
        name: category
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Validate the record first and reject it if not valid.
        explode: true
        in: query
        name: rejectIfInvalid
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: XSL transformation to apply to the record.
        explode: true
        in: query
        name: transformWith
        required: false
        schema:
          default: _none_
          type: string
        style: form
      - description: Force the schema of the record. If not set, schema autodetection
          is used (and is the preferred method).
        explode: true
        in: query
        name: schema
        required: false
        schema:
          type: string
        style: form
      - description: (experimental) Add extra information to the record.
        explode: true
        in: query
        name: extra
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        description: XML fragment.
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Report about imported records.
      summary: Add a record
      tags:
      - records
      x-contentType: application/xml
      x-accepts: application/json
  /records/validate/inspire:
    put:
      description: Update validation status for all records.
      operationId: validateRecordsInspire
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Records validated.
      summary: Validate one or more records in INSPIRE validator
      tags:
      - records
      x-accepts: application/json
  /records/validate:
    put:
      description: Update validation status for all records.
      operationId: validateRecords
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Records validated.
      summary: Validate one or more records
      tags:
      - records
      x-accepts: application/json
  /processes/{process}:
    get:
      description: Preview result of a process applied to metadata records with an
        XSL transformation declared in the metadata schema (See the process folder).
        Parameters sent to the service are forwarded to XSL process. Append mode has
        2 limitations. First, it only support a set of records in the same schema.
        Secondly, it does not propagate URL parameters. This mode is mainly used to
        create custom reports based on metadata records content.If process name ends
        with '.csv', the XSL process output a text document which is returned. When
        errors occur during processing, the processing report is returned in JSON
        format.
      operationId: previewProcessRecords
      parameters:
      - description: Process identifier
        explode: false
        in: path
        name: process
        required: true
        schema:
          type: string
        style: simple
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: Append documents before processing
        example: false
        explode: true
        in: query
        name: appendFirst
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            '*/*':
              schema:
                type: object
          description: Operation not allowed. Only Editors can access it.
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: Processed records.
      summary: Preview process result applied to one or more records
      tags:
      - processes
      x-accepts: application/json
    post:
      description: Process a metadata with an XSL transformation declared in the metadata
        schema (See the process folder). Parameters sent to the service are forwarded
        to XSL process.
      operationId: processRecords
      parameters:
      - description: Process identifier
        explode: false
        in: path
        name: process
        required: true
        schema:
          type: string
        style: simple
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: If true updates the DateStamp (or equivalent in standards different
          to ISO 19139) field in the metadata with the current timestamp
        explode: true
        in: query
        name: updateDateStamp
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Index after processing
        example: false
        explode: true
        in: query
        name: index
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XsltMetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XsltMetadataProcessingReport'
          description: Report about processed records.
      summary: Apply a process to one or more records
      tags:
      - processes
      x-accepts: application/json
  /tools/i18n/db:
    get:
      operationId: getTranslations
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: List translations for database description table
      tags:
      - tools
      x-accepts: application/json
  /tools/i18n/db/translations/{key}:
    delete:
      operationId: deleteTranslations
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: OK
      summary: Delete database translations.
      tags:
      - tools
      x-accepts: application/json
    put:
      operationId: addTranslations
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: replace
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
      summary: Add or update database translations.
      tags:
      - tools
      x-contentType: application/json
      x-accepts: application/json
  /tools/i18n/db/translations:
    get:
      operationId: getDbTranslations
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: List database translations (used to overrides client application translations).
      tags:
      - tools
      x-accepts: application/json
  /ui:
    get:
      operationId: getUiConfigurations
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UiSetting'
                type: array
          description: List of configuration.
      summary: Get UI configuration
      tags:
      - ui
      x-accepts: application/json
  /ui/{uiIdentifier}:
    get:
      operationId: getUiConfiguration
      parameters:
      - description: UI identifier
        explode: false
        in: path
        name: uiIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiSetting'
          description: UI configuration.
      summary: Get a UI configuration
      tags:
      - ui
      x-accepts: application/json
    put:
      operationId: updateUiConfiguration
      parameters:
      - description: UI configuration identifier
        explode: false
        in: path
        name: uiIdentifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiSetting'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            '*/*':
              schema:
                type: string
          description: Operation not allowed. Only UserAdmins can access it.
        "204":
          content:
            '*/*':
              schema:
                type: string
          description: UI configuration updated.
      summary: Update a UI configuration
      tags:
      - ui
      x-contentType: application/json
      x-accepts: application/json
  /site/index:
    put:
      operationId: index
      parameters:
      - description: Drop and recreate index
        explode: true
        in: query
        name: reset
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Asynchronous mode (only on all records. ie. no selection bucket)
        explode: true
        in: query
        name: asynchronous
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Records having only XLinks
        explode: true
        in: query
        name: havingXlinkOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Index. By default only remove record index.
        explode: true
        in: query
        name: indices
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Index
      tags:
      - site
      x-accepts: application/json
  /site/info/readonly:
    get:
      operationId: isReadOnly
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
      summary: Is in read-only mode?
      tags:
      - site
      x-accepts: application/json
  /site/indexing:
    get:
      operationId: isIndexing
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
      summary: Is indexing?
      tags:
      - site
      x-accepts: application/json
  /site/info/isCasEnabled:
    get:
      operationId: isCasEnabled
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
      summary: Is CAS enabled?
      tags:
      - site
      x-accepts: application/json
  /site/index/synchronized:
    get:
      operationId: indexAndDbSynchronizationStatus
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
      summary: Index synchronized with database
      tags:
      - site
      x-accepts: application/json
  /site/info/build:
    get:
      description: To know when and how this version of the application was built.
      operationId: getSystemInfo
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
          description: Build info.
      summary: Get build details
      tags:
      - site
      x-accepts: application/json
  /site/info/transforms:
    get:
      description: XSL transformations may be applied while importing or harvesting
        records.
      operationId: getXslTransformations
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: XSLT available.
      summary: Get XSL tranformations available
      tags:
      - site
      x-accepts: application/json
  /site:
    get:
      operationId: getSiteOrPortalDescription
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsListResponse'
          description: Site description.
      summary: Get site (or portal) description
      tags:
      - site
      x-accepts: application/json
  /site/settings/details:
    get:
      description: Provides also setting properties.
      operationId: getSettingsDetails
      parameters:
      - description: Setting set. A common set of settings to retrieve.
        explode: true
        in: query
        name: set
        required: false
        schema:
          items:
            enum:
            - INSPIRE
            - CSW
            - HARVESTER
            - USER_GROUP_ONLY
            - AUTH
            - READ_ONLY
            - INDEX
            - SYSTEMINFO
            - STAGING_PROFILE
            - TYPE
            type: string
          type: array
        style: form
      - description: Setting key
        explode: true
        in: query
        name: key
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Setting'
                type: array
          description: Settings with details.
      summary: Get settings with details
      tags:
      - site
      x-accepts: application/json
  /site/info:
    get:
      operationId: getInformation
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteInformation'
          description: Site information.
      summary: Get site informations
      tags:
      - site
      x-accepts: application/json
  /site/index/status:
    get:
      operationId: indexStatus
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
      summary: Index status
      tags:
      - site
      x-accepts: application/json
  /site/settings:
    get:
      description: Return public settings for anonymous users, internals are allowed
        for authenticated.
      operationId: getSettingsSet
      parameters:
      - description: Setting set. A common set of settings to retrieve.
        explode: true
        in: query
        name: set
        required: false
        schema:
          items:
            enum:
            - INSPIRE
            - CSW
            - HARVESTER
            - USER_GROUP_ONLY
            - AUTH
            - READ_ONLY
            - INDEX
            - SYSTEMINFO
            - STAGING_PROFILE
            - TYPE
            type: string
          type: array
        style: form
      - description: Setting key
        explode: true
        in: query
        name: key
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsListResponse'
          description: Settings.
      summary: Get settings
      tags:
      - site
      x-accepts: application/json
  /records/{metadataUuid}/status/workflow/last:
    get:
      operationId: getStatus
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataWorkflowStatusResponse'
          description: Record status.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataWorkflowStatusResponse'
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Get last workflow status for a record
      tags:
      - records
      x-accepts: application/json
  /records/status/search:
    get:
      operationId: getWorkflowStatusByType
      parameters:
      - description: One or more types to retrieve (ie. worflow, event, task). Default
          is all.
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - workflow
            - task
            - event
            type: string
          type: array
        style: form
      - description: All event details including XML changes. Responses are bigger.
          Default is false
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: boolean
        style: form
      - description: One or more event author. Default is all.
        explode: true
        in: query
        name: author
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: One or more event owners. Default is all.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: One or more record identifier. Default is all.
        explode: true
        in: query
        name: record
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Start date
        explode: true
        in: query
        name: dateFrom
        required: false
        schema:
          type: string
        style: form
      - description: End date
        explode: true
        in: query
        name: dateTo
        required: false
        schema:
          type: string
        style: form
      - description: From page
        explode: true
        in: query
        name: from
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataStatusResponse'
                type: array
          description: OK
      summary: Search status
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/status:
    get:
      operationId: getRecordStatusHistory
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: details
        required: false
        schema:
          type: boolean
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataStatusResponse'
                type: array
          description: OK
      summary: Get record status history
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/status/{type}:
    get:
      operationId: getRecordStatusHistoryByType
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Type
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - workflow
          - task
          - event
          type: string
        style: simple
      - explode: true
        in: query
        name: details
        required: false
        schema:
          type: boolean
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataStatusResponse'
                type: array
          description: OK
      summary: Get record status history by type
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/editor/elements/{direction}:
    put:
      operationId: addElement
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Reference of the element to move.
        explode: true
        in: query
        name: ref
        required: true
        schema:
          type: string
        style: form
      - description: Direction
        explode: false
        in: path
        name: direction
        required: true
        schema:
          enum:
          - up
          - down
          type: string
        style: simple
      - description: Should attributes be shown on the editor snippet?
        explode: true
        in: query
        name: displayAttributes
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          description: Element reordered.
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Reorder element
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/editor:
    delete:
      description: Cancel current editing session.
      operationId: cancelEdits
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
        "204":
          description: Editing session cancelled.
      summary: Cancel edits
      tags:
      - records
      x-accepts: application/json
    post:
      description: Save the HTML form content.
      operationId: saveEdits
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Tab
        explode: true
        in: query
        name: tab
        required: false
        schema:
          default: simple
          type: string
        style: form
      - explode: true
        in: query
        name: withAttributes
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: withValidationErrors
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: minor
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Submit for review directly after save.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: "1"
          type: string
        style: form
      - description: Save current edits.
        explode: true
        in: query
        name: commit
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Save and terminate session.
        explode: true
        in: query
        name: terminate
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: 'Record as XML. TODO: rename xml'
        explode: true
        in: query
        name: data
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: The editor form.
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Save edits
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/editor/elements:
    delete:
      operationId: deleteElement
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Reference of the element to remove.
        explode: true
        in: query
        name: ref
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Name of the parent.
        explode: true
        in: query
        name: parent
        required: true
        schema:
          type: string
        style: form
      - description: Should attributes be shown on the editor snippet?
        explode: true
        in: query
        name: displayAttributes
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "204":
          description: Element removed.
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Delete element
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/editor/attributes:
    delete:
      operationId: deleteAttribute
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Reference of the attribute to remove.
        explode: true
        in: query
        name: ref
        required: true
        schema:
          type: string
        style: form
      - description: Should attributes be shown on the editor snippet?
        explode: true
        in: query
        name: displayAttributes
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "204":
          description: Attribute removed.
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Delete attribute
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/validate/inspire:
    put:
      description: User MUST be able to edit the record to validate it. An INSPIRE
        endpoint must be configured in Settings. This activates an asyncronous process,
        this method does not return any report. This method returns an id to be used
        to get the report.
      operationId: validateRecordForInspire
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Test suite to run
        explode: true
        in: query
        name: testsuite
        required: true
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            text/plain:
              schema:
                type: string
          description: Metadata not found.
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: Operation not allowed. User needs to be able to edit the resource.
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Service unavailable.
        "201":
          content:
            text/plain:
              schema:
                type: string
          description: Check status of the report.
      summary: Submit a record to the INSPIRE service for validation.
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/validate/inspire/testsuites:
    get:
      description: TG13, TG2, ...
      operationId: getTestSuites
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: List of testsuites available.
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Get test suites available.
      tags:
      - records
      x-accepts: application/json
  /records/{testId}/validate/inspire:
    get:
      description: 'User MUST be able to edit the record to validate it. An INSPIRE
        endpoint must be configured in Settings. If the process is complete an object
        with status is returned. '
      operationId: checkValidation
      parameters:
      - description: Test identifier
        explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Report ready.
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Operation not allowed. User needs to be able to edit the resource.
        "201":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Report not ready.
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Report id not found.
      summary: Check the status of validation with the INSPIRE service.
      tags:
      - records
      x-accepts: application/json
  /records/index:
    get:
      description: Index a set of records provided either by a bucket or a list of
        uuids
      operationId: index_1
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                properties:
                  nullObject:
                    type: boolean
                  array:
                    type: boolean
                  empty:
                    type: boolean
                type: object
          description: Operation not allowed. Only Administrators can access it.
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                properties:
                  nullObject:
                    type: boolean
                  array:
                    type: boolean
                  empty:
                    type: boolean
                type: object
          description: Record indexed.
      summary: Index a set of records
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/attachments/{resourceId}:
    get:
      operationId: getResource
      parameters:
      - description: The metadata UUID
        example: 43d7c186-2187-4bcd-8843-41e575a5ef56
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The resource identifier (ie. filename)
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      - description: Use approved version or not
        example: true
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Size (only applies to images). From 1px to 2048px.
        example: 200
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            '*/*':
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: Operation not allowed. User needs to be able to download the
            resource.
        "201":
          content:
            '*/*':
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: Record attachment.
      summary: Get a metadata resource
      tags:
      - records
      x-accepts: application/json
    patch:
      operationId: patchResource
      parameters:
      - description: The metadata UUID
        example: 43d7c186-2187-4bcd-8843-41e575a5ef56
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The resource identifier (ie. filename)
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The visibility
        example: public
        explode: true
        in: query
        name: visibility
        required: true
        schema:
          enum:
          - public
          - private
          type: string
        style: form
      - description: Use approved version or not
        example: true
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Attachment visibility updated.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Update the metadata resource visibility
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/attachments:
    get:
      description: <a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/associating-resources/using-filestore.html'>More
        info</a>
      operationId: getAllResources
      parameters:
      - description: The metadata UUID
        example: 43d7c186-2187-4bcd-8843-41e575a5ef56
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Sort by
        example: type
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name
          enum:
          - type
          - name
          type: string
        style: form
      - description: Use approved version or not
        example: true
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          default: '*.*'
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataResource'
                type: array
          description: Return the record attachments.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataResource'
                type: array
          description: Operation not allowed. User needs to be able to view the resource.
      summary: List all metadata attachments
      tags:
      - records
      x-accepts: application/json
    post:
      operationId: putResource
      parameters:
      - description: The metadata UUID
        example: 43d7c186-2187-4bcd-8843-41e575a5ef56
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The sharing policy
        example: public
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          default: public
          enum:
          - public
          - private
          type: string
        style: form
      - description: Use approved version or not
        example: true
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
        description: The file to upload
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Operation not allowed. User needs to be able to edit the resource.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Attachment uploaded.
      summary: Create a new resource for a given metadata
      tags:
      - records
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: putResourceFromURL
      parameters:
      - description: The metadata UUID
        example: 43d7c186-2187-4bcd-8843-41e575a5ef56
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The sharing policy
        example: public
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          default: public
          enum:
          - public
          - private
          type: string
        style: form
      - description: The URL to load in the store
        explode: true
        in: query
        name: url
        required: true
        schema:
          format: url
          type: string
        style: form
      - description: Use approved version or not
        example: true
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Attachment added.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataResource'
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Create a new resource from a URL for a given metadata
      tags:
      - records
      x-accepts: application/json
  /me:
    get:
      description: If not authenticated, return status 204 (NO_CONTENT), else return
        basic user information. This operation is usually used to know if current
        user is authenticated or not.It returns also info about groups and profiles.
      operationId: getMe
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeResponse'
          description: Authenticated. Return user details.
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeResponse'
          description: Not authenticated.
      summary: Get information about me
      tags:
      - me
      x-accepts: application/json
  /user/actions/register:
    put:
      description: User is created with a registered user profile. username field
        is ignored and the email is used as username. Password is sent by email. Catalog
        administrator is also notified.
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterDto'
        description: User details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            text/plain:
              schema:
                type: string
          description: Created
      summary: Create user account
      tags:
      - users
      x-contentType: application/json
      x-accepts: application/json
  /users/{userIdentifier}:
    delete:
      description: Deletes a catalog user by identifier.
      operationId: deleteUser
      parameters:
      - description: User identifier.
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Delete a user
      tags:
      - users
      x-accepts: application/json
    get:
      operationId: getUser
      parameters:
      - description: User identifier.
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get user
      tags:
      - users
      x-accepts: application/json
    put:
      description: Updates a catalog user.
      operationId: updateUser
      parameters:
      - description: User identifier.
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Update a user
      tags:
      - users
      x-contentType: application/json
      x-accepts: application/json
  /users:
    get:
      operationId: getUsers
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: OK
      summary: Get users
      tags:
      - users
      x-accepts: application/json
    put:
      description: Creates a catalog user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Creates a user
      tags:
      - users
      x-contentType: application/json
      x-accepts: application/json
  /users/{userIdentifier}/actions/forget-password:
    post:
      description: Resets the user password.
      operationId: resetUserPassword
      parameters:
      - description: User identifier.
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Password to change.
        explode: true
        in: query
        name: password
        required: true
        schema:
          type: string
        style: form
      - description: Password to change (repeat).
        explode: true
        in: query
        name: password2
        required: true
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Resets user password
      tags:
      - users
      x-accepts: application/json
  /users/{userIdentifier}/groups:
    get:
      description: Retrieve the user groups.
      operationId: retrieveUserGroups
      parameters:
      - description: User identifier.
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroup'
                type: array
          description: OK
      summary: Retrieve user groups
      tags:
      - users
      x-accepts: application/json
  /users/{userIdentifier}.png:
    get:
      operationId: getUserIdenticon
      parameters:
      - description: User identifier.
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Size.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 18
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: OK
      summary: Get user identicon
      tags:
      - users
      x-accepts: application/json
  /groups/{groupIdentifier}:
    delete:
      description: Remove a group by first removing sharing settings, link to users
        and finally reindex all affected records.
      operationId: deleteGroup
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: groupIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Force removal even if records are assigned to that group.
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "403":
          description: Operation not allowed. Only UserAdmins can access it.
        "204":
          description: Group removed.
      summary: Remove a group
      tags:
      - groups
      x-accepts: application/json
    get:
      description: Return the requested group details.
      operationId: getGroup
      parameters:
      - description: Group identifier
        explode: false
        in: path
        name: groupIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Resource not found.
      summary: Get group
      tags:
      - groups
      x-accepts: application/json
    put:
      operationId: updateGroup
      parameters:
      - description: Group identifier
        explode: false
        in: path
        name: groupIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "403":
          description: Operation not allowed. Only UserAdmins can access it.
        "204":
          description: Group updated.
      summary: Update a group
      tags:
      - groups
      x-contentType: application/json
      x-accepts: application/json
  /groups:
    get:
      description: The catalog contains one or more groups. By default, there is 3
        reserved groups (Internet, Intranet, Guest) and a sample group.<br/>This service
        returns all catalog groups when not authenticated or when current is user
        is an administrator. The list can contains or not reserved groups depending
        on the parameters.<br/>When authenticated, return user groups optionally filtered
        on a specific user profile.
      operationId: getGroups
      parameters:
      - description: Including Internet, Intranet, Guest groups or not
        explode: true
        in: query
        name: withReservedGroup
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: For a specific profile
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: OK
      summary: Get groups
      tags:
      - groups
      x-accepts: application/json
    put:
      description: Return the identifier of the group created.
      operationId: addGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Operation not allowed. Only UserAdmins can access it.
        "400":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Group with that id or name already exist.
        "201":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Group created.
      summary: Add a group
      tags:
      - groups
      x-contentType: application/json
      x-accepts: application/json
  /groups/{groupIdentifier}/users:
    get:
      operationId: getGroupUsers
      parameters:
      - description: Group identifier
        explode: false
        in: path
        name: groupIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Resource not found.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Operation not allowed. Only UserAdmins can access it.
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: List of users in that group.
      summary: Get group users
      tags:
      - groups
      x-accepts: application/json
  /selections/{bucket}:
    delete:
      operationId: clear
      parameters:
      - description: Selection bucket name
        example: metadata
        explode: false
        in: path
        name: bucket
        required: true
        schema:
          type: string
        style: simple
      - description: One or more record UUIDs
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
      summary: Clear selection or remove items
      tags:
      - selections
      x-accepts: application/json
    get:
      operationId: get
      parameters:
      - description: Bucket name
        example: metadata
        explode: false
        in: path
        name: bucket
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: OK
      summary: Get current selection
      tags:
      - selections
      x-accepts: application/json
    put:
      operationId: add
      parameters:
      - description: Bucket name
        example: metadata
        explode: false
        in: path
        name: bucket
        required: true
        schema:
          type: string
        style: simple
      - description: 'One or more record UUIDs. If null, select all in current search
          if bucket name is ''metadata'' (TODO: remove this limitation?).'
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
      summary: Select one or more items
      tags:
      - selections
      x-accepts: application/json
  /userfeedback/{uuid}:
    delete:
      description: Removes a user feedback
      operationId: deleteUserFeedback
      parameters:
      - description: User feedback UUID.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "204":
          content:
            application/json:
              schema:
                type: string
          description: User feedback removed.
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only Reviewvers can access it.
      summary: Removes a user feedback
      tags:
      - userfeedback
      x-accepts: application/json
    get:
      operationId: getUserComment
      parameters:
      - description: User feedback UUID.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedbackDTO'
          description: OK
      summary: Finds a specific user feedback
      tags:
      - userfeedback
      x-accepts: application/json
  /userfeedback/ratingcriteria:
    get:
      operationId: getRatingCriteria
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RatingCriteria'
                type: array
          description: OK
      summary: Get list of rating criteria
      tags:
      - userfeedback
      x-accepts: application/json
  /records/{metadataUuid}/userfeedbackrating:
    get:
      operationId: getMetadataRating
      parameters:
      - description: Metadata record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingAverage'
          description: OK
      summary: Provides an average rating for a metadata record
      tags:
      - userfeedback
      x-accepts: application/json
  /userfeedback:
    get:
      description: ' This list will include also the draft user feedback if the client
        is logged as reviewer.'
      operationId: getUserComments
      parameters:
      - description: Metadata record UUID.
        explode: true
        in: query
        name: metadataUuid
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Maximum number of feedback to return.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserFeedbackDTO'
                type: array
          description: OK
      summary: 'Finds a list of user feedback records. '
      tags:
      - userfeedback
      x-accepts: application/json
    post:
      description: Creates a user feedback in draft status if the user is not logged
        in.
      operationId: newUserFeedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedbackDTO'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
      summary: Creates a user feedback
      tags:
      - userfeedback
      x-contentType: application/json
      x-accepts: application/json
  /records/{metadataUuid}/userfeedback:
    get:
      description: ' This list will include also the draft user feedback if the client
        is logged as reviewer.'
      operationId: getUserCommentsOnARecord
      parameters:
      - description: Metadata record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of feedback to return.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserFeedbackDTO'
                type: array
          description: OK
      summary: 'Finds a list of user feedback for a specific records. '
      tags:
      - userfeedback
      x-accepts: application/json
  /records/{metadataUuid}/alert:
    post:
      operationId: sendEmailToContact
      parameters:
      - description: Metadata record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Recaptcha validation key.
        explode: true
        in: query
        name: recaptcha
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: User name.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: User organisation.
        explode: true
        in: query
        name: org
        required: true
        schema:
          type: string
        style: form
      - description: User email address.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      - description: A comment or question.
        explode: true
        in: query
        name: comments
        required: true
        schema:
          type: string
        style: form
      - description: User phone number.
        explode: true
        in: query
        name: phone
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Email subject.
        explode: true
        in: query
        name: subject
        required: false
        schema:
          default: User feedback
          type: string
        style: form
      - description: User function.
        explode: true
        in: query
        name: function
        required: false
        schema:
          default: '-'
          type: string
        style: form
      - description: Comment type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: '-'
          type: string
        style: form
      - description: Comment category.
        explode: true
        in: query
        name: category
        required: false
        schema:
          default: '-'
          type: string
        style: form
      - description: List of record's contact to send this email.
        explode: true
        in: query
        name: metadataEmail
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
      summary: Send an email to catalogue administrator or record's contact
      tags:
      - userfeedback
      x-accepts: application/json
  /userfeedback/{uuid}/publish:
    get:
      description: For reviewers
      operationId: publishFeedback
      parameters:
      - description: User feedback UUID.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Resource not found.
        "204":
          content:
            application/json:
              schema:
                type: string
          description: User feedback published.
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only Reviewvers can access it.
      summary: Publishes a feedback
      tags:
      - userfeedback
      x-accepts: application/json
  /records/duplicate:
    put:
      description: Create a record from a template or by copying an existing record.Return
        the UUID of the newly created record. Existing links in the source record
        are preserved, this means that the new record may contains link to the source
        attachments. They need to be manually updated after creation.
      operationId: create
      parameters:
      - description: The type of record.
        explode: true
        in: query
        name: metadataType
        required: false
        schema:
          default: METADATA
          enum:
          - METADATA
          - TEMPLATE
          - SUB_TEMPLATE
          - TEMPLATE_OF_SUB_TEMPLATE
          type: string
        style: form
      - description: UUID of the source record to copy.
        explode: true
        in: query
        name: sourceUuid
        required: true
        schema:
          type: string
        style: form
      - description: Assign a custom UUID. If this UUID already exist an error is
          returned. This is enabled only if metadata create / generate UUID settings
          is activated.
        explode: true
        in: query
        name: targetUuid
        required: false
        schema:
          type: string
        style: form
      - description: The group the record is attached to.
        explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      - description: Is published to all user group members? If not, only the author
          and administrator can edit the record.
        explode: true
        in: query
        name: isVisibleByAllGroupMembers
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Tags to assign to the record.
        explode: true
        in: query
        name: category
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Copy categories from source?
        explode: true
        in: query
        name: hasCategoryOfSource
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Is child of the record to copy?
        explode: true
        in: query
        name: isChildOfSource
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Return the internal id of the newly created record.
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only Editors can access it.
      summary: Create a new record
      tags:
      - records
      x-accepts: application/json
  /records/importfrommap:
    post:
      description: Add record in the catalog by uploading a map context.
      operationId: insertOgcMapContextFile
      parameters:
      - description: A map title
        explode: true
        in: query
        name: title
        required: true
        schema:
          type: string
        style: form
      - description: A map abstract
        explode: true
        in: query
        name: recordAbstract
        required: false
        schema:
          type: string
        style: form
      - description: OGC OWS context as string
        explode: true
        in: query
        name: xml
        required: false
        schema:
          type: string
        style: form
      - description: OGC OWS context file name
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      - description: OGC OWS context URL
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      - description: A map viewer URL to visualize the map
        explode: true
        in: query
        name: viewerUrl
        required: false
        schema:
          type: string
        style: form
      - description: Map overview as PNG (base64 encoded)
        explode: true
        in: query
        name: overview
        required: false
        schema:
          type: string
        style: form
      - description: Map overview filename
        explode: true
        in: query
        name: overviewFilename
        required: false
        schema:
          type: string
        style: form
      - description: Topic category
        explode: true
        in: query
        name: topic
        required: false
        schema:
          type: string
        style: form
      - description: Publish record.
        explode: true
        in: query
        name: publishToAll
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Record identifier processing.
        explode: true
        in: query
        name: uuidProcessing
        required: false
        schema:
          default: NOTHING
          enum:
          - GENERATEUUID
          - NOTHING
          - OVERWRITE
          type: string
        style: form
      - description: The group the record is attached to.
        explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Report about imported records.
      summary: Add a map metadata record from OGC OWS context
      tags:
      - records
      x-accepts: application/json
  /processes/reports:
    delete:
      operationId: delete
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          description: Operation not allowed. Only authenticated user can access it.
        "204":
          description: Report registry cleared.
      summary: Clear process reports list
      tags:
      - processes
      x-accepts: application/json
    get:
      description: When processing, the report is stored in memory and allows to retrieve
        progress repport during processing. Usually, process reports are returned
        by the synchronous processing operation.
      operationId: getProcessReport
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProcessingReport'
                type: array
          description: List of reports returned.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProcessingReport'
                type: array
          description: Operation not allowed. Only authenticated user can access it.
      summary: Get current process reports
      tags:
      - processes
      x-accepts: application/json
  /processes/search-and-replace:
    post:
      description: |-
        Service to apply replacements to one or more records.
         To define a replacement, send the following parameters:
         * mdsection-139815551372=metadata
         * mdfield-1398155513728=id.contact.individualName
         * replaceValue-1398155513728=Juan
         * searchValue-1398155513728=Jose

        TODO: Would be good to provide a simple object to define list of changes instead of group of parameters.<br/>Batch editing can also be used for similar works.
      operationId: searchAndReplace
      parameters:
      - explode: true
        in: query
        name: process
        required: false
        schema:
          default: massive-content-update
          type: string
        style: form
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: Test only (ie. metadata are not saved). Return the report only.
        explode: true
        in: query
        name: isTesting
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Case insensitive search.
        explode: true
        in: query
        name: isCaseInsensitive
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: '''record'' to apply vacuum.xsl, ''element'' to remove empty
          elements. Empty to not affect empty elements.'
        explode: true
        in: query
        name: vacuumMode
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataReplacementProcessingReport'
          description: Replacements applied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataReplacementProcessingReport'
          description: Operation not allowed. Only Editors can access it.
      summary: Search and replace values in one or more records
      tags:
      - processes
      x-accepts: application/json
  /user/{username}/actions/forgot-password:
    get:
      description: An email is sent to the requested user with a link to reset his
        password. User MUST have an email to get the link. LDAP users will not be
        able to retrieve their password using this service.
      operationId: sendPasswordByEmail
      parameters:
      - description: The user name
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            text/plain:
              schema:
                type: string
          description: Created
      summary: Send user password reminder by email
      tags:
      - users
      x-accepts: application/json
  /user/{username}:
    patch:
      description: Get a valid changekey by email first and then update your password.
      operationId: updatePassword
      parameters:
      - description: The user name
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdateParameter'
        description: The new password and a valid change key
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            text/plain:
              schema:
                type: string
          description: Created
      summary: Update user password
      tags:
      - users
      x-contentType: application/json
      x-accepts: application/json
  /users/owners:
    get:
      description: Return users who actually owns one or more records.
      operationId: getRecordOwners
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OwnerResponse'
                type: array
          description: OK
      summary: Get owners
      tags:
      - users
      x-accepts: application/json
    put:
      operationId: saveOwners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Transfer privileges
      tags:
      - users
      x-contentType: application/json
      x-accepts: application/json
  /users/groups:
    get:
      operationId: retrieveAllUserGroups
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupsResponse'
                type: array
          description: OK
      summary: Retrieve all user groups
      tags:
      - users
      x-accepts: application/json
  /tools/migration/steps/{stepName}:
    put:
      operationId: callStep
      parameters:
      - description: Class name to execute corresponding to a migration step. See
          DatabaseMigrationTask.
        example: org.fao.geonet.api.records.attachments.MetadataResourceDatabaseMigration
        explode: false
        in: path
        name: stepName
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            text/plain:
              schema:
                type: string
          description: Created
      summary: Call a migration step
      tags:
      - tools
      x-accepts: application/json
  /operations:
    get:
      description: Return the list of operations. Operations are used to define authorization
        per group. Extending the list of default operations (ie. view, dynamic, download,
        editing, notify, featured) might be feasible but is experimental.<br/> Featured
        is not really used anymore (was used in past version for home page highlights).
      operationId: getOperations
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Operation'
                type: array
          description: OK
      summary: Get operations
      tags:
      - operations
      x-accepts: application/json
  /status/{type}:
    get:
      operationId: getStatusByType
      parameters:
      - description: Type
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - workflow
          - task
          - event
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusValue'
                type: array
          description: OK
      summary: Get status by type
      tags:
      - status
      x-accepts: application/json
  /status:
    get:
      operationId: getStatusList
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusValue'
                type: array
          description: OK
      summary: Get status
      tags:
      - status
      x-accepts: application/json
  /usersearches:
    get:
      operationId: getUserCustomSearches
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSearchDto'
                type: array
          description: OK
      summary: Get user custom searches
      tags:
      - usersearches
      x-accepts: application/json
    put:
      description: Creates a user search.
      operationId: createUserCustomSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSearchDto'
        description: User search details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: User search created.
      summary: Creates a user search
      tags:
      - usersearches
      x-contentType: application/json
      x-accepts: application/json
  /usersearches/all:
    get:
      operationId: getAllUserCustomSearches
      parameters:
      - description: Featured type search.
        explode: true
        in: query
        name: featuredType
        required: false
        schema:
          enum:
          - HOME
          - EDITOR_BOARD
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSearchDto'
                type: array
          description: OK
      summary: Get user custom searches for all users (no paginated)
      tags:
      - usersearches
      x-accepts: application/json
  /usersearches/allpaginated:
    get:
      operationId: getAllUserCustomSearchesPage
      parameters:
      - description: Featured  type search.
        explode: true
        in: query
        name: featuredType
        required: false
        schema:
          enum:
          - HOME
          - EDITOR_BOARD
          type: string
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: From page
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Number of records to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSearchResponse'
          description: OK
      summary: Get user custom searches for all users (paginated)
      tags:
      - usersearches
      x-accepts: application/json
  /usersearches/featured:
    get:
      operationId: getFeaturedUserCustomSearches
      parameters:
      - description: Number of records to return
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - HOME
          - EDITOR_BOARD
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSearchDto'
                type: array
          description: OK
      summary: Get featured user custom searches
      tags:
      - usersearches
      x-accepts: application/json
  /usersearches/{searchIdentifier}:
    delete:
      description: Deletes a user search by identifier.
      operationId: deleteUserCustomSerach
      parameters:
      - description: Search identifier.
        explode: false
        in: path
        name: searchIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Delete a user search
      tags:
      - usersearches
      x-accepts: application/json
    get:
      operationId: getUserCustomSearch
      parameters:
      - description: User search identifier
        explode: false
        in: path
        name: searchIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchDto'
          description: OK
      summary: Get custom search
      tags:
      - usersearches
      x-accepts: application/json
    put:
      operationId: updateCustomUserSearch
      parameters:
      - description: User search identifier
        explode: false
        in: path
        name: searchIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSearchDto'
        description: User search details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "204":
          description: User search  updated.
      summary: Update a user search
      tags:
      - usersearches
      x-contentType: application/json
      x-accepts: application/json
  /logos:
    get:
      description: Logos are used for the catalog, the groups logos, and harvester
        icons. Logos are stored in the data directory in <dataDirectory>/resources/images/harvesting.<br/>
        Records are attached to a source. A source can be the local catalog or a harvester
        node. When a source is created, its logo is located in the images/logos folder
        with the source UUID as filename. For some sources the logo can be automatically
        retrieved (eg. when harvesting GeoNetwork catalogs). For others, the logo
        is usually manually defined when configuring the harvester.
      operationId: getLogos
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: OK
      summary: Get all logos
      tags:
      - logos
      x-accepts: application/json
    post:
      operationId: addLogo
      parameters:
      - description: The logo image to upload
        explode: true
        in: query
        name: file
        required: true
        schema:
          items:
            format: binary
            type: string
          type: array
        style: form
      - description: Overwrite if exists
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only UserAdmins can access it.
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Logo added.
      summary: Add a logo
      tags:
      - logos
      x-accepts: application/json
  /logos/{file}:
    delete:
      operationId: deleteLogo
      parameters:
      - description: The logo filename to delete
        explode: false
        in: path
        name: file
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "403":
          description: Operation not allowed. Only UserAdmins can access it.
        "204":
          description: Logo removed.
      summary: Remove a logo
      tags:
      - logos
      x-accepts: application/json
  /site/logging/activity:
    get:
      operationId: getLastActivity
      parameters:
      - description: Number of lines to return
        explode: true
        in: query
        name: lines
        required: false
        schema:
          default: 2000
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Get last activity
      tags:
      - site
      x-accepts: application/json
  /site/logging:
    get:
      operationId: getLogFiles
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogFileResponse'
                type: array
          description: OK
      summary: Get log files
      tags:
      - site
      x-accepts: application/json
  /site/logging/activity/zip:
    get:
      operationId: getLastActivityInAZip
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: OK
      summary: Get last activity in a ZIP
      tags:
      - site
      x-accepts: application/json
  /userselections/{selectionIdentifier}/{userIdentifier}:
    delete:
      operationId: deleteFromUserSelection
      parameters:
      - description: Selection identifier
        explode: false
        in: path
        name: selectionIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: User identifier
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: One or more record UUIDs. If null, remove all.
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only UserAdmins can access it.
        "204":
          content:
            application/json:
              schema:
                type: string
          description: Items removed from a set.
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Selection or user not found.
      summary: Remove items to a user selection set
      tags:
      - userselections
      x-accepts: application/json
    get:
      operationId: getSelectionRecords
      parameters:
      - description: Selection identifier
        explode: false
        in: path
        name: selectionIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: User identifier
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get record in a user selection set
      tags:
      - userselections
      x-accepts: application/json
    put:
      operationId: addToUserSelection
      parameters:
      - description: Selection identifier
        explode: false
        in: path
        name: selectionIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: User identifier
        explode: false
        in: path
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: One or more record UUIDs.
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only UserAdmins can access it.
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Selection or user or at least one UUID not found.
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Records added to selection set.
      summary: Add items to a user selection set
      tags:
      - userselections
      x-accepts: application/json
  /userselections:
    get:
      operationId: getSelectionList
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Selection'
                type: array
          description: OK
      summary: Get list of user selection sets
      tags:
      - userselections
      x-accepts: application/json
    put:
      operationId: createPersistentSelectionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selection'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Operation not allowed. Only UserAdmins can access it.
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Selection created.
        "400":
          content:
            application/json:
              schema:
                type: string
          description: A selection with that id or name already exist.
      summary: Add a user selection set
      tags:
      - userselections
      x-contentType: application/json
      x-accepts: application/json
  /standards/{schema}/batchconfiguration:
    get:
      operationId: getConfiguration
      parameters:
      - description: Schema identifier
        example: iso19139
        explode: false
        in: path
        name: schema
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/BatchEditing'
                type: object
          description: OK
      summary: Get batch editor configuration for a standard
      tags:
      - standards
      x-accepts: application/json
  /standards/batchconfiguration:
    get:
      operationId: getConfigurations
      parameters:
      - description: Schema identifiers
        example: iso19139
        explode: true
        in: query
        name: schema
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/BatchEditing'
                type: object
          description: Batch editor configuration.
      summary: Get batch editor configuration for standards
      tags:
      - standards
      x-accepts: application/json
  /standards/reload:
    get:
      operationId: reloadSchema
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: Standards reloaded.
      summary: Reload standards
      tags:
      - standards
      x-accepts: application/json
  /standards/{schema}/descriptors/{element}/details:
    get:
      operationId: getElementDetails
      parameters:
      - description: Schema identifier
        example: iso19139
        explode: false
        in: path
        name: schema
        required: true
        schema:
          type: string
        style: simple
      - description: Descriptor name
        explode: false
        in: path
        name: element
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: parent
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: displayIf
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: xpath
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: isoType
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element'
            application/xml:
              schema:
                $ref: '#/components/schemas/Element'
          description: OK
      summary: Get descriptor details
      tags:
      - standards
      x-accepts: application/json
  /standards/{schema}/editor/associatedpanel/config/{name}.json:
    get:
      operationId: getEditorAssociatedPanelConfiguration
      parameters:
      - description: Schema identifier
        example: iso19139
        explode: false
        in: path
        name: schema
        required: true
        schema:
          type: string
        style: simple
      - description: Configuration identifier
        example: default
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Get editor associated resources panel configuration
      tags:
      - standards
      x-accepts: application/json
  /standards/{schema}/codelists/{codelist}:
    get:
      operationId: getSchemaTranslations
      parameters:
      - description: Schema identifier
        example: iso19139
        explode: false
        in: path
        name: schema
        required: true
        schema:
          type: string
        style: simple
      - description: Codelist element name or alias
        explode: false
        in: path
        name: codelist
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: parent
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: displayIf
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: xpath
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: isoType
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: Get codelist translations
      tags:
      - standards
      x-accepts: application/json
  /standards/{schema}/codelists/{codelist}/details:
    get:
      operationId: getSchemaCodelistsWithDetails
      parameters:
      - description: Schema identifier
        example: iso19139
        explode: false
        in: path
        name: schema
        required: true
        schema:
          type: string
        style: simple
      - description: Codelist element name or alias
        explode: false
        in: path
        name: codelist
        required: true
        schema:
          type: string
        style: simple
      - description: Parent name with namespace which may indicate a more precise
          label as defined in context attribute.
        explode: true
        in: query
        name: parent
        required: false
        schema:
          type: string
        style: form
      - description: Display if condition as defined in the codelist.xml file. Allows
          to select a more precise codelist when more than one is defined for same
          name.
        explode: true
        in: query
        name: displayIf
        required: false
        schema:
          type: string
        style: form
      - description: XPath of the element to target which may indicate a more precise
          label as defined in context attribute.
        explode: true
        in: query
        name: xpath
        required: false
        schema:
          type: string
        style: form
      - description: 'ISO type of the element to target which may indicate a more
          precise label as defined in context attribute. (Same as context. TODO: Deprecate
          ?)'
        explode: true
        in: query
        name: isoType
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Codelist'
            application/xml:
              schema:
                $ref: '#/components/schemas/Codelist'
          description: OK
      summary: Get codelist details
      tags:
      - standards
      x-accepts: application/json
  /standards:
    get:
      operationId: getStandardConfigurations
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataSchema'
                type: array
          description: List of standards.
      summary: Get standards
      tags:
      - standards
      x-accepts: application/json
  /search/records/_search:
    post:
      description: See https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html
        for search parameters details.
      operationId: search
      parameters:
      - explode: true
        in: query
        name: bucket
        required: false
        schema:
          default: metadata
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: JSON request based on Elasticsearch API.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
          description: OK
      summary: Search endpoint
      tags:
      - search
      x-contentType: application/json
      x-accepts: application/json
  /tools/ogc/sld:
    delete:
      description: Clean all SLD generated previously
      operationId: deteleSLD
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: OK
      summary: Remove all SLD files
      tags:
      - tools
      x-accepts: application/json
    get:
      operationId: getSLD
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get the list of SLD available
      tags:
      - tools
      x-accepts: application/json
    post:
      description: Get the currend SLD for the requested layers, add new filters in,
        save the SLD and return the new SLD URL.
      operationId: buildSLD
      parameters:
      - description: The WMS server URL
        explode: true
        in: query
        name: url
        required: true
        schema:
          type: string
        style: form
      - description: The layers
        explode: true
        in: query
        name: layers
        required: true
        schema:
          type: string
        style: form
      - description: The filters in JSON
        explode: true
        in: query
        name: filters
        required: true
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            text/plain:
              schema:
                type: string
          description: Created
      summary: Generate a SLD with a new filter
      tags:
      - tools
      x-accepts: application/json
  /related:
    get:
      description: Retrieve related services, datasets, onlines, thumbnails, sources,
        ... to all requested records.<br/><a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/associating-resources/index.html'>More
        info</a>
      operationId: getAssociatedResourcesForRecords
      parameters:
      - description: Type of related resource. If none, all resources are returned.
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - children
            - parent
            - brothersAndSisters
            - siblings
            - associated
            - services
            - datasets
            - fcats
            - hasfeaturecats
            - sources
            - hassources
            - related
            - onlines
            - thumbnails
            type: string
          type: array
        style: form
      - description: Uuids of the metadatas you request the relations from.
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/RelatedResponse'
                type: object
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/RelatedResponse'
                type: object
          description: Return the associated resources.
        "403":
          content:
            application/xml:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/RelatedResponse'
                type: object
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/RelatedResponse'
                type: object
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get record related resources for all requested metadatas
      tags:
      - related
      x-accepts: application/json
  /registries/entries/{uuid}:
    get:
      description: Directory entry (AKA subtemplates) are XML fragments that can be
        inserted in metadata records using XLinks. XLinks can be remote or local.
      operationId: getEntry
      parameters:
      - description: Directory entry UUID.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Process
        explode: true
        in: query
        name: process
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transformation
        explode: true
        in: query
        name: transformation
        required: false
        schema:
          type: string
        style: form
      - description: lang
        explode: true
        in: query
        name: lang
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: schema
        explode: true
        in: query
        name: schema
        required: false
        schema:
          default: iso19139
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Element'
          description: Directory entry.
        "403":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Element'
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get a directory entry
      tags:
      - registries
      x-accepts: application/json
  /registries/crs:
    get:
      description: Based on GeoTools EPSG database. If phrase query, each words are
        searched separately.
      operationId: searchCrs
      parameters:
      - description: Search value
        explode: true
        in: query
        name: q
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Type of CRS
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - CoordinateReferenceSystem
          - VerticalCRS
          - GeographicCRS
          - ProjectedCRS
          type: string
        style: form
      - description: 'Number of results. Default is: 100'
        explode: true
        in: query
        name: rows
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crs'
                type: array
          description: List of CRS.
      summary: Search coordinate reference system (CRS)
      tags:
      - registries
      x-accepts: application/json
  /registries/crs/types:
    get:
      operationId: getCrsTypes
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  enum:
                  - CoordinateReferenceSystem
                  - VerticalCRS
                  - GeographicCRS
                  - ProjectedCRS
                  type: string
                type: array
          description: List of CRS types.
      summary: Get list of CRS type
      tags:
      - registries
      x-accepts: application/json
  /registries/crs/{id}:
    get:
      operationId: getCrs
      parameters:
      - description: CRS identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crs'
            application/xml:
              schema:
                $ref: '#/components/schemas/Crs'
          description: CRS not found.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crs'
            application/xml:
              schema:
                $ref: '#/components/schemas/Crs'
          description: CRS details.
      summary: Get CRS
      tags:
      - registries
      x-accepts: application/json
  /registries/vocabularies/search:
    get:
      operationId: searchKeywords
      parameters:
      - description: Query
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Query in that language
        explode: true
        in: query
        name: lang
        required: false
        schema:
          default: eng
          type: string
        style: form
      - description: Number of rows
        explode: true
        in: query
        name: rows
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      - description: Start from
        explode: true
        in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Return keyword information in one or more languages
        explode: true
        in: query
        name: pLang
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Thesaurus identifier
        explode: true
        in: query
        name: thesaurus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Type of search
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: CONTAINS
          enum:
          - STARTS_WITH
          - CONTAINS
          - MATCH
          type: string
        style: form
      - description: URI query
        explode: true
        in: query
        name: uri
        required: false
        schema:
          type: string
        style: form
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: DESC
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeywordBean'
                type: array
          description: OK
      summary: Search keywords
      tags:
      - registries
      x-accepts: application/json
  /registries/vocabularies/keyword:
    get:
      description: Retrieve XML representation of keyword(s) from same thesaurususing
        different transformations. 'to-iso19139-keyword' is the default and return
        an ISO19139 snippet.'to-iso19139-keyword-as-xlink' return an XLinked element.
        Custom transformation can be create on a per schema basis.
      operationId: getKeywordById
      parameters:
      - description: Keyword identifier or list of keyword identifiers comma separated.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: Thesaurus to look info for the keyword(s).
        explode: true
        in: query
        name: thesaurus
        required: true
        schema:
          type: string
        style: form
      - description: Languages.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only print the keyword, no thesaurus information.
        explode: true
        in: query
        name: keywordOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: XSL template to use (ISO19139 keyword by default, see convert.xsl).
        explode: true
        in: query
        name: transformation
        required: false
        schema:
          type: string
        style: form
      - description: langMap, that converts the values in the 'lang' parameter to
          how they will be actually represented in the record. {'fre':'fra'} or {'fre':'fr'}.  Missing/empty
          means to convert to iso 2 letter.
        explode: true
        in: query
        name: langMap
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Element'
          description: XML snippet with requested keywords.
      summary: Get keyword by id
      tags:
      - registries
      x-accepts: application/json
  /registries/vocabularies/{thesaurus}:
    delete:
      description: Delete a thesaurus.
      operationId: deleteThesaurus
      parameters:
      - description: Thesaurus to delete.
        explode: false
        in: path
        name: thesaurus
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "403":
          description: Operation not allowed. Only UserAdmins can access it.
        "200":
          description: Thesaurus deleted.
      summary: Delete a thesaurus by name
      tags:
      - registries
      x-accepts: application/json
    get:
      description: Download the thesaurus in SKOS format.
      operationId: getThesaurus
      parameters:
      - description: Thesaurus to download.
        explode: false
        in: path
        name: thesaurus
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "200":
          description: Thesaurus in SKOS format.
      summary: Download a thesaurus by name
      tags:
      - registries
      x-accepts: application/json
  /registries/vocabularies:
    post:
      description: Uploads a new thesaurus.
      operationId: uploadThesaurus
      parameters:
      - description: Local or external (default).
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: external
          type: string
        style: form
      - description: Type of thesaurus, usually one of the ISO thesaurus type codelist
          value. Default is theme.
        explode: true
        in: query
        name: dir
        required: false
        schema:
          default: theme
          type: string
        style: form
      - description: XSL to be use to convert the thesaurus before load. Default _none_.
        explode: true
        in: query
        name: stylesheet
        required: false
        schema:
          default: _none_
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
        description: If set, do a file upload.
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            text/xml:
              schema:
                type: string
          description: Thesaurus uploaded in SKOS format.
        "403":
          content:
            text/xml:
              schema:
                type: string
          description: Operation not allowed. Only Reviewvers can access it.
      summary: Uploads a new thesaurus from a file
      tags:
      - registries
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Uploads a new thesaurus.
      operationId: uploadThesaurusFromUrl
      parameters:
      - description: If set, try to download from the Internet.
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      - description: If set, try to download from a registry.
        explode: true
        in: query
        name: registryUrl
        required: false
        schema:
          type: string
        style: form
      - description: Languages to download from a registry.
        explode: true
        in: query
        name: registryLanguage
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Local or external (default).
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: external
          type: string
        style: form
      - description: Type of thesaurus, usually one of the ISO thesaurus type codelist
          value. Default is theme.
        explode: true
        in: query
        name: dir
        required: false
        schema:
          default: theme
          type: string
        style: form
      - description: XSL to be use to convert the thesaurus before load. Default _none_.
        explode: true
        in: query
        name: stylesheet
        required: false
        schema:
          default: _none_
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            text/xml:
              schema:
                type: string
          description: Thesaurus uploaded in SKOS format.
        "403":
          content:
            text/xml:
              schema:
                type: string
          description: Operation not allowed. Only Reviewvers can access it.
      summary: Uploads a new thesaurus from URL or Registry
      tags:
      - registries
      x-accepts: application/json
  /harvesters/{harvesterUuid}/assign:
    post:
      operationId: assignHarvestedRecordToSource
      parameters:
      - description: The harvester UUID
        explode: false
        in: path
        name: harvesterUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The target source UUID
        explode: true
        in: query
        name: source
        required: true
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                enum:
                - 100 CONTINUE
                - 101 SWITCHING_PROTOCOLS
                - 102 PROCESSING
                - 103 CHECKPOINT
                - 200 OK
                - 201 CREATED
                - 202 ACCEPTED
                - 203 NON_AUTHORITATIVE_INFORMATION
                - 204 NO_CONTENT
                - 205 RESET_CONTENT
                - 206 PARTIAL_CONTENT
                - 207 MULTI_STATUS
                - 208 ALREADY_REPORTED
                - 226 IM_USED
                - 300 MULTIPLE_CHOICES
                - 301 MOVED_PERMANENTLY
                - 302 FOUND
                - 302 MOVED_TEMPORARILY
                - 303 SEE_OTHER
                - 304 NOT_MODIFIED
                - 305 USE_PROXY
                - 307 TEMPORARY_REDIRECT
                - 308 PERMANENT_REDIRECT
                - 400 BAD_REQUEST
                - 401 UNAUTHORIZED
                - 402 PAYMENT_REQUIRED
                - 403 FORBIDDEN
                - 404 NOT_FOUND
                - 405 METHOD_NOT_ALLOWED
                - 406 NOT_ACCEPTABLE
                - 407 PROXY_AUTHENTICATION_REQUIRED
                - 408 REQUEST_TIMEOUT
                - 409 CONFLICT
                - 410 GONE
                - 411 LENGTH_REQUIRED
                - 412 PRECONDITION_FAILED
                - 413 PAYLOAD_TOO_LARGE
                - 413 REQUEST_ENTITY_TOO_LARGE
                - 414 URI_TOO_LONG
                - 414 REQUEST_URI_TOO_LONG
                - 415 UNSUPPORTED_MEDIA_TYPE
                - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                - 417 EXPECTATION_FAILED
                - 418 I_AM_A_TEAPOT
                - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                - 420 METHOD_FAILURE
                - 421 DESTINATION_LOCKED
                - 422 UNPROCESSABLE_ENTITY
                - 423 LOCKED
                - 424 FAILED_DEPENDENCY
                - 425 TOO_EARLY
                - 426 UPGRADE_REQUIRED
                - 428 PRECONDITION_REQUIRED
                - 429 TOO_MANY_REQUESTS
                - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                - 500 INTERNAL_SERVER_ERROR
                - 501 NOT_IMPLEMENTED
                - 502 BAD_GATEWAY
                - 503 SERVICE_UNAVAILABLE
                - 504 GATEWAY_TIMEOUT
                - 505 HTTP_VERSION_NOT_SUPPORTED
                - 506 VARIANT_ALSO_NEGOTIATES
                - 507 INSUFFICIENT_STORAGE
                - 508 LOOP_DETECTED
                - 509 BANDWIDTH_LIMIT_EXCEEDED
                - 510 NOT_EXTENDED
                - 511 NETWORK_AUTHENTICATION_REQUIRED
                type: string
          description: Resource not found.
        "403":
          content:
            application/json:
              schema:
                enum:
                - 100 CONTINUE
                - 101 SWITCHING_PROTOCOLS
                - 102 PROCESSING
                - 103 CHECKPOINT
                - 200 OK
                - 201 CREATED
                - 202 ACCEPTED
                - 203 NON_AUTHORITATIVE_INFORMATION
                - 204 NO_CONTENT
                - 205 RESET_CONTENT
                - 206 PARTIAL_CONTENT
                - 207 MULTI_STATUS
                - 208 ALREADY_REPORTED
                - 226 IM_USED
                - 300 MULTIPLE_CHOICES
                - 301 MOVED_PERMANENTLY
                - 302 FOUND
                - 302 MOVED_TEMPORARILY
                - 303 SEE_OTHER
                - 304 NOT_MODIFIED
                - 305 USE_PROXY
                - 307 TEMPORARY_REDIRECT
                - 308 PERMANENT_REDIRECT
                - 400 BAD_REQUEST
                - 401 UNAUTHORIZED
                - 402 PAYMENT_REQUIRED
                - 403 FORBIDDEN
                - 404 NOT_FOUND
                - 405 METHOD_NOT_ALLOWED
                - 406 NOT_ACCEPTABLE
                - 407 PROXY_AUTHENTICATION_REQUIRED
                - 408 REQUEST_TIMEOUT
                - 409 CONFLICT
                - 410 GONE
                - 411 LENGTH_REQUIRED
                - 412 PRECONDITION_FAILED
                - 413 PAYLOAD_TOO_LARGE
                - 413 REQUEST_ENTITY_TOO_LARGE
                - 414 URI_TOO_LONG
                - 414 REQUEST_URI_TOO_LONG
                - 415 UNSUPPORTED_MEDIA_TYPE
                - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                - 417 EXPECTATION_FAILED
                - 418 I_AM_A_TEAPOT
                - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                - 420 METHOD_FAILURE
                - 421 DESTINATION_LOCKED
                - 422 UNPROCESSABLE_ENTITY
                - 423 LOCKED
                - 424 FAILED_DEPENDENCY
                - 425 TOO_EARLY
                - 426 UPGRADE_REQUIRED
                - 428 PRECONDITION_REQUIRED
                - 429 TOO_MANY_REQUESTS
                - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                - 500 INTERNAL_SERVER_ERROR
                - 501 NOT_IMPLEMENTED
                - 502 BAD_GATEWAY
                - 503 SERVICE_UNAVAILABLE
                - 504 GATEWAY_TIMEOUT
                - 505 HTTP_VERSION_NOT_SUPPORTED
                - 506 VARIANT_ALSO_NEGOTIATES
                - 507 INSUFFICIENT_STORAGE
                - 508 LOOP_DETECTED
                - 509 BANDWIDTH_LIMIT_EXCEEDED
                - 510 NOT_EXTENDED
                - 511 NETWORK_AUTHENTICATION_REQUIRED
                type: string
          description: Operation not allowed. Only UserAdmins can access it.
        "204":
          content:
            application/json:
              schema:
                enum:
                - 100 CONTINUE
                - 101 SWITCHING_PROTOCOLS
                - 102 PROCESSING
                - 103 CHECKPOINT
                - 200 OK
                - 201 CREATED
                - 202 ACCEPTED
                - 203 NON_AUTHORITATIVE_INFORMATION
                - 204 NO_CONTENT
                - 205 RESET_CONTENT
                - 206 PARTIAL_CONTENT
                - 207 MULTI_STATUS
                - 208 ALREADY_REPORTED
                - 226 IM_USED
                - 300 MULTIPLE_CHOICES
                - 301 MOVED_PERMANENTLY
                - 302 FOUND
                - 302 MOVED_TEMPORARILY
                - 303 SEE_OTHER
                - 304 NOT_MODIFIED
                - 305 USE_PROXY
                - 307 TEMPORARY_REDIRECT
                - 308 PERMANENT_REDIRECT
                - 400 BAD_REQUEST
                - 401 UNAUTHORIZED
                - 402 PAYMENT_REQUIRED
                - 403 FORBIDDEN
                - 404 NOT_FOUND
                - 405 METHOD_NOT_ALLOWED
                - 406 NOT_ACCEPTABLE
                - 407 PROXY_AUTHENTICATION_REQUIRED
                - 408 REQUEST_TIMEOUT
                - 409 CONFLICT
                - 410 GONE
                - 411 LENGTH_REQUIRED
                - 412 PRECONDITION_FAILED
                - 413 PAYLOAD_TOO_LARGE
                - 413 REQUEST_ENTITY_TOO_LARGE
                - 414 URI_TOO_LONG
                - 414 REQUEST_URI_TOO_LONG
                - 415 UNSUPPORTED_MEDIA_TYPE
                - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                - 417 EXPECTATION_FAILED
                - 418 I_AM_A_TEAPOT
                - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                - 420 METHOD_FAILURE
                - 421 DESTINATION_LOCKED
                - 422 UNPROCESSABLE_ENTITY
                - 423 LOCKED
                - 424 FAILED_DEPENDENCY
                - 425 TOO_EARLY
                - 426 UPGRADE_REQUIRED
                - 428 PRECONDITION_REQUIRED
                - 429 TOO_MANY_REQUESTS
                - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                - 500 INTERNAL_SERVER_ERROR
                - 501 NOT_IMPLEMENTED
                - 502 BAD_GATEWAY
                - 503 SERVICE_UNAVAILABLE
                - 504 GATEWAY_TIMEOUT
                - 505 HTTP_VERSION_NOT_SUPPORTED
                - 506 VARIANT_ALSO_NEGOTIATES
                - 507 INSUFFICIENT_STORAGE
                - 508 LOOP_DETECTED
                - 509 BANDWIDTH_LIMIT_EXCEEDED
                - 510 NOT_EXTENDED
                - 511 NETWORK_AUTHENTICATION_REQUIRED
                type: string
          description: Harvester records transfered to new source.
      summary: Assign harvester records to a new source
      tags:
      - harvesters
      x-accepts: application/json
  /pages/{language}/{pageId}:
    get:
      description: <a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/define-static-pages/define-pages.html'>More
        info</a>
      operationId: getPage
      parameters:
      - explode: false
        in: path
        name: language
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageJSONWrapper'
          description: Page not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageJSONWrapper'
          description: Page found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageJSONWrapper'
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Return the page object details except the content
      tags:
      - pages
      x-accepts: application/json
  /pages/{language}/{pageId}/content:
    get:
      description: <a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/define-static-pages/define-pages.html'>More
        info</a>
      operationId: getPageContent
      parameters:
      - explode: false
        in: path
        name: language
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
          description: Page not found
        "200":
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
          description: Page found
        "403":
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Return the static html content identified by pageId
      tags:
      - pages
      x-accepts: application/json
  /pages/list:
    get:
      description: <a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/define-static-pages/define-pages.html'>More
        info</a>
      operationId: listPages
      parameters:
      - explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: section
        required: false
        schema:
          enum:
          - ALL
          - TOP
          - FOOTER
          - MENU
          - SUBMENU
          - CUSTOM_MENU1
          - CUSTOM_MENU2
          - CUSTOM_MENU3
          - DRAFT
          type: string
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - LINK
          - HTML
          - TEXT
          - MARKDOWN
          - WIKI
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PageJSONWrapper'
                type: array
          description: Operation not allowed. User needs to be able to view the resource.
      summary: List all pages according to the filters
      tags:
      - pages
      x-accepts: application/json
  /records/{metadataUuid}/formatters/{formatterId}:
    get:
      operationId: getRecordFormattedBy
      parameters:
      - explode: false
        in: path
        name: formatterId
        required: true
        schema:
          type: string
        style: simple
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: width
        required: false
        schema:
          default: _100
          enum:
          - _25
          - _50
          - _75
          - _100
          type: string
        style: form
      - explode: true
        in: query
        name: mdpath
        required: false
        schema:
          type: string
        style: form
      - description: Optional language ISO 3 letters code to override HTTP Accept-language
          header.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: output
        required: false
        schema:
          enum:
          - txt
          - html
          - xml
          - json
          - jsonld
          - pdf
          - testpdf
          type: string
        style: form
      - description: Download the approved version
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: other response
        "200":
          content:
            application/xml:
              schema:
                default: text/html
                type: string
          description: OK
      summary: Get a formatted metadata record
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/extents.json:
    get:
      description: |
        A rendering of the geometry as a png. If no background is specified the image will be transparent. In getMap the envelope of the geometry is calculated then it is expanded by a factor.  That factor is the size of the map.  This allows the map to be slightly bigger than the geometry allowing some context to be shown. This parameter allows different factors to be chosen per scale level.
        Proportion is the proportion of the world that the geometry covers (bounds of WGS84)/(bounds of geometry in WGS84)

        Named backgrounds allow the background parameter to be a simple key and the complete URL will be looked up from this list of named backgrounds
      operationId: getAllRecordExtentAsJson
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExtentDto'
                type: array
          description: OK
      summary: Get list of record extents
      tags:
      - records
      x-accepts: application/json
  /records/batchediting:
    put:
      operationId: batchEdit
      parameters:
      - description: Record UUIDs. If null current selection is used.
        example: iso19139
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: If true updates the DateStamp (or equivalent in standards different
          to ISO 19139) field in the metadata with the current timestamp
        explode: true
        in: query
        name: updateDateStamp
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BatchEditParameter'
              type: array
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IProcessingReport'
          description: Return a report of what has been done.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IProcessingReport'
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Edit a set of records by XPath expressions. This operations applies
        the update-fixed-info.xsl transformation for the metadata schema and updates
        the change date if the parameter updateDateStamp is set to true.
      tags:
      - records
      x-contentType: application/json
      x-accepts: application/json
  /records/{metadataUuid}/related:
    get:
      description: Retrieve related services, datasets, onlines, thumbnails, sources,
        ... to this records.<br/><a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/associating-resources/index.html'>More
        info</a>
      operationId: getAssociatedResources
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Type of related resource. If none, all resources are returned.
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - children
            - parent
            - brothersAndSisters
            - siblings
            - associated
            - services
            - datasets
            - fcats
            - hasfeaturecats
            - sources
            - hassources
            - related
            - onlines
            - thumbnails
            type: string
          type: array
        style: form
      - description: Start offset for paging. Default 1. Only applies to related metadata
          records (ie. not for thumbnails).
        explode: true
        in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Number of rows returned. Default 100.
        explode: true
        in: query
        name: rows
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedResponse'
          description: Return the associated resources.
        "403":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedResponse'
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get record related resources
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/featureCatalog:
    get:
      description: Retrieve related services, datasets, onlines, thumbnails, sources,
        ... to this records.<br/><a href='http://geonetwork-opensource.org/manuals/trunk/eng/users/user-guide/associating-resources/index.html'>More
        info</a>
      operationId: getFeatureCatalog
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FeatureResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureResponse'
          description: Return the associated resources.
        "403":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FeatureResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureResponse'
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Returns a map to decode attributes in a dataset (from the associated
        feature catalog)
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/formatters/zip:
    get:
      description: Metadata Exchange Format (MEF) is returned. MEF is a ZIP file containing
        the metadata as XML and some others files depending on the version requested.
        See http://geonetwork-opensource.org/manuals/trunk/eng/users/annexes/mef-format.html.
      operationId: getRecordAsZip
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: MEF file format.
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: FULL
          enum:
          - simple
          - partial
          - full
          type: string
        style: form
      - description: With related records (parent and service).
        explode: true
        in: query
        name: withRelated
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Resolve XLinks in the records.
        explode: true
        in: query
        name: withXLinksResolved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Preserve XLink URLs in the records.
        explode: true
        in: query
        name: withXLinkAttribute
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: addSchemaLocation
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Download the approved version
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: other response
        "200":
          content:
            application/x-gn-mef-2-zip: {}
          description: Return the record.
        "403":
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get a metadata record as ZIP
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/formatters/xml:
    get:
      operationId: getRecordAsXml
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Add XSD schema location based on standard configuration (see
          schema-ident.xml).
        explode: true
        in: query
        name: addSchemaLocation
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Increase record popularity
        explode: true
        in: query
        name: increasePopularity
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Add geonet:info details
        explode: true
        in: query
        name: withInfo
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Download as a file
        explode: true
        in: query
        name: attachment
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Download the approved version
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          content:
            application/xml: {}
          description: other response
        "200":
          content:
            application/xml:
              schema:
                type: object
          description: Return the record.
        "403":
          content:
            application/xml:
              schema:
                type: object
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get a metadata record as XML
      tags:
      - records
      x-accepts: application/xml
  /records/{metadataUuid}/formatters/json:
    get:
      operationId: getRecordAsJSON
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Add XSD schema location based on standard configuration (see
          schema-ident.xml).
        explode: true
        in: query
        name: addSchemaLocation
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Increase record popularity
        explode: true
        in: query
        name: increasePopularity
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Add geonet:info details
        explode: true
        in: query
        name: withInfo
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Download as a file
        explode: true
        in: query
        name: attachment
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Download the approved version
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: other response
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Return the record.
        "403":
          content:
            application/xml:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get a metadata record as JSON
      tags:
      - records
      x-accepts: application/json
  /records/publish:
    put:
      description: See record sharing for more details.
      operationId: publish
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Report about updated privileges.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
      summary: Publish one or more records
      tags:
      - records
      x-accepts: application/json
  /records/unpublish:
    put:
      description: See record sharing for more details.
      operationId: unpublish
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Report about updated privileges.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
      summary: Un-publish one or more records
      tags:
      - records
      x-accepts: application/json
  /records/sharing:
    get:
      operationId: getSharingSettings
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingResponse'
          description: Operation not allowed. User needs to be able to edit the resource.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingResponse'
          description: Return a default array of group and operations that can be
            used to set record sharing properties.
      summary: Get record sharing settings
      tags:
      - records
      x-accepts: application/json
    put:
      description: See record sharing for more details.
      operationId: share
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingParameter'
        description: Privileges
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Report about updated privileges.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Operation not allowed. Only Editors can access it.
      summary: Set sharing settings for one or more records
      tags:
      - records
      x-contentType: application/json
      x-accepts: application/json
  /records/{metadataUuid}/sharing:
    get:
      description: Return current sharing options for a record.
      operationId: getRecordSharingSettings
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingResponse'
          description: The record sharing settings.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingResponse'
          description: Operation not allowed. User needs to be able to view the resource.
      summary: Get record sharing settings
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/group:
    put:
      description: A record is related to one group.
      operationId: setRecordGroup
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              format: int32
              type: integer
        description: Group identifier
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "204":
          description: Record group updated.
        "403":
          description: Operation not allowed. User needs to be able to edit the resource.
      summary: Set record group
      tags:
      - records
      x-contentType: application/json
      x-accepts: application/json
  /records/ownership:
    put:
      operationId: setGroupAndOwner
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Group identifier
        explode: true
        in: query
        name: groupIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      - description: User identifier
        explode: true
        in: query
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Use approved version or not
        example: true
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Operation not allowed. User needs to be able to edit the resource.
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Records group and owner updated
      summary: Set group and owner for one or more records
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/ownership:
    put:
      operationId: setRecordOwnership
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      - description: Group identifier
        explode: true
        in: query
        name: groupIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: User identifier
        explode: true
        in: query
        name: userIdentifier
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Use approved version or not
        example: true
        explode: true
        in: query
        name: approved
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Operation not allowed. User needs to be able to edit the resource.
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: Record group and owner updated
      summary: Set record group and owner
      tags:
      - records
      x-accepts: application/json
  /records/samples:
    put:
      description: Add sample records for one or more schemas. Samples are defined
        for each standard in the samples folder as MEF files.
      operationId: addSamples
      parameters:
      - description: Schema identifiers
        example: iso19139
        explode: true
        in: query
        name: schema
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Return a report of what has been done.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Administrators can access it.
      summary: Add samples
      tags:
      - records
      x-accepts: application/json
  /records/templates:
    put:
      description: Add template records for one or more schemas. Templates are defined
        for each standard in the template folder as XML files. Template may also contains
        subtemplates.
      operationId: addTemplates
      parameters:
      - description: Schema identifiers
        example: iso19139
        explode: true
        in: query
        name: schema
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Return a report of what has been done.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMetadataProcessingReport'
          description: Operation not allowed. Only Administrators can access it.
      summary: Add templates
      tags:
      - records
      x-accepts: application/json
  /records/{metadataUuid}/versions:
    put:
      operationId: enableVersionControl
      parameters:
      - description: Record UUID.
        explode: false
        in: path
        name: metadataUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: (Experimental) Enable version control
      tags:
      - records
      x-accepts: application/json
  /records/versions:
    put:
      operationId: enableVersionControlForRecords
      parameters:
      - description: Record UUIDs. If null current selection is used.
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Selection bucket name
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataProcessingReport'
          description: OK
      summary: (Experimental) Enable version control for one or more records
      tags:
      - records
      x-accepts: application/json
  /robots.txt:
    get:
      operationId: getRobotsText
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: robots.txt file for SEO.
      summary: robots.txt
      tags:
      - site
      x-accepts: application/json
  /sitemap:
    get:
      operationId: getSitemap
      parameters:
      - description: Format (xml or html).
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: html
          type: string
        style: form
      - description: page.
        explode: true
        in: query
        name: doc
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Element'
          description: Site map.
      summary: Get sitemap
      tags:
      - site
      x-accepts: application/json
  /identifiers:
    get:
      description: Identifier templates are used to create record UUIDs havind a particular
        structure. The template will be used when user creates a new record. The template
        identifier to use is defined in the administration > settings.
      operationId: getIdentifiers
      parameters:
      - description: Only user defined ones
        explode: true
        in: query
        name: userDefinedOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataIdentifierTemplate'
                type: array
          description: List of identifier templates.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetadataIdentifierTemplate'
                type: array
          description: Operation not allowed. Only Editor can access it.
      summary: Get identifier templates
      tags:
      - identifiers
      x-accepts: application/json
    put:
      operationId: addIdentifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataIdentifierTemplate'
        description: Identifier template details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "201":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Identifier template created.
        "403":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: Operation not allowed. Only Editor can access it.
      summary: Add an identifier template
      tags:
      - identifiers
      x-contentType: application/json
      x-accepts: application/json
  /identifiers/{identifier}:
    put:
      operationId: updateIdentifier
      parameters:
      - description: Identifier template identifier
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataIdentifierTemplate'
        description: Identifier template details
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "404":
          description: Resource not found.
        "403":
          description: Operation not allowed. Only Editor can access it.
        "204":
          description: Identifier template updated.
      summary: Update an identifier template
      tags:
      - identifiers
      x-contentType: application/json
      x-accepts: application/json
  /regions/types:
    get:
      operationId: getRegionTypes
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: List of region types.
      summary: Get list of region types
      tags:
      - regions
      x-accepts: application/json
  /regions:
    get:
      operationId: getRegions
      parameters:
      - explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxRecords
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
          description: List of regions.
      summary: Get list of regions
      tags:
      - regions
      x-accepts: application/json
  /reports/users:
    get:
      operationId: getActiveUsers
      parameters:
      - description: From date of users login date
        explode: true
        in: query
        name: dateFrom
        required: true
        schema:
          type: string
        style: form
      - description: To date of users login date
        explode: true
        in: query
        name: dateTo
        required: true
        schema:
          type: string
        style: form
      - description: Group(s) for the users
        explode: true
        in: query
        name: groups
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: List of users "active" during a time period.
      summary: Get the list of users "active" during a time period.
      tags:
      - records
      x-accepts: application/json
  /reports/datadownloads:
    get:
      operationId: getReportDataDownloads
      parameters:
      - description: From date of the metadata downloads
        explode: true
        in: query
        name: dateFrom
        required: true
        schema:
          type: string
        style: form
      - description: To date of the metadata downloads
        explode: true
        in: query
        name: dateTo
        required: true
        schema:
          type: string
        style: form
      - description: Metadata group(s)
        explode: true
        in: query
        name: groups
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: List of metadata file downloads.
      summary: Get list of metadata file downloads
      tags:
      - records
      x-accepts: application/json
  /reports/datauploads:
    get:
      operationId: getReportDataUploads
      parameters:
      - description: From date of the metadata uploads
        explode: true
        in: query
        name: dateFrom
        required: true
        schema:
          type: string
        style: form
      - description: To date of the metadata uploads
        explode: true
        in: query
        name: dateTo
        required: true
        schema:
          type: string
        style: form
      - description: Metadata group(s)
        explode: true
        in: query
        name: groups
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: OK
      summary: Get uploaded files to metadata records during a period.
      tags:
      - records
      x-accepts: application/json
  /reports/metadatainternal:
    get:
      operationId: getReportInternalMetadata
      parameters:
      - description: From date of metadata change date
        explode: true
        in: query
        name: dateFrom
        required: true
        schema:
          type: string
        style: form
      - description: To date of metadata change date
        explode: true
        in: query
        name: dateTo
        required: true
        schema:
          type: string
        style: form
      - description: Metadata group(s)
        explode: true
        in: query
        name: groups
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: Metadata not published during a period.
      summary: Get the metadata not published during a period.
      tags:
      - records
      x-accepts: application/json
  /reports/metadataupdated:
    get:
      operationId: getReportUpdatedMetadata
      parameters:
      - description: From date of metadata change date
        explode: true
        in: query
        name: dateFrom
        required: true
        schema:
          type: string
        style: form
      - description: To date of metadata change date
        explode: true
        in: query
        name: dateTo
        required: true
        schema:
          type: string
        style: form
      - description: Metadata group(s)
        explode: true
        in: query
        name: groups
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
        "200":
          description: Updated metadata during a period.
      summary: Get the updated metadata during a period.
      tags:
      - records
      x-accepts: application/json
components:
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
  schemas:
    InfoReport:
      example:
        date: date
        message: message
      properties:
        message:
          type: string
        date:
          type: string
      type: object
    Report:
      example:
        date: date
        message: message
      properties:
        message:
          type: string
        date:
          type: string
      type: object
    SimpleMetadataProcessingReport:
      example:
        totalRecords: 0
        metadata:
        - 6
        - 6
        metadataInfos:
          key:
          - date: date
            message: message
          - date: date
            message: message
        totalTimeInSeconds: 2
        numberOfRecordsProcessed: 7
        type: type
        uuid: uuid
        endIsoDateTime: endIsoDateTime
        numberOfNullRecords: 5
        running: true
        startIsoDateTime: startIsoDateTime
        numberOfRecordsNotEditable: 5
        numberOfRecords: 2
        numberOfRecordsWithErrors: 9
        numberOfRecordNotFound: 1
        ellapsedTimeInSeconds: 3
        errors:
        - date: date
          message: message
        - date: date
          message: message
        infos:
        - date: date
          message: message
        - date: date
          message: message
        metadataErrors:
          key:
          - date: date
            message: message
          - date: date
            message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Report'
          type: array
        infos:
          items:
            $ref: '#/components/schemas/InfoReport'
          type: array
        uuid:
          type: string
          xml:
            attribute: true
        totalRecords:
          format: int32
          type: integer
          writeOnly: true
        metadata:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        metadataErrors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Report'
            type: array
          type: object
          xml:
            name: errors
        metadataInfos:
          additionalProperties:
            items:
              $ref: '#/components/schemas/InfoReport'
            type: array
          type: object
          xml:
            name: infos
        numberOfRecordNotFound:
          format: int32
          type: integer
        numberOfRecordsNotEditable:
          format: int32
          type: integer
        numberOfNullRecords:
          format: int32
          type: integer
        numberOfRecords:
          format: int32
          type: integer
          xml:
            attribute: true
        numberOfRecordsProcessed:
          format: int32
          type: integer
        numberOfRecordsWithErrors:
          format: int32
          type: integer
        type:
          type: string
          xml:
            attribute: true
        running:
          type: boolean
        startIsoDateTime:
          type: string
          xml:
            attribute: true
        endIsoDateTime:
          type: string
          xml:
            attribute: true
        ellapsedTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
        totalTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
      type: object
      xml:
        name: report
    MetadataCategory:
      example:
        name: name
        id: 0
        label:
          key: label
      properties:
        name:
          type: string
        id:
          format: int32
          type: integer
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    AnonymousMapserver:
      properties:
        password:
          type: string
        username:
          type: string
        namespace:
          type: string
        name:
          type: string
        id:
          format: int32
          type: integer
        description:
          type: string
        namespacePrefix:
          type: string
        configurl:
          type: string
        wmsurl:
          type: string
        wfsurl:
          type: string
        wcsurl:
          type: string
        stylerurl:
          type: string
        pushStyleInWorkspace_JpaWorkaround:
          type: string
          writeOnly: true
        pushStyleInWorkspace:
          $ref: '#/components/schemas/MapServer'
      type: object
    MapServer:
      example:
        configurl: configurl
        stylerurl: stylerurl
        description: description
        pushStyleInWorkspace_JpaWorkaround: pushStyleInWorkspace_JpaWorkaround
        namespacePrefix: namespacePrefix
        wfsurl: wfsurl
        wcsurl: wcsurl
        password: password
        wmsurl: wmsurl
        namespace: namespace
        name: name
        id: 0
        username: username
      properties:
        namespace:
          type: string
        name:
          type: string
        id:
          format: int32
          type: integer
        description:
          type: string
        password:
          type: string
        username:
          type: string
        namespacePrefix:
          type: string
        configurl:
          type: string
        wmsurl:
          type: string
        wfsurl:
          type: string
        wcsurl:
          type: string
        stylerurl:
          type: string
        pushStyleInWorkspace_JpaWorkaround:
          type: string
          writeOnly: true
        pushStyleInWorkspace:
          $ref: '#/components/schemas/MapServer'
      type: object
    IsoLanguage:
      example:
        code: code
        id: 0
        label:
          key: label
        shortCode: shortCode
      properties:
        id:
          format: int32
          type: integer
        code:
          type: string
        shortCode:
          type: string
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    JSONObject:
      type: object
    ISODate:
      example:
        hours: 2
        dateOnly: true
        months: 2
        dateAndTime: dateAndTime
        dateYearMonthOnly: true
        minutes: 7
        timeInSeconds: 7
        years: 3
        seconds: 9
        dateYearOnly: true
        timeAsString: timeAsString
        dateAsString: dateAsString
        days: 4
      properties:
        hours:
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
        seconds:
          format: int32
          type: integer
        years:
          format: int32
          type: integer
        months:
          format: int32
          type: integer
        days:
          format: int32
          type: integer
        dateAndTime:
          type: string
        dateAsString:
          type: string
        timeInSeconds:
          format: int64
          type: integer
        dateOnly:
          type: boolean
        dateYearOnly:
          type: boolean
        dateYearMonthOnly:
          type: boolean
        timeAsString:
          type: string
      type: object
    Link:
      example:
        linkStatus:
        - batchKey: batchKey
          statusInfo: statusInfo
          statusValue: statusValue
          failing: true
          id: 5
          checkDate:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
        - batchKey: batchKey
          statusInfo: statusInfo
          statusValue: statusValue
          failing: true
          id: 5
          checkDate:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
        lastCheck:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
        protocol: protocol
        records:
        - metadataId: 5
          metadataUuid: metadataUuid
        - metadataId: 5
          metadataUuid: metadataUuid
        linkType: HTTP
        id: 1
        lastState: 1
        url: url
      properties:
        records:
          items:
            $ref: '#/components/schemas/MetadataLink'
          type: array
          uniqueItems: true
        linkStatus:
          items:
            $ref: '#/components/schemas/LinkStatus'
          type: array
          uniqueItems: true
        lastState:
          format: int32
          type: integer
        lastCheck:
          $ref: '#/components/schemas/ISODate'
        id:
          format: int32
          type: integer
        protocol:
          type: string
        url:
          type: string
        linkType:
          enum:
          - HTTP
          - METADATA
          type: string
      type: object
    LinkStatus:
      example:
        batchKey: batchKey
        statusInfo: statusInfo
        statusValue: statusValue
        failing: true
        id: 5
        checkDate:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
      properties:
        id:
          format: int32
          type: integer
        checkDate:
          $ref: '#/components/schemas/ISODate'
        statusValue:
          type: string
        statusInfo:
          type: string
        batchKey:
          type: string
        failing:
          type: boolean
      type: object
    MetadataLink:
      example:
        metadataId: 5
        metadataUuid: metadataUuid
      properties:
        metadataId:
          format: int32
          type: integer
        metadataUuid:
          type: string
      type: object
    PageLink:
      example:
        number: 1
        size: 1
        last: true
        numberOfElements: 6
        totalPages: 0
        pageable:
          paged: true
          pageNumber: 1
          offset: 7
          pageSize: 4
          unpaged: true
          sort:
            unsorted: true
            sorted: true
            empty: true
        sort:
          unsorted: true
          sorted: true
          empty: true
        content:
        - linkStatus:
          - batchKey: batchKey
            statusInfo: statusInfo
            statusValue: statusValue
            failing: true
            id: 5
            checkDate:
              hours: 2
              dateOnly: true
              months: 2
              dateAndTime: dateAndTime
              dateYearMonthOnly: true
              minutes: 7
              timeInSeconds: 7
              years: 3
              seconds: 9
              dateYearOnly: true
              timeAsString: timeAsString
              dateAsString: dateAsString
              days: 4
          - batchKey: batchKey
            statusInfo: statusInfo
            statusValue: statusValue
            failing: true
            id: 5
            checkDate:
              hours: 2
              dateOnly: true
              months: 2
              dateAndTime: dateAndTime
              dateYearMonthOnly: true
              minutes: 7
              timeInSeconds: 7
              years: 3
              seconds: 9
              dateYearOnly: true
              timeAsString: timeAsString
              dateAsString: dateAsString
              days: 4
          lastCheck:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
          protocol: protocol
          records:
          - metadataId: 5
            metadataUuid: metadataUuid
          - metadataId: 5
            metadataUuid: metadataUuid
          linkType: HTTP
          id: 1
          lastState: 1
          url: url
        - linkStatus:
          - batchKey: batchKey
            statusInfo: statusInfo
            statusValue: statusValue
            failing: true
            id: 5
            checkDate:
              hours: 2
              dateOnly: true
              months: 2
              dateAndTime: dateAndTime
              dateYearMonthOnly: true
              minutes: 7
              timeInSeconds: 7
              years: 3
              seconds: 9
              dateYearOnly: true
              timeAsString: timeAsString
              dateAsString: dateAsString
              days: 4
          - batchKey: batchKey
            statusInfo: statusInfo
            statusValue: statusValue
            failing: true
            id: 5
            checkDate:
              hours: 2
              dateOnly: true
              months: 2
              dateAndTime: dateAndTime
              dateYearMonthOnly: true
              minutes: 7
              timeInSeconds: 7
              years: 3
              seconds: 9
              dateYearOnly: true
              timeAsString: timeAsString
              dateAsString: dateAsString
              days: 4
          lastCheck:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
          protocol: protocol
          records:
          - metadataId: 5
            metadataUuid: metadataUuid
          - metadataId: 5
            metadataUuid: metadataUuid
          linkType: HTTP
          id: 1
          lastState: 1
          url: url
        first: true
        totalElements: 6
        empty: true
      properties:
        totalPages:
          format: int32
          type: integer
        totalElements:
          format: int64
          type: integer
        sort:
          $ref: '#/components/schemas/Sort'
        size:
          format: int32
          type: integer
        content:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        number:
          format: int32
          type: integer
        last:
          type: boolean
        numberOfElements:
          format: int32
          type: integer
        first:
          type: boolean
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
      type: object
    Pageable:
      example:
        paged: true
        pageNumber: 1
        offset: 7
        pageSize: 4
        unpaged: true
        sort:
          unsorted: true
          sorted: true
          empty: true
      properties:
        sort:
          $ref: '#/components/schemas/Sort'
        offset:
          format: int64
          type: integer
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
    Sort:
      example:
        unsorted: true
        sorted: true
        empty: true
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
      type: object
    Source:
      example:
        filter: filter
        groupOwner: 0
        name: name
        logo: logo
        uiConfig: uiConfig
        label:
          key: label
        type: portal
        serviceRecord: serviceRecord
        creationDate:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
        uuid: uuid
      properties:
        type:
          enum:
          - portal
          - subportal
          - externalportal
          - harvester
          type: string
        logo:
          type: string
        filter:
          type: string
        uiConfig:
          type: string
        serviceRecord:
          type: string
        creationDate:
          $ref: '#/components/schemas/ISODate'
        groupOwner:
          format: int32
          type: integer
        name:
          type: string
        uuid:
          type: string
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    MetadataProcessingReport:
      example:
        totalRecords: 0
        metadata:
        - 6
        - 6
        metadataInfos:
          key:
          - date: date
            message: message
          - date: date
            message: message
        totalTimeInSeconds: 2
        numberOfRecordsProcessed: 7
        type: type
        uuid: uuid
        endIsoDateTime: endIsoDateTime
        numberOfNullRecords: 5
        running: true
        startIsoDateTime: startIsoDateTime
        numberOfRecordsNotEditable: 5
        numberOfRecords: 2
        numberOfRecordsWithErrors: 9
        numberOfRecordNotFound: 1
        ellapsedTimeInSeconds: 3
        errors:
        - date: date
          message: message
        - date: date
          message: message
        infos:
        - date: date
          message: message
        - date: date
          message: message
        metadataErrors:
          key:
          - date: date
            message: message
          - date: date
            message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Report'
          type: array
        infos:
          items:
            $ref: '#/components/schemas/InfoReport'
          type: array
        uuid:
          type: string
          xml:
            attribute: true
        totalRecords:
          format: int32
          type: integer
          writeOnly: true
        metadata:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        metadataErrors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Report'
            type: array
          type: object
          xml:
            name: errors
        metadataInfos:
          additionalProperties:
            items:
              $ref: '#/components/schemas/InfoReport'
            type: array
          type: object
          xml:
            name: infos
        numberOfRecordNotFound:
          format: int32
          type: integer
        numberOfRecordsNotEditable:
          format: int32
          type: integer
        numberOfNullRecords:
          format: int32
          type: integer
        numberOfRecords:
          format: int32
          type: integer
          xml:
            attribute: true
        numberOfRecordsProcessed:
          format: int32
          type: integer
        numberOfRecordsWithErrors:
          format: int32
          type: integer
        type:
          type: string
          xml:
            attribute: true
        running:
          type: boolean
        startIsoDateTime:
          type: string
          xml:
            attribute: true
        endIsoDateTime:
          type: string
          xml:
            attribute: true
        ellapsedTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
        totalTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
      type: object
      xml:
        name: report
    SavedQuery:
      example:
        xpath: xpath
        id: id
        label: label
        cleanValues: cleanValues
        parameters:
        - parameters
        - parameters
      properties:
        id:
          type: string
        xpath:
          type: string
        label:
          type: string
        cleanValues:
          type: string
        parameters:
          items:
            type: string
          type: array
      type: object
    SuggestionType:
      example:
        process: process
        name: name
        operational: operational
        id: id
        params: params
        category: category
        target: target
      properties:
        name:
          type: string
        operational:
          type: string
        params:
          type: string
        process:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        category:
          type: string
          xml:
            attribute: true
        target:
          type: string
          xml:
            attribute: true
      required:
      - name
      - operational
      type: object
    DocType:
      example:
        internalSubset: internalSubset
        systemID: systemID
        value: value
        publicID: publicID
        elementName: elementName
      properties:
        parent:
          $ref: '#/components/schemas/Parent'
        elementName:
          type: string
        publicID:
          type: string
        systemID:
          type: string
        internalSubset:
          type: string
        value:
          type: string
        document:
          $ref: '#/components/schemas/Document'
        parentElement:
          $ref: '#/components/schemas/Element'
      type: object
    Document:
      example:
        docType:
          internalSubset: internalSubset
          systemID: systemID
          value: value
          publicID: publicID
          elementName: elementName
        baseURI: baseURI
        contentSize: 0
        descendants: '{}'
        content:
        - '{}'
        - '{}'
      properties:
        content:
          items:
            type: object
          type: array
        baseURI:
          type: string
        parent:
          $ref: '#/components/schemas/Parent'
        document:
          $ref: '#/components/schemas/Document'
        rootElement:
          $ref: '#/components/schemas/Element'
        docType:
          $ref: '#/components/schemas/DocType'
        descendants:
          type: object
        contentSize:
          format: int32
          type: integer
      type: object
    Element:
      example:
        parent:
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          contentSize: 6
          descendants: '{}'
          content:
          - '{}'
          - '{}'
        textTrim: textTrim
        additionalNamespaces:
        - '{}'
        - '{}'
        rootElement: true
        qualifiedName: qualifiedName
        document:
          docType:
            internalSubset: internalSubset
            systemID: systemID
            value: value
            publicID: publicID
            elementName: elementName
          baseURI: baseURI
          contentSize: 0
          descendants: '{}'
          content:
          - '{}'
          - '{}'
        descendants: '{}'
        namespacePrefix: namespacePrefix
        content:
        - '{}'
        - '{}'
        children:
        - '{}'
        - '{}'
        contentSize: 1
        name: name
        namespace:
          prefix: prefix
          uri: uri
        attributes:
        - '{}'
        - '{}'
        namespaceURI: namespaceURI
        text: text
        textNormalize: textNormalize
        value: value
      properties:
        parent:
          $ref: '#/components/schemas/Parent'
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/Namespace'
        additionalNamespaces:
          items:
            type: object
          type: array
        attributes:
          items:
            type: object
          type: array
        content:
          items:
            type: object
          type: array
        qualifiedName:
          type: string
        text:
          type: string
        value:
          type: string
        attribute:
          $ref: '#/components/schemas/Element'
        namespaceURI:
          type: string
        children:
          items:
            type: object
          type: array
        textNormalize:
          type: string
        descendants:
          type: object
        rootElement:
          type: boolean
        contentSize:
          format: int32
          type: integer
        namespacePrefix:
          type: string
        textTrim:
          type: string
        document:
          $ref: '#/components/schemas/Document'
        parentElement:
          $ref: '#/components/schemas/Element'
      type: object
    Namespace:
      example:
        prefix: prefix
        uri: uri
      properties:
        prefix:
          type: string
        uri:
          type: string
      type: object
    Parent:
      example:
        document:
          docType:
            internalSubset: internalSubset
            systemID: systemID
            value: value
            publicID: publicID
            elementName: elementName
          baseURI: baseURI
          contentSize: 0
          descendants: '{}'
          content:
          - '{}'
          - '{}'
        contentSize: 6
        descendants: '{}'
        content:
        - '{}'
        - '{}'
      properties:
        parent:
          $ref: '#/components/schemas/Parent'
        content:
          items:
            type: object
          type: array
        document:
          $ref: '#/components/schemas/Document'
        descendants:
          type: object
        contentSize:
          format: int32
          type: integer
      type: object
    Reports:
      example:
        report:
        - date: date
          message: message
        - date: date
          message: message
      properties:
        report:
          items:
            $ref: '#/components/schemas/Report'
          type: array
      type: object
      xml:
        name: reports
    MetadataResource:
      example:
        filename: filename
        size: 0
        visibility: public
        lastModification: 2000-01-23T04:56:07.000+00:00
        id: id
        url: url
      properties:
        id:
          type: string
        size:
          format: int64
          type: integer
        url:
          type: string
        filename:
          type: string
        visibility:
          enum:
          - public
          - private
          type: string
        lastModification:
          format: date-time
          type: string
      type: object
      xml:
        name: resource
    XsltMetadataProcessingReport:
      example:
        totalRecords: 0
        metadata:
        - 6
        - 6
        metadataInfos:
          key:
          - date: date
            message: message
          - date: date
            message: message
        totalTimeInSeconds: 4
        numberOfRecordsProcessed: 9
        type: type
        uuid: uuid
        endIsoDateTime: endIsoDateTime
        numberOfNullRecords: 2
        running: true
        startIsoDateTime: startIsoDateTime
        processId: processId
        numberOfRecordsNotEditable: 5
        numberOfRecords: 7
        numberOfRecordsWithErrors: 3
        numberOfRecordNotFound: 5
        ellapsedTimeInSeconds: 2
        errors:
        - date: date
          message: message
        - date: date
          message: message
        infos:
        - date: date
          message: message
        - date: date
          message: message
        metadataErrors:
          key:
          - date: date
            message: message
          - date: date
            message: message
        noProcessFoundCount: 1
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Report'
          type: array
        infos:
          items:
            $ref: '#/components/schemas/InfoReport'
          type: array
        uuid:
          type: string
          xml:
            attribute: true
        totalRecords:
          format: int32
          type: integer
          writeOnly: true
        metadata:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        metadataErrors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Report'
            type: array
          type: object
          xml:
            name: errors
        metadataInfos:
          additionalProperties:
            items:
              $ref: '#/components/schemas/InfoReport'
            type: array
          type: object
          xml:
            name: infos
        processId:
          type: string
          xml:
            attribute: true
            name: process
        noProcessFoundCount:
          format: int32
          type: integer
        numberOfRecordNotFound:
          format: int32
          type: integer
        numberOfRecordsNotEditable:
          format: int32
          type: integer
        numberOfNullRecords:
          format: int32
          type: integer
        numberOfRecords:
          format: int32
          type: integer
          xml:
            attribute: true
        numberOfRecordsProcessed:
          format: int32
          type: integer
        numberOfRecordsWithErrors:
          format: int32
          type: integer
        type:
          type: string
          xml:
            attribute: true
        running:
          type: boolean
        startIsoDateTime:
          type: string
          xml:
            attribute: true
        endIsoDateTime:
          type: string
          xml:
            attribute: true
        ellapsedTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
        totalTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
      type: object
      xml:
        name: report
    UiSetting:
      example:
        configuration: configuration
        id: id
      properties:
        id:
          type: string
        configuration:
          type: string
      type: object
    SystemInfo:
      example:
        scmUrl: scmUrl
        buildOsInfo: buildOsInfo
        buildJavaVersion: buildJavaVersion
        devMode: true
        stagingProfile: stagingProfile
        buildDate: buildDate
        buildJavaVendor: buildJavaVendor
        version: version
        subVersion: subVersion
        scmRevision: scmRevision
      properties:
        stagingProfile:
          type: string
        buildDate:
          type: string
        version:
          type: string
        subVersion:
          type: string
        buildOsInfo:
          type: string
        buildJavaVersion:
          type: string
        buildJavaVendor:
          type: string
        scmUrl:
          type: string
        scmRevision:
          type: string
        devMode:
          type: boolean
      type: object
    Setting:
      example:
        internal: true
        dataType: STRING
        name: name
        position: 0
        internal_JpaWorkaround: internal_JpaWorkaround
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        dataType:
          enum:
          - STRING
          - INT
          - BOOLEAN
          - JSON
          type: string
        position:
          format: int32
          type: integer
        internal:
          type: boolean
        internal_JpaWorkaround:
          type: string
          writeOnly: true
      type: object
    SettingsListResponse:
      example:
        settings:
        - internal: true
          dataType: STRING
          name: name
          position: 0
          internal_JpaWorkaround: internal_JpaWorkaround
          value: value
        - internal: true
          dataType: STRING
          name: name
          position: 0
          internal_JpaWorkaround: internal_JpaWorkaround
          value: value
      properties:
        settings:
          items:
            $ref: '#/components/schemas/Setting'
          type: array
      type: object
    SiteInformation:
      example:
        database:
          key: database
        index:
          key: index
        main:
          key: main
        version:
          key: version
        catalogue:
          key: catalogue
      properties:
        catalogue:
          additionalProperties:
            type: string
          type: object
        index:
          additionalProperties:
            type: string
          type: object
        main:
          additionalProperties:
            type: string
          type: object
        database:
          additionalProperties:
            type: string
          type: object
        version:
          additionalProperties:
            type: string
          type: object
      type: object
    Status:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        id: id
        state: RED
        message: message
      properties:
        id:
          type: string
        state:
          enum:
          - RED
          - UNINITIALIZED
          - YELLOW
          - GREEN
          - DISABLED
          type: string
        date:
          format: date-time
          type: string
        message:
          type: string
      type: object
    Address:
      example:
        zip: zip
        country: country
        address: address
        city: city
        id: 9
        state: state
      properties:
        address:
          type: string
        id:
          format: int32
          type: integer
        state:
          type: string
        country:
          type: string
        city:
          type: string
        zip:
          type: string
      type: object
    GrantedAuthority:
      example:
        authority: authority
      properties:
        authority:
          type: string
      type: object
    MetadataStatus:
      example:
        owner: 2
        closeDate:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
        statusValue:
          notificationLevel: statusUserOwner
          reserved_JpaWorkaround: reserved_JpaWorkaround
          reserved: true
          displayOrder: 5
          name: name
          id: 5
          label:
            key: label
          type: workflow
        dueDate:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
        changeMessage: changeMessage
        asXml:
          parent:
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            contentSize: 6
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          textTrim: textTrim
          additionalNamespaces:
          - '{}'
          - '{}'
          rootElement: true
          qualifiedName: qualifiedName
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          descendants: '{}'
          namespacePrefix: namespacePrefix
          content:
          - '{}'
          - '{}'
          children:
          - '{}'
          - '{}'
          contentSize: 1
          name: name
          namespace:
            prefix: prefix
            uri: uri
          attributes:
          - '{}'
          - '{}'
          namespaceURI: namespaceURI
          text: text
          textNormalize: textNormalize
          value: value
        id:
          metadataId: 6
          statusId: 0
          changeDate:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
          userId: 1
        currentState: currentState
        previousState: previousState
      properties:
        id:
          $ref: '#/components/schemas/MetadataStatusId'
        changeMessage:
          type: string
        statusValue:
          $ref: '#/components/schemas/StatusValue'
        previousState:
          type: string
        currentState:
          type: string
        owner:
          format: int32
          type: integer
        dueDate:
          $ref: '#/components/schemas/ISODate'
        closeDate:
          $ref: '#/components/schemas/ISODate'
        asXml:
          $ref: '#/components/schemas/Element'
      type: object
    MetadataStatusId:
      example:
        metadataId: 6
        statusId: 0
        changeDate:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
        userId: 1
      properties:
        changeDate:
          $ref: '#/components/schemas/ISODate'
        statusId:
          format: int32
          type: integer
        metadataId:
          format: int32
          type: integer
        userId:
          format: int32
          type: integer
      type: object
    MetadataWorkflowStatusResponse:
      example:
        hasEditPermission: true
        currentStatus:
          owner: 2
          closeDate:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
          statusValue:
            notificationLevel: statusUserOwner
            reserved_JpaWorkaround: reserved_JpaWorkaround
            reserved: true
            displayOrder: 5
            name: name
            id: 5
            label:
              key: label
            type: workflow
          dueDate:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
          changeMessage: changeMessage
          asXml:
            parent:
              document:
                docType:
                  internalSubset: internalSubset
                  systemID: systemID
                  value: value
                  publicID: publicID
                  elementName: elementName
                baseURI: baseURI
                contentSize: 0
                descendants: '{}'
                content:
                - '{}'
                - '{}'
              contentSize: 6
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            textTrim: textTrim
            additionalNamespaces:
            - '{}'
            - '{}'
            rootElement: true
            qualifiedName: qualifiedName
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            descendants: '{}'
            namespacePrefix: namespacePrefix
            content:
            - '{}'
            - '{}'
            children:
            - '{}'
            - '{}'
            contentSize: 1
            name: name
            namespace:
              prefix: prefix
              uri: uri
            attributes:
            - '{}'
            - '{}'
            namespaceURI: namespaceURI
            text: text
            textNormalize: textNormalize
            value: value
          id:
            metadataId: 6
            statusId: 0
            changeDate:
              hours: 2
              dateOnly: true
              months: 2
              dateAndTime: dateAndTime
              dateYearMonthOnly: true
              minutes: 7
              timeInSeconds: 7
              years: 3
              seconds: 9
              dateYearOnly: true
              timeAsString: timeAsString
              dateAsString: dateAsString
              days: 4
            userId: 1
          currentState: currentState
          previousState: previousState
        reviewers:
        - addresses:
          - zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          - zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          kind: kind
          profile: Administrator
          credentialsNonExpired: true
          organisation: organisation
          lastLoginDate: lastLoginDate
          enabled: true
          authorities:
          - authority: authority
          - authority: authority
          security:
            securityNotifications:
            - UPDATE_HASH_REQUIRED
            - UPDATE_HASH_REQUIRED
            authType: authType
            nodeId: nodeId
          emailAddresses:
          - emailAddresses
          - emailAddresses
          surname: surname
          name: name
          accountNonExpired: true
          id: 7
          primaryAddress:
            zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          email: email
          username: username
          accountNonLocked: true
        - addresses:
          - zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          - zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          kind: kind
          profile: Administrator
          credentialsNonExpired: true
          organisation: organisation
          lastLoginDate: lastLoginDate
          enabled: true
          authorities:
          - authority: authority
          - authority: authority
          security:
            securityNotifications:
            - UPDATE_HASH_REQUIRED
            - UPDATE_HASH_REQUIRED
            authType: authType
            nodeId: nodeId
          emailAddresses:
          - emailAddresses
          - emailAddresses
          surname: surname
          name: name
          accountNonExpired: true
          id: 7
          primaryAddress:
            zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          email: email
          username: username
          accountNonLocked: true
        status:
        - notificationLevel: statusUserOwner
          reserved_JpaWorkaround: reserved_JpaWorkaround
          reserved: true
          displayOrder: 5
          name: name
          id: 5
          label:
            key: label
          type: workflow
        - notificationLevel: statusUserOwner
          reserved_JpaWorkaround: reserved_JpaWorkaround
          reserved: true
          displayOrder: 5
          name: name
          id: 5
          label:
            key: label
          type: workflow
      properties:
        currentStatus:
          $ref: '#/components/schemas/MetadataStatus'
        reviewers:
          items:
            $ref: '#/components/schemas/User'
          type: array
        hasEditPermission:
          type: boolean
        status:
          items:
            $ref: '#/components/schemas/StatusValue'
          type: array
      type: object
    StatusValue:
      example:
        notificationLevel: statusUserOwner
        reserved_JpaWorkaround: reserved_JpaWorkaround
        reserved: true
        displayOrder: 5
        name: name
        id: 5
        label:
          key: label
        type: workflow
      properties:
        type:
          enum:
          - workflow
          - task
          - event
          type: string
        notificationLevel:
          enum:
          - statusUserOwner
          - catalogueAdministrator
          - catalogueProfileAdministrator
          - catalogueProfileUserAdmin
          - catalogueProfileReviewer
          - catalogueProfileEditor
          - catalogueProfileRegisteredUser
          - catalogueProfileGuest
          - recordProfileReviewer
          - recordUserAuthor
          type: string
        displayOrder:
          format: int32
          type: integer
        name:
          type: string
        id:
          format: int32
          type: integer
        reserved_JpaWorkaround:
          type: string
          writeOnly: true
        reserved:
          type: boolean
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    User:
      example:
        addresses:
        - zip: zip
          country: country
          address: address
          city: city
          id: 9
          state: state
        - zip: zip
          country: country
          address: address
          city: city
          id: 9
          state: state
        kind: kind
        profile: Administrator
        credentialsNonExpired: true
        organisation: organisation
        lastLoginDate: lastLoginDate
        enabled: true
        authorities:
        - authority: authority
        - authority: authority
        security:
          securityNotifications:
          - UPDATE_HASH_REQUIRED
          - UPDATE_HASH_REQUIRED
          authType: authType
          nodeId: nodeId
        emailAddresses:
        - emailAddresses
        - emailAddresses
        surname: surname
        name: name
        accountNonExpired: true
        id: 7
        primaryAddress:
          zip: zip
          country: country
          address: address
          city: city
          id: 9
          state: state
        email: email
        username: username
        accountNonLocked: true
      properties:
        surname:
          type: string
        profile:
          enum:
          - Administrator
          - UserAdmin
          - Reviewer
          - Editor
          - RegisteredUser
          - Guest
          - Monitor
          type: string
        name:
          type: string
        id:
          format: int32
          type: integer
        enabled:
          type: boolean
        username:
          type: string
        email:
          type: string
        emailAddresses:
          items:
            type: string
          type: array
          uniqueItems: true
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          type: array
          uniqueItems: true
        primaryAddress:
          $ref: '#/components/schemas/Address'
        organisation:
          type: string
        kind:
          type: string
        security:
          $ref: '#/components/schemas/UserSecurity'
        lastLoginDate:
          type: string
        authorities:
          items:
            $ref: '#/components/schemas/GrantedAuthority'
          type: array
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        credentialsNonExpired:
          type: boolean
      type: object
    UserSecurity:
      example:
        securityNotifications:
        - UPDATE_HASH_REQUIRED
        - UPDATE_HASH_REQUIRED
        authType: authType
        nodeId: nodeId
      properties:
        authType:
          type: string
        nodeId:
          type: string
        securityNotifications:
          items:
            enum:
            - UPDATE_HASH_REQUIRED
            - UNKNOWN
            type: string
          type: array
          uniqueItems: true
        securityNotificationsString:
          $ref: '#/components/schemas/UserSecurity'
      type: object
    MetadataStatusResponse:
      example:
        owner: 0
        authorEmail: authorEmail
        currentStatus: currentStatus
        statusValue:
          notificationLevel: statusUserOwner
          reserved_JpaWorkaround: reserved_JpaWorkaround
          reserved: true
          displayOrder: 5
          name: name
          id: 5
          label:
            key: label
          type: workflow
        ownerProfile: ownerProfile
        dueDate:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
        previousStatusDetails: previousStatusDetails
        asXml:
          parent:
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            contentSize: 6
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          textTrim: textTrim
          additionalNamespaces:
          - '{}'
          - '{}'
          rootElement: true
          qualifiedName: qualifiedName
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          descendants: '{}'
          namespacePrefix: namespacePrefix
          content:
          - '{}'
          - '{}'
          children:
          - '{}'
          - '{}'
          contentSize: 1
          name: name
          namespace:
            prefix: prefix
            uri: uri
          attributes:
          - '{}'
          - '{}'
          namespaceURI: namespaceURI
          text: text
          textNormalize: textNormalize
          value: value
        title: title
        uuid: uuid
        previousState: previousState
        ownerEmail: ownerEmail
        closeDate:
          hours: 2
          dateOnly: true
          months: 2
          dateAndTime: dateAndTime
          dateYearMonthOnly: true
          minutes: 7
          timeInSeconds: 7
          years: 3
          seconds: 9
          dateYearOnly: true
          timeAsString: timeAsString
          dateAsString: dateAsString
          days: 4
        ownerName: ownerName
        authorName: authorName
        changeMessage: changeMessage
        authorProfile: authorProfile
        id:
          metadataId: 6
          statusId: 0
          changeDate:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
          userId: 1
        currentStatusDetails: currentStatusDetails
        currentState: currentState
        previousStatus: previousStatus
      properties:
        id:
          $ref: '#/components/schemas/MetadataStatusId'
        changeMessage:
          type: string
        statusValue:
          $ref: '#/components/schemas/StatusValue'
        previousState:
          type: string
        currentState:
          type: string
        authorName:
          type: string
        authorEmail:
          type: string
        authorProfile:
          type: string
        ownerName:
          type: string
        ownerEmail:
          type: string
        ownerProfile:
          type: string
        title:
          type: string
        uuid:
          type: string
        currentStatus:
          type: string
        previousStatus:
          type: string
        currentStatusDetails:
          type: string
        previousStatusDetails:
          type: string
        owner:
          format: int32
          type: integer
        dueDate:
          $ref: '#/components/schemas/ISODate'
        closeDate:
          $ref: '#/components/schemas/ISODate'
        asXml:
          $ref: '#/components/schemas/Element'
      type: object
    MeResponse:
      example:
        profile: profile
        groupsWithEditor:
        - 6
        - 6
        organisation: organisation
        admin: true
        groupsWithReviewer:
        - 1
        - 1
        surname: surname
        groupsWithRegisteredUser:
        - 0
        - 0
        name: name
        id: id
        groupsWithUserAdmin:
        - 5
        - 5
        email: email
        hash: hash
        username: username
      properties:
        id:
          type: string
        profile:
          type: string
        username:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        hash:
          type: string
        organisation:
          type: string
        admin:
          type: boolean
        groupsWithRegisteredUser:
          items:
            format: int32
            type: integer
          type: array
        groupsWithEditor:
          items:
            format: int32
            type: integer
          type: array
        groupsWithReviewer:
          items:
            format: int32
            type: integer
          type: array
        groupsWithUserAdmin:
          items:
            format: int32
            type: integer
          type: array
      type: object
    UserRegisterDto:
      example:
        address:
          zip: zip
          country: country
          address: address
          city: city
          id: 9
          state: state
        captcha: captcha
        surname: surname
        profile: profile
        name: name
        organisation: organisation
        email: email
        username: username
      properties:
        profile:
          type: string
        username:
          type: string
        email:
          type: string
        name:
          type: string
        surname:
          type: string
        organisation:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        captcha:
          type: string
      type: object
    UserDto:
      example:
        addresses:
        - zip: zip
          country: country
          address: address
          city: city
          id: 9
          state: state
        - zip: zip
          country: country
          address: address
          city: city
          id: 9
          state: state
        groupsRegisteredUser:
        - groupsRegisteredUser
        - groupsRegisteredUser
        kind: kind
        profile: profile
        groupsUserAdmin:
        - groupsUserAdmin
        - groupsUserAdmin
        organisation: organisation
        enabled: true
        groupsEditor:
        - groupsEditor
        - groupsEditor
        groupsReviewer:
        - groupsReviewer
        - groupsReviewer
        password: password
        emailAddresses:
        - emailAddresses
        - emailAddresses
        surname: surname
        name: name
        id: id
        username: username
      properties:
        id:
          type: string
        profile:
          type: string
        username:
          type: string
        name:
          type: string
        surname:
          type: string
        emailAddresses:
          items:
            type: string
          type: array
        organisation:
          type: string
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        kind:
          type: string
        password:
          type: string
        groupsRegisteredUser:
          items:
            type: string
          type: array
        groupsEditor:
          items:
            type: string
          type: array
        groupsReviewer:
          items:
            type: string
          type: array
        groupsUserAdmin:
          items:
            type: string
          type: array
        enabled:
          type: boolean
        email:
          $ref: '#/components/schemas/UserDto'
      type: object
    Group:
      example:
        referrer: 5
        website: website
        enableAllowedCategories: true
        defaultCategory:
          name: name
          id: 0
          label:
            key: label
        reserved: true
        name: name
        logo: logo
        description: description
        allowedCategories:
        - name: name
          id: 0
          label:
            key: label
        - name: name
          id: 0
          label:
            key: label
        id: 1
        label:
          key: label
        email: email
      properties:
        logo:
          type: string
        website:
          type: string
        defaultCategory:
          $ref: '#/components/schemas/MetadataCategory'
        allowedCategories:
          items:
            $ref: '#/components/schemas/MetadataCategory'
          type: array
        enableAllowedCategories:
          type: boolean
        name:
          type: string
        id:
          format: int32
          type: integer
        description:
          type: string
        reserved:
          type: boolean
        email:
          type: string
        referrer:
          format: int32
          type: integer
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    UserGroup:
      example:
        profile: Administrator
        id:
          profile: Administrator
          groupId: 6
          userId: 0
        user:
          addresses:
          - zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          - zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          kind: kind
          profile: Administrator
          credentialsNonExpired: true
          organisation: organisation
          lastLoginDate: lastLoginDate
          enabled: true
          authorities:
          - authority: authority
          - authority: authority
          security:
            securityNotifications:
            - UPDATE_HASH_REQUIRED
            - UPDATE_HASH_REQUIRED
            authType: authType
            nodeId: nodeId
          emailAddresses:
          - emailAddresses
          - emailAddresses
          surname: surname
          name: name
          accountNonExpired: true
          id: 7
          primaryAddress:
            zip: zip
            country: country
            address: address
            city: city
            id: 9
            state: state
          email: email
          username: username
          accountNonLocked: true
        group:
          referrer: 5
          website: website
          enableAllowedCategories: true
          defaultCategory:
            name: name
            id: 0
            label:
              key: label
          reserved: true
          name: name
          logo: logo
          description: description
          allowedCategories:
          - name: name
            id: 0
            label:
              key: label
          - name: name
            id: 0
            label:
              key: label
          id: 1
          label:
            key: label
          email: email
      properties:
        profile:
          enum:
          - Administrator
          - UserAdmin
          - Reviewer
          - Editor
          - RegisteredUser
          - Guest
          - Monitor
          type: string
        id:
          $ref: '#/components/schemas/UserGroupId'
        group:
          $ref: '#/components/schemas/Group'
        user:
          $ref: '#/components/schemas/User'
      type: object
    UserGroupId:
      example:
        profile: Administrator
        groupId: 6
        userId: 0
      properties:
        profile:
          enum:
          - Administrator
          - UserAdmin
          - Reviewer
          - Editor
          - RegisteredUser
          - Guest
          - Monitor
          type: string
        userId:
          format: int32
          type: integer
        groupId:
          format: int32
          type: integer
      type: object
    UserFeedbackDTO:
      example:
        date: date
        authorEmail: authorEmail
        keywords:
        - keywords
        - keywords
        metadataTitle: metadataTitle
        authorOrganization: authorOrganization
        rating:
          key: 0
        published: true
        uuid: uuid
        parentUuid: parentUuid
        approverName: approverName
        authorUserId: 1
        captcha: captcha
        authorName: authorName
        comment: comment
        ratingAVG: 6
        metadataUUID: metadataUUID
        optionPrivacy: true
        showApproveButton: true
      properties:
        uuid:
          type: string
        comment:
          type: string
        rating:
          additionalProperties:
            format: int32
            type: integer
          type: object
        ratingAVG:
          format: int32
          type: integer
        metadataUUID:
          type: string
        metadataTitle:
          type: string
        authorUserId:
          format: int32
          type: integer
        authorName:
          type: string
        authorEmail:
          type: string
        authorOrganization:
          type: string
        approverName:
          type: string
        optionPrivacy:
          type: boolean
        published:
          type: boolean
        parentUuid:
          type: string
        captcha:
          type: string
        date:
          type: string
        showApproveButton:
          type: boolean
        keywords:
          items:
            type: string
          type: array
      type: object
    RatingCriteria:
      example:
        internal: true
        name: name
        id: 0
        label:
          key: label
      properties:
        name:
          type: string
        id:
          format: int32
          type: integer
        internal:
          type: boolean
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    RatingAverage:
      example:
        userfeedbackCount: 1
        ratingAverages:
          key: 6
        lastComment: lastComment
        ratingCount: 0
      properties:
        ratingCount:
          format: int32
          type: integer
        ratingAverages:
          additionalProperties:
            format: int32
            type: integer
          type: object
        userfeedbackCount:
          format: int32
          type: integer
        lastComment:
          type: string
      type: object
    ProcessingReport:
      example:
        running: true
        startIsoDateTime: startIsoDateTime
        totalTimeInSeconds: 6
        type: type
        uuid: uuid
        endIsoDateTime: endIsoDateTime
        ellapsedTimeInSeconds: 0
        errors:
        - date: date
          message: message
        - date: date
          message: message
        infos:
        - date: date
          message: message
        - date: date
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Report'
          type: array
        infos:
          items:
            $ref: '#/components/schemas/InfoReport'
          type: array
        uuid:
          type: string
          xml:
            attribute: true
        type:
          type: string
          xml:
            attribute: true
        running:
          type: boolean
        startIsoDateTime:
          type: string
          xml:
            attribute: true
        endIsoDateTime:
          type: string
          xml:
            attribute: true
        ellapsedTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
        totalTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
      type: object
      xml:
        name: report
    MetadataReplacementProcessingReport:
      example:
        totalRecords: 0
        metadata:
        - 6
        - 6
        numberOfRecordsChanged: 1
        metadataInfos:
          key:
          - date: date
            message: message
          - date: date
            message: message
        totalTimeInSeconds: 1
        metadataChanges:
          key:
            date: date
            message: message
            elementChanges:
            - originalVal: originalVal
              changedVal: changedVal
              fieldId: fieldId
            - originalVal: originalVal
              changedVal: changedVal
              fieldId: fieldId
        numberOfRecordsProcessed: 2
        type: type
        uuid: uuid
        endIsoDateTime: endIsoDateTime
        numberOfNullRecords: 9
        running: true
        numberOfRecordsNotChanged: 5
        startIsoDateTime: startIsoDateTime
        processId: processId
        numberOfRecordsNotEditable: 7
        numberOfRecords: 3
        numberOfRecordsWithErrors: 4
        numberOfRecordNotFound: 2
        ellapsedTimeInSeconds: 7
        errors:
        - date: date
          message: message
        - date: date
          message: message
        infos:
        - date: date
          message: message
        - date: date
          message: message
        metadataErrors:
          key:
          - date: date
            message: message
          - date: date
            message: message
        noProcessFoundCount: 5
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Report'
          type: array
        infos:
          items:
            $ref: '#/components/schemas/InfoReport'
          type: array
        uuid:
          type: string
          xml:
            attribute: true
        totalRecords:
          format: int32
          type: integer
          writeOnly: true
        metadata:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        metadataErrors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Report'
            type: array
          type: object
          xml:
            name: errors
        metadataInfos:
          additionalProperties:
            items:
              $ref: '#/components/schemas/InfoReport'
            type: array
          type: object
          xml:
            name: infos
        processId:
          type: string
          xml:
            attribute: true
            name: process
        metadataChanges:
          additionalProperties:
            $ref: '#/components/schemas/ReplaceReport'
          type: object
          xml:
            name: changes
        numberOfRecordsChanged:
          format: int32
          type: integer
        numberOfRecordsNotChanged:
          format: int32
          type: integer
        noProcessFoundCount:
          format: int32
          type: integer
        numberOfRecordNotFound:
          format: int32
          type: integer
        numberOfRecordsNotEditable:
          format: int32
          type: integer
        numberOfNullRecords:
          format: int32
          type: integer
        numberOfRecords:
          format: int32
          type: integer
          xml:
            attribute: true
        numberOfRecordsProcessed:
          format: int32
          type: integer
        numberOfRecordsWithErrors:
          format: int32
          type: integer
        type:
          type: string
          xml:
            attribute: true
        running:
          type: boolean
        startIsoDateTime:
          type: string
          xml:
            attribute: true
        endIsoDateTime:
          type: string
          xml:
            attribute: true
        ellapsedTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
        totalTimeInSeconds:
          format: int64
          type: integer
          xml:
            attribute: true
      type: object
      xml:
        name: report
    ReplaceEntryChange:
      example:
        originalVal: originalVal
        changedVal: changedVal
        fieldId: fieldId
      properties:
        originalVal:
          type: string
        changedVal:
          type: string
        fieldId:
          type: string
      type: object
    ReplaceReport:
      example:
        date: date
        message: message
        elementChanges:
        - originalVal: originalVal
          changedVal: changedVal
          fieldId: fieldId
        - originalVal: originalVal
          changedVal: changedVal
          fieldId: fieldId
      properties:
        message:
          type: string
        date:
          type: string
        elementChanges:
          items:
            $ref: '#/components/schemas/ReplaceEntryChange'
          type: array
      type: object
    PasswordUpdateParameter:
      example:
        password: password
        changeKey: changeKey
      properties:
        password:
          type: string
        changeKey:
          type: string
      type: object
    OwnerResponse:
      example:
        records: 6
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        records:
          format: int64
          type: integer
      type: object
    UserGroupsResponse:
      example:
        groupName: groupName
        groupId: 6
        userName: userName
        userId: 0
        userProfile: userProfile
      properties:
        userId:
          format: int32
          type: integer
        userName:
          type: string
        groupId:
          format: int32
          type: integer
        groupName:
          type: string
        userProfile:
          type: string
      type: object
    TransferRequest:
      example:
        targetGroup: 5
        sourceGroup: 6
        sourceUser: 0
        targetUser: 1
      properties:
        sourceUser:
          format: int32
          type: integer
        sourceGroup:
          format: int32
          type: integer
        targetUser:
          format: int32
          type: integer
        targetGroup:
          format: int32
          type: integer
      type: object
    Operation:
      example:
        reserved: true
        name: name
        reservedOperation: view
        id: 0
        label:
          key: label
      properties:
        name:
          type: string
        id:
          format: int32
          type: integer
        reserved:
          type: boolean
        reservedOperation:
          enum:
          - view
          - download
          - editing
          - notify
          - dynamic
          - featured
          type: string
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    UserSearchDto:
      example:
        creator: creator
        featuredType: featuredType
        names:
          key: names
        creatorId: 6
        logo: logo
        groups:
        - 1
        - 1
        id: 0
        creationDate: creationDate
        url: url
      properties:
        id:
          format: int32
          type: integer
        url:
          type: string
        featuredType:
          type: string
        creationDate:
          type: string
        creatorId:
          format: int32
          type: integer
        creator:
          type: string
        logo:
          type: string
        names:
          additionalProperties:
            type: string
          type: object
        groups:
          items:
            format: int32
            type: integer
          type: array
      type: object
    PaginatedUserSearchResponse:
      example:
        total: 0
        rows:
        - creator: creator
          featuredType: featuredType
          names:
            key: names
          creatorId: 6
          logo: logo
          groups:
          - 1
          - 1
          id: 0
          creationDate: creationDate
          url: url
        - creator: creator
          featuredType: featuredType
          names:
            key: names
          creatorId: 6
          logo: logo
          groups:
          - 1
          - 1
          id: 0
          creationDate: creationDate
          url: url
      properties:
        total:
          format: int64
          type: integer
        rows:
          items:
            $ref: '#/components/schemas/UserSearchDto'
          type: array
      type: object
    LogFileResponse:
      example:
        file: file
        name: name
      properties:
        file:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
    Selection:
      example:
        watchable: true
        name: name
        id: 0
        label:
          key: label
      properties:
        name:
          type: string
        id:
          format: int32
          type: integer
        watchable:
          type: boolean
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    BatchEditing:
      properties:
        section:
          items:
            $ref: '#/components/schemas/Section'
          type: array
      required:
      - section
      type: object
      xml:
        name: batchEditing
    Field:
      properties:
        template:
          type: string
        name:
          type: string
          xml:
            attribute: true
        xpath:
          type: string
          xml:
            attribute: true
        indexField:
          type: string
          xml:
            attribute: true
        use:
          type: string
          xml:
            attribute: true
        removable:
          type: boolean
          xml:
            attribute: true
        insertMode:
          type: string
          xml:
            attribute: true
        codelist:
          type: string
          xml:
            attribute: true
      type: object
    Section:
      properties:
        field:
          items:
            $ref: '#/components/schemas/Field'
          type: array
        name:
          type: string
          xml:
            attribute: true
      required:
      - field
      type: object
    Codelist:
      example:
        entry:
        - hideInEditMode: hideInEditMode
          code: code
          description: description
          label: label
        - hideInEditMode: hideInEditMode
          code: code
          description: description
          label: label
        name: name
        alias: alias
      properties:
        entry:
          items:
            $ref: '#/components/schemas/Entry'
          type: array
        name:
          type: string
          xml:
            attribute: true
        alias:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: codelist
    Entry:
      example:
        hideInEditMode: hideInEditMode
        code: code
        description: description
        label: label
      properties:
        code:
          type: string
        label:
          type: string
        description:
          type: string
        hideInEditMode:
          type: string
          xml:
            attribute: true
      required:
      - code
      - description
      - label
      type: object
      xml:
        name: entry
    MetadataSchema:
      example:
        dependsOn: dependsOn
        canEdit: true
        operationFilters: {}
        titles:
          key: titles
        rootAppInfoElements:
        - parent:
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            contentSize: 6
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          textTrim: textTrim
          additionalNamespaces:
          - '{}'
          - '{}'
          rootElement: true
          qualifiedName: qualifiedName
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          descendants: '{}'
          namespacePrefix: namespacePrefix
          content:
          - '{}'
          - '{}'
          children:
          - '{}'
          - '{}'
          contentSize: 1
          name: name
          namespace:
            prefix: prefix
            uri: uri
          attributes:
          - '{}'
          - '{}'
          namespaceURI: namespaceURI
          text: text
          textNormalize: textNormalize
          value: value
        - parent:
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            contentSize: 6
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          textTrim: textTrim
          additionalNamespaces:
          - '{}'
          - '{}'
          rootElement: true
          qualifiedName: qualifiedName
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          descendants: '{}'
          namespacePrefix: namespacePrefix
          content:
          - '{}'
          - '{}'
          children:
          - '{}'
          - '{}'
          contentSize: 1
          name: name
          namespace:
            prefix: prefix
            uri: uri
          attributes:
          - '{}'
          - '{}'
          namespaceURI: namespaceURI
          text: text
          textNormalize: textNormalize
          value: value
        descriptions:
          key: descriptions
        version: version
        standardUrl: standardUrl
        readwriteUUID: true
        appMajorVersionSupported: appMajorVersionSupported
        targetNamespace: targetNamespace
        name: name
        schematronRules:
        - schematronRules
        - schematronRules
        appMinorVersionSupported: appMinorVersionSupported
        namespaces:
          key: namespaces
      properties:
        name:
          type: string
        titles:
          additionalProperties:
            type: string
          type: object
        descriptions:
          additionalProperties:
            type: string
          type: object
        standardUrl:
          type: string
        targetNamespace:
          type: string
        namespaces:
          additionalProperties:
            type: string
          type: object
        readwriteUUID:
          type: boolean
        schematronRules:
          items:
            type: string
          type: array
        version:
          type: string
        appMinorVersionSupported:
          type: string
        appMajorVersionSupported:
          type: string
        canEdit:
          type: boolean
          writeOnly: true
        rootAppInfoElements:
          items:
            $ref: '#/components/schemas/Element'
          type: array
          writeOnly: true
        dependsOn:
          type: string
        operationFilters:
          additionalProperties:
            $ref: '#/components/schemas/PairStringElement'
          type: object
          writeOnly: true
      type: object
    PairStringElement:
      type: object
    Associated:
      example:
        item:
        - agg_isTemporalStatOf:
          - agg_isTemporalStatOf
          - agg_isTemporalStatOf
          agg_isDescriptionOf:
          - agg_isDescriptionOf
          - agg_isDescriptionOf
          origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          agg_largerWorkCitation:
          - agg_largerWorkCitation
          - agg_largerWorkCitation
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - agg_isTemporalStatOf:
          - agg_isTemporalStatOf
          - agg_isTemporalStatOf
          agg_isDescriptionOf:
          - agg_isDescriptionOf
          - agg_isDescriptionOf
          origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          agg_largerWorkCitation:
          - agg_largerWorkCitation
          - agg_largerWorkCitation
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/AssociatedSiblingMetadataItem'
          type: array
      type: object
    AssociatedSiblingMetadataItem:
      example:
        agg_isTemporalStatOf:
        - agg_isTemporalStatOf
        - agg_isTemporalStatOf
        agg_isDescriptionOf:
        - agg_isDescriptionOf
        - agg_isDescriptionOf
        origin: origin
        mdType:
        - mdType
        - mdType
        description:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        id: id
        type: type
        title:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        agg_largerWorkCitation:
        - agg_largerWorkCitation
        - agg_largerWorkCitation
        url:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
      properties:
        id:
          type: string
        url:
          $ref: '#/components/schemas/MultilingualValue'
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualValue'
        description:
          $ref: '#/components/schemas/Description'
        mdType:
          items:
            type: string
          type: array
        origin:
          type: string
        agg_isTemporalStatOf:
          items:
            type: string
          type: array
        agg_largerWorkCitation:
          items:
            type: string
          type: array
        agg_isDescriptionOf:
          items:
            type: string
          type: array
      required:
      - description
      - mdType
      - title
      type: object
    AttributeTable:
      example:
        element:
        - parent:
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            contentSize: 6
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          textTrim: textTrim
          additionalNamespaces:
          - '{}'
          - '{}'
          rootElement: true
          qualifiedName: qualifiedName
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          descendants: '{}'
          namespacePrefix: namespacePrefix
          content:
          - '{}'
          - '{}'
          children:
          - '{}'
          - '{}'
          contentSize: 1
          name: name
          namespace:
            prefix: prefix
            uri: uri
          attributes:
          - '{}'
          - '{}'
          namespaceURI: namespaceURI
          text: text
          textNormalize: textNormalize
          value: value
        - parent:
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            contentSize: 6
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          textTrim: textTrim
          additionalNamespaces:
          - '{}'
          - '{}'
          rootElement: true
          qualifiedName: qualifiedName
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          descendants: '{}'
          namespacePrefix: namespacePrefix
          content:
          - '{}'
          - '{}'
          children:
          - '{}'
          - '{}'
          contentSize: 1
          name: name
          namespace:
            prefix: prefix
            uri: uri
          attributes:
          - '{}'
          - '{}'
          namespaceURI: namespaceURI
          text: text
          textNormalize: textNormalize
          value: value
      properties:
        element:
          items:
            $ref: '#/components/schemas/Element'
          type: array
      type: object
    Children:
      example:
        item:
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedMetadataItem'
          type: array
      type: object
    Dataset:
      example:
        item:
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedMetadataItem'
          type: array
      type: object
    Description:
      example:
        value:
        - href: href
          lang: lang
          value: value
        - href: href
          lang: lang
          value: value
      properties:
        value:
          items:
            $ref: '#/components/schemas/LocalizedString'
          type: array
      type: object
    FCRelatedMetadataItem:
      example:
        origin: origin
        mdType:
        - mdType
        - mdType
        featureType:
          attributeTable:
            element:
            - parent:
                document:
                  docType:
                    internalSubset: internalSubset
                    systemID: systemID
                    value: value
                    publicID: publicID
                    elementName: elementName
                  baseURI: baseURI
                  contentSize: 0
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                contentSize: 6
                descendants: '{}'
                content:
                - '{}'
                - '{}'
              textTrim: textTrim
              additionalNamespaces:
              - '{}'
              - '{}'
              rootElement: true
              qualifiedName: qualifiedName
              document:
                docType:
                  internalSubset: internalSubset
                  systemID: systemID
                  value: value
                  publicID: publicID
                  elementName: elementName
                baseURI: baseURI
                contentSize: 0
                descendants: '{}'
                content:
                - '{}'
                - '{}'
              descendants: '{}'
              namespacePrefix: namespacePrefix
              content:
              - '{}'
              - '{}'
              children:
              - '{}'
              - '{}'
              contentSize: 1
              name: name
              namespace:
                prefix: prefix
                uri: uri
              attributes:
              - '{}'
              - '{}'
              namespaceURI: namespaceURI
              text: text
              textNormalize: textNormalize
              value: value
            - parent:
                document:
                  docType:
                    internalSubset: internalSubset
                    systemID: systemID
                    value: value
                    publicID: publicID
                    elementName: elementName
                  baseURI: baseURI
                  contentSize: 0
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                contentSize: 6
                descendants: '{}'
                content:
                - '{}'
                - '{}'
              textTrim: textTrim
              additionalNamespaces:
              - '{}'
              - '{}'
              rootElement: true
              qualifiedName: qualifiedName
              document:
                docType:
                  internalSubset: internalSubset
                  systemID: systemID
                  value: value
                  publicID: publicID
                  elementName: elementName
                baseURI: baseURI
                contentSize: 0
                descendants: '{}'
                content:
                - '{}'
                - '{}'
              descendants: '{}'
              namespacePrefix: namespacePrefix
              content:
              - '{}'
              - '{}'
              children:
              - '{}'
              - '{}'
              contentSize: 1
              name: name
              namespace:
                prefix: prefix
                uri: uri
              attributes:
              - '{}'
              - '{}'
              namespaceURI: namespaceURI
              text: text
              textNormalize: textNormalize
              value: value
        description:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        id: id
        type: type
        title:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        url:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
      properties:
        id:
          type: string
        url:
          $ref: '#/components/schemas/MultilingualValue'
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualValue'
        description:
          $ref: '#/components/schemas/Description'
        mdType:
          items:
            type: string
          type: array
        origin:
          type: string
        featureType:
          $ref: '#/components/schemas/FeatureType'
      required:
      - description
      - featureType
      - mdType
      - title
      type: object
    Fcat:
      example:
        item:
        - origin: origin
          mdType:
          - mdType
          - mdType
          featureType:
            attributeTable:
              element:
              - parent:
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  contentSize: 6
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                textTrim: textTrim
                additionalNamespaces:
                - '{}'
                - '{}'
                rootElement: true
                qualifiedName: qualifiedName
                document:
                  docType:
                    internalSubset: internalSubset
                    systemID: systemID
                    value: value
                    publicID: publicID
                    elementName: elementName
                  baseURI: baseURI
                  contentSize: 0
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                descendants: '{}'
                namespacePrefix: namespacePrefix
                content:
                - '{}'
                - '{}'
                children:
                - '{}'
                - '{}'
                contentSize: 1
                name: name
                namespace:
                  prefix: prefix
                  uri: uri
                attributes:
                - '{}'
                - '{}'
                namespaceURI: namespaceURI
                text: text
                textNormalize: textNormalize
                value: value
              - parent:
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  contentSize: 6
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                textTrim: textTrim
                additionalNamespaces:
                - '{}'
                - '{}'
                rootElement: true
                qualifiedName: qualifiedName
                document:
                  docType:
                    internalSubset: internalSubset
                    systemID: systemID
                    value: value
                    publicID: publicID
                    elementName: elementName
                  baseURI: baseURI
                  contentSize: 0
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                descendants: '{}'
                namespacePrefix: namespacePrefix
                content:
                - '{}'
                - '{}'
                children:
                - '{}'
                - '{}'
                contentSize: 1
                name: name
                namespace:
                  prefix: prefix
                  uri: uri
                attributes:
                - '{}'
                - '{}'
                namespaceURI: namespaceURI
                text: text
                textNormalize: textNormalize
                value: value
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - origin: origin
          mdType:
          - mdType
          - mdType
          featureType:
            attributeTable:
              element:
              - parent:
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  contentSize: 6
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                textTrim: textTrim
                additionalNamespaces:
                - '{}'
                - '{}'
                rootElement: true
                qualifiedName: qualifiedName
                document:
                  docType:
                    internalSubset: internalSubset
                    systemID: systemID
                    value: value
                    publicID: publicID
                    elementName: elementName
                  baseURI: baseURI
                  contentSize: 0
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                descendants: '{}'
                namespacePrefix: namespacePrefix
                content:
                - '{}'
                - '{}'
                children:
                - '{}'
                - '{}'
                contentSize: 1
                name: name
                namespace:
                  prefix: prefix
                  uri: uri
                attributes:
                - '{}'
                - '{}'
                namespaceURI: namespaceURI
                text: text
                textNormalize: textNormalize
                value: value
              - parent:
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  contentSize: 6
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                textTrim: textTrim
                additionalNamespaces:
                - '{}'
                - '{}'
                rootElement: true
                qualifiedName: qualifiedName
                document:
                  docType:
                    internalSubset: internalSubset
                    systemID: systemID
                    value: value
                    publicID: publicID
                    elementName: elementName
                  baseURI: baseURI
                  contentSize: 0
                  descendants: '{}'
                  content:
                  - '{}'
                  - '{}'
                descendants: '{}'
                namespacePrefix: namespacePrefix
                content:
                - '{}'
                - '{}'
                children:
                - '{}'
                - '{}'
                contentSize: 1
                name: name
                namespace:
                  prefix: prefix
                  uri: uri
                attributes:
                - '{}'
                - '{}'
                namespaceURI: namespaceURI
                text: text
                textNormalize: textNormalize
                value: value
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/FCRelatedMetadataItem'
          type: array
      type: object
    FeatureType:
      example:
        attributeTable:
          element:
          - parent:
              document:
                docType:
                  internalSubset: internalSubset
                  systemID: systemID
                  value: value
                  publicID: publicID
                  elementName: elementName
                baseURI: baseURI
                contentSize: 0
                descendants: '{}'
                content:
                - '{}'
                - '{}'
              contentSize: 6
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            textTrim: textTrim
            additionalNamespaces:
            - '{}'
            - '{}'
            rootElement: true
            qualifiedName: qualifiedName
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            descendants: '{}'
            namespacePrefix: namespacePrefix
            content:
            - '{}'
            - '{}'
            children:
            - '{}'
            - '{}'
            contentSize: 1
            name: name
            namespace:
              prefix: prefix
              uri: uri
            attributes:
            - '{}'
            - '{}'
            namespaceURI: namespaceURI
            text: text
            textNormalize: textNormalize
            value: value
          - parent:
              document:
                docType:
                  internalSubset: internalSubset
                  systemID: systemID
                  value: value
                  publicID: publicID
                  elementName: elementName
                baseURI: baseURI
                contentSize: 0
                descendants: '{}'
                content:
                - '{}'
                - '{}'
              contentSize: 6
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            textTrim: textTrim
            additionalNamespaces:
            - '{}'
            - '{}'
            rootElement: true
            qualifiedName: qualifiedName
            document:
              docType:
                internalSubset: internalSubset
                systemID: systemID
                value: value
                publicID: publicID
                elementName: elementName
              baseURI: baseURI
              contentSize: 0
              descendants: '{}'
              content:
              - '{}'
              - '{}'
            descendants: '{}'
            namespacePrefix: namespacePrefix
            content:
            - '{}'
            - '{}'
            children:
            - '{}'
            - '{}'
            contentSize: 1
            name: name
            namespace:
              prefix: prefix
              uri: uri
            attributes:
            - '{}'
            - '{}'
            namespaceURI: namespaceURI
            text: text
            textNormalize: textNormalize
            value: value
      properties:
        attributeTable:
          $ref: '#/components/schemas/AttributeTable'
      type: object
    Hasfeaturecats:
      example:
        item:
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedMetadataItem'
          type: array
      type: object
    Hassource:
      example:
        item:
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedMetadataItem'
          type: array
      type: object
    LocalizedString:
      example:
        href: href
        lang: lang
        value: value
      properties:
        value:
          type: string
        lang:
          type: string
          xml:
            attribute: true
        href:
          type: string
          xml:
            attribute: true
      type: object
    MultilingualValue:
      example:
        value:
        - href: href
          lang: lang
          value: value
        - href: href
          lang: lang
          value: value
      properties:
        value:
          items:
            $ref: '#/components/schemas/LocalizedString'
          type: array
      type: object
    Online:
      example:
        item:
        - protocol: protocol
          function: function
          applicationProfile: applicationProfile
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - protocol: protocol
          function: function
          applicationProfile: applicationProfile
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedLinkItem'
          type: array
      type: object
    Related:
      example:
        item:
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedMetadataItem'
          type: array
      type: object
    RelatedLinkItem:
      example:
        protocol: protocol
        function: function
        applicationProfile: applicationProfile
        description:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        id: id
        type: type
        title:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        url:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
      properties:
        id:
          type: string
        url:
          $ref: '#/components/schemas/MultilingualValue'
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualValue'
        protocol:
          type: string
        description:
          $ref: '#/components/schemas/Description'
        function:
          type: string
        applicationProfile:
          type: string
      required:
      - description
      - title
      type: object
    RelatedMetadataItem:
      example:
        origin: origin
        mdType:
        - mdType
        - mdType
        description:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        id: id
        type: type
        title:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        url:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
      properties:
        id:
          type: string
        url:
          $ref: '#/components/schemas/MultilingualValue'
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualValue'
        description:
          $ref: '#/components/schemas/Description'
        mdType:
          items:
            type: string
          type: array
        origin:
          type: string
      required:
      - description
      - mdType
      - title
      type: object
    RelatedResponse:
      example:
        parent:
          document:
            docType:
              internalSubset: internalSubset
              systemID: systemID
              value: value
              publicID: publicID
              elementName: elementName
            baseURI: baseURI
            contentSize: 0
            descendants: '{}'
            content:
            - '{}'
            - '{}'
          contentSize: 6
          descendants: '{}'
          content:
          - '{}'
          - '{}'
        siblings:
          item:
          - origin: origin
            associationType: associationType
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            initiativeType: initiativeType
          - origin: origin
            associationType: associationType
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            initiativeType: initiativeType
        hasfeaturecats:
          item:
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        sources:
          filter: filter
          groupOwner: 0
          name: name
          logo: logo
          uiConfig: uiConfig
          label:
            key: label
          type: portal
          serviceRecord: serviceRecord
          creationDate:
            hours: 2
            dateOnly: true
            months: 2
            dateAndTime: dateAndTime
            dateYearMonthOnly: true
            minutes: 7
            timeInSeconds: 7
            years: 3
            seconds: 9
            dateYearOnly: true
            timeAsString: timeAsString
            dateAsString: dateAsString
            days: 4
          uuid: uuid
        fcats:
          item:
          - origin: origin
            mdType:
            - mdType
            - mdType
            featureType:
              attributeTable:
                element:
                - parent:
                    document:
                      docType:
                        internalSubset: internalSubset
                        systemID: systemID
                        value: value
                        publicID: publicID
                        elementName: elementName
                      baseURI: baseURI
                      contentSize: 0
                      descendants: '{}'
                      content:
                      - '{}'
                      - '{}'
                    contentSize: 6
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  textTrim: textTrim
                  additionalNamespaces:
                  - '{}'
                  - '{}'
                  rootElement: true
                  qualifiedName: qualifiedName
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  descendants: '{}'
                  namespacePrefix: namespacePrefix
                  content:
                  - '{}'
                  - '{}'
                  children:
                  - '{}'
                  - '{}'
                  contentSize: 1
                  name: name
                  namespace:
                    prefix: prefix
                    uri: uri
                  attributes:
                  - '{}'
                  - '{}'
                  namespaceURI: namespaceURI
                  text: text
                  textNormalize: textNormalize
                  value: value
                - parent:
                    document:
                      docType:
                        internalSubset: internalSubset
                        systemID: systemID
                        value: value
                        publicID: publicID
                        elementName: elementName
                      baseURI: baseURI
                      contentSize: 0
                      descendants: '{}'
                      content:
                      - '{}'
                      - '{}'
                    contentSize: 6
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  textTrim: textTrim
                  additionalNamespaces:
                  - '{}'
                  - '{}'
                  rootElement: true
                  qualifiedName: qualifiedName
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  descendants: '{}'
                  namespacePrefix: namespacePrefix
                  content:
                  - '{}'
                  - '{}'
                  children:
                  - '{}'
                  - '{}'
                  contentSize: 1
                  name: name
                  namespace:
                    prefix: prefix
                    uri: uri
                  attributes:
                  - '{}'
                  - '{}'
                  namespaceURI: namespaceURI
                  text: text
                  textNormalize: textNormalize
                  value: value
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - origin: origin
            mdType:
            - mdType
            - mdType
            featureType:
              attributeTable:
                element:
                - parent:
                    document:
                      docType:
                        internalSubset: internalSubset
                        systemID: systemID
                        value: value
                        publicID: publicID
                        elementName: elementName
                      baseURI: baseURI
                      contentSize: 0
                      descendants: '{}'
                      content:
                      - '{}'
                      - '{}'
                    contentSize: 6
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  textTrim: textTrim
                  additionalNamespaces:
                  - '{}'
                  - '{}'
                  rootElement: true
                  qualifiedName: qualifiedName
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  descendants: '{}'
                  namespacePrefix: namespacePrefix
                  content:
                  - '{}'
                  - '{}'
                  children:
                  - '{}'
                  - '{}'
                  contentSize: 1
                  name: name
                  namespace:
                    prefix: prefix
                    uri: uri
                  attributes:
                  - '{}'
                  - '{}'
                  namespaceURI: namespaceURI
                  text: text
                  textNormalize: textNormalize
                  value: value
                - parent:
                    document:
                      docType:
                        internalSubset: internalSubset
                        systemID: systemID
                        value: value
                        publicID: publicID
                        elementName: elementName
                      baseURI: baseURI
                      contentSize: 0
                      descendants: '{}'
                      content:
                      - '{}'
                      - '{}'
                    contentSize: 6
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  textTrim: textTrim
                  additionalNamespaces:
                  - '{}'
                  - '{}'
                  rootElement: true
                  qualifiedName: qualifiedName
                  document:
                    docType:
                      internalSubset: internalSubset
                      systemID: systemID
                      value: value
                      publicID: publicID
                      elementName: elementName
                    baseURI: baseURI
                    contentSize: 0
                    descendants: '{}'
                    content:
                    - '{}'
                    - '{}'
                  descendants: '{}'
                  namespacePrefix: namespacePrefix
                  content:
                  - '{}'
                  - '{}'
                  children:
                  - '{}'
                  - '{}'
                  contentSize: 1
                  name: name
                  namespace:
                    prefix: prefix
                    uri: uri
                  attributes:
                  - '{}'
                  - '{}'
                  namespaceURI: namespaceURI
                  text: text
                  textNormalize: textNormalize
                  value: value
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        services:
          item:
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        datasets:
          item:
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        onlines:
          item:
          - protocol: protocol
            function: function
            applicationProfile: applicationProfile
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - protocol: protocol
            function: function
            applicationProfile: applicationProfile
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        related:
          item:
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        children:
          item:
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        associated:
          item:
          - agg_isTemporalStatOf:
            - agg_isTemporalStatOf
            - agg_isTemporalStatOf
            agg_isDescriptionOf:
            - agg_isDescriptionOf
            - agg_isDescriptionOf
            origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            agg_largerWorkCitation:
            - agg_largerWorkCitation
            - agg_largerWorkCitation
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - agg_isTemporalStatOf:
            - agg_isTemporalStatOf
            - agg_isTemporalStatOf
            agg_isDescriptionOf:
            - agg_isDescriptionOf
            - agg_isDescriptionOf
            origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            agg_largerWorkCitation:
            - agg_largerWorkCitation
            - agg_largerWorkCitation
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        hassources:
          item:
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - origin: origin
            mdType:
            - mdType
            - mdType
            description:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
        thumbnails:
          item:
          - id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
          - id: id
            type: type
            title:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
            url:
              value:
              - href: href
                lang: lang
                value: value
              - href: href
                lang: lang
                value: value
      properties:
        children:
          $ref: '#/components/schemas/Children'
        parent:
          $ref: '#/components/schemas/Parent'
        siblings:
          $ref: '#/components/schemas/Siblings'
        associated:
          $ref: '#/components/schemas/Associated'
        services:
          $ref: '#/components/schemas/Service'
        datasets:
          $ref: '#/components/schemas/Dataset'
        fcats:
          $ref: '#/components/schemas/Fcat'
        hasfeaturecats:
          $ref: '#/components/schemas/Hasfeaturecats'
        sources:
          $ref: '#/components/schemas/Source'
        hassources:
          $ref: '#/components/schemas/Hassource'
        related:
          $ref: '#/components/schemas/Related'
        onlines:
          $ref: '#/components/schemas/Online'
        thumbnails:
          $ref: '#/components/schemas/Thumbnail'
      type: object
      xml:
        name: related
    RelatedSiblingMetadataItem:
      example:
        origin: origin
        associationType: associationType
        mdType:
        - mdType
        - mdType
        description:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        id: id
        type: type
        title:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        url:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        initiativeType: initiativeType
      properties:
        id:
          type: string
        url:
          $ref: '#/components/schemas/MultilingualValue'
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualValue'
        description:
          $ref: '#/components/schemas/Description'
        mdType:
          items:
            type: string
          type: array
        origin:
          type: string
        associationType:
          type: string
        initiativeType:
          type: string
      required:
      - associationType
      - description
      - initiativeType
      - mdType
      - title
      type: object
    RelatedThumbnailItem:
      example:
        id: id
        type: type
        title:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
        url:
          value:
          - href: href
            lang: lang
            value: value
          - href: href
            lang: lang
            value: value
      properties:
        id:
          type: string
        url:
          $ref: '#/components/schemas/MultilingualValue'
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualValue'
      required:
      - title
      type: object
    Service:
      example:
        item:
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - origin: origin
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedMetadataItem'
          type: array
      type: object
    Siblings:
      example:
        item:
        - origin: origin
          associationType: associationType
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          initiativeType: initiativeType
        - origin: origin
          associationType: associationType
          mdType:
          - mdType
          - mdType
          description:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          initiativeType: initiativeType
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedSiblingMetadataItem'
          type: array
      type: object
    Thumbnail:
      example:
        item:
        - id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
        - id: id
          type: type
          title:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
          url:
            value:
            - href: href
              lang: lang
              value: value
            - href: href
              lang: lang
              value: value
      properties:
        item:
          items:
            $ref: '#/components/schemas/RelatedThumbnailItem'
          type: array
      type: object
    Crs:
      example:
        code: code
        authority: authority
        description: description
        version: version
        codeSpace: codeSpace
      properties:
        code:
          type: string
        authority:
          type: string
        version:
          type: string
        codeSpace:
          type: string
        description:
          type: string
      type: object
    KeywordBean:
      example:
        coordEast: coordEast
        values:
          key: values
        definition: definition
        coordWest: coordWest
        definitions:
          key: definitions
        thesaurusKey: thesaurusKey
        value: value
        uri: uri
        coordSouth: coordSouth
        coordNorth: coordNorth
      properties:
        values:
          additionalProperties:
            type: string
          type: object
        definitions:
          additionalProperties:
            type: string
          type: object
        coordEast:
          type: string
        coordWest:
          type: string
        coordSouth:
          type: string
        coordNorth:
          type: string
        thesaurusKey:
          type: string
        namespaceCode:
          $ref: '#/components/schemas/KeywordBean'
        thesaurusInfo:
          $ref: '#/components/schemas/KeywordBean'
        definition:
          type: string
        value:
          type: string
        uri:
          type: string
      type: object
    PageJSONWrapper:
      example:
        format: LINK
        link: link
        language: language
        linkText: linkText
        sections:
        - ALL
        - ALL
        status: PUBLIC
      properties:
        format:
          enum:
          - LINK
          - HTML
          - TEXT
          - MARKDOWN
          - WIKI
          type: string
        language:
          type: string
        status:
          enum:
          - PUBLIC
          - PUBLIC_ONLY
          - PRIVATE
          - HIDDEN
          type: string
        link:
          type: string
        sections:
          items:
            enum:
            - ALL
            - TOP
            - FOOTER
            - MENU
            - SUBMENU
            - CUSTOM_MENU1
            - CUSTOM_MENU2
            - CUSTOM_MENU3
            - DRAFT
            type: string
          type: array
        linkText:
          type: string
      type: object
    ExtentDto:
      example:
        xpath: xpath
        description: description
        href: href
        type: type
      properties:
        href:
          type: string
        type:
          type: string
        xpath:
          type: string
        description:
          type: string
      type: object
    BatchEditParameter:
      example:
        xpath: xpath
        condition: condition
        value: value
      properties:
        xpath:
          type: string
        value:
          type: string
        condition:
          type: string
      required:
      - value
      - xpath
      type: object
      xml:
        name: edit
    IProcessingReport:
      example:
        running: true
        startIsoDateTime: startIsoDateTime
        totalTimeInSeconds: 6
        type: type
        uuid: uuid
        endIsoDateTime: endIsoDateTime
        ellapsedTimeInSeconds: 0
      properties:
        type:
          type: string
        running:
          type: boolean
        uuid:
          type: string
        startIsoDateTime:
          type: string
        endIsoDateTime:
          type: string
        ellapsedTimeInSeconds:
          format: int64
          type: integer
        totalTimeInSeconds:
          format: int64
          type: integer
      type: object
    FeatureResponse:
      example:
        decodeMap:
          key:
          - decodeMap
          - decodeMap
      properties:
        decodeMap:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
      xml:
        name: related
    GroupOperations:
      example:
        operations:
          key: true
        group: 0
      properties:
        operations:
          additionalProperties:
            type: boolean
          type: object
        group:
          format: int32
          type: integer
      type: object
    SharingParameter:
      example:
        privileges:
        - operations:
            key: true
          group: 0
        - operations:
            key: true
          group: 0
        clear: true
      properties:
        privileges:
          items:
            $ref: '#/components/schemas/GroupOperations'
          type: array
        clear:
          type: boolean
      type: object
    GroupPrivilege:
      example:
        operations:
          key: true
        reserved: true
        userProfiles:
        - Administrator
        - Administrator
        userGroup: true
        userProfile:
        - Administrator
        - Administrator
        group: 0
      properties:
        operations:
          additionalProperties:
            type: boolean
          type: object
        group:
          format: int32
          type: integer
        userProfiles:
          items:
            enum:
            - Administrator
            - UserAdmin
            - Reviewer
            - Editor
            - RegisteredUser
            - Guest
            - Monitor
            type: string
          type: array
        userGroup:
          type: boolean
        reserved:
          type: boolean
        userProfile:
          items:
            enum:
            - Administrator
            - UserAdmin
            - Reviewer
            - Editor
            - RegisteredUser
            - Guest
            - Monitor
            type: string
          type: array
          writeOnly: true
      type: object
    SharingResponse:
      example:
        owner: owner
        privileges:
        - operations:
            key: true
          reserved: true
          userProfiles:
          - Administrator
          - Administrator
          userGroup: true
          userProfile:
          - Administrator
          - Administrator
          group: 0
        - operations:
            key: true
          reserved: true
          userProfiles:
          - Administrator
          - Administrator
          userGroup: true
          userProfile:
          - Administrator
          - Administrator
          group: 0
        groupOwner: groupOwner
      properties:
        privileges:
          items:
            $ref: '#/components/schemas/GroupPrivilege'
          type: array
        owner:
          type: string
        groupOwner:
          type: string
      type: object
    MetadataIdentifierTemplate:
      example:
        template: template
        systemDefault: true
        systemProvided_JPAWorkaround: systemProvided_JPAWorkaround
        name: name
        id: 0
        systemProvided: true
      properties:
        name:
          type: string
        id:
          format: int32
          type: integer
        template:
          type: string
        systemProvided_JPAWorkaround:
          type: string
          writeOnly: true
        systemProvided:
          type: boolean
        systemDefault:
          type: boolean
          writeOnly: true
      type: object
    Category:
      example:
        id: id
        label: label
      properties:
        id:
          type: string
          xml:
            attribute: true
        label:
          type: string
          xml:
            attribute: true
      type: object
    CategoryResponse:
      example:
        label:
          key: label
      properties:
        label:
          additionalProperties:
            type: string
          type: object
      type: object
    ListRegionsResponse:
      example:
        '@count': 5
        regions:
        - east: 6.027456183070403
          south: 1.4658129805029452
          north: 0.8008281904610115
          west: 5.962133916683182
          '@hasGeom': true
          label:
            key: label
          '@id': '@id'
          id: id
          '@categoryId': '@categoryId'
        - east: 6.027456183070403
          south: 1.4658129805029452
          north: 0.8008281904610115
          west: 5.962133916683182
          '@hasGeom': true
          label:
            key: label
          '@id': '@id'
          id: id
          '@categoryId': '@categoryId'
        categories:
          key:
            label:
              key: label
        region:
        - east: 6.027456183070403
          south: 1.4658129805029452
          north: 0.8008281904610115
          west: 5.962133916683182
          '@hasGeom': true
          label:
            key: label
          '@id': '@id'
          id: id
          '@categoryId': '@categoryId'
        - east: 6.027456183070403
          south: 1.4658129805029452
          north: 0.8008281904610115
          west: 5.962133916683182
          '@hasGeom': true
          label:
            key: label
          '@id': '@id'
          id: id
          '@categoryId': '@categoryId'
      properties:
        region:
          items:
            $ref: '#/components/schemas/RegionResponse'
          type: array
        categories:
          additionalProperties:
            $ref: '#/components/schemas/CategoryResponse'
          type: object
        regions:
          items:
            $ref: '#/components/schemas/RegionResponse'
          type: array
        '@count':
          format: int32
          type: integer
          xml:
            attribute: true
      type: object
      xml:
        name: response
    RegionResponse:
      example:
        east: 6.027456183070403
        south: 1.4658129805029452
        north: 0.8008281904610115
        west: 5.962133916683182
        '@hasGeom': true
        label:
          key: label
        '@id': '@id'
        id: id
        '@categoryId': '@categoryId'
      properties:
        north:
          format: double
          type: number
        east:
          format: double
          type: number
        south:
          format: double
          type: number
        west:
          format: double
          type: number
        label:
          additionalProperties:
            type: string
          type: object
        '@hasGeom':
          type: boolean
          xml:
            attribute: true
        '@categoryId':
          type: string
          xml:
            attribute: true
        '@id':
          type: string
          xml:
            attribute: true
        id:
          type: string
      type: object
    SearchResult:
      example:
        hits:
          hits:
          - _id: _id
            _score: 1.4658129805029452
          - _id: _id
            _score: 1.4658129805029452
          total: '{}'
          max_score: 6.027456183070403
        took: 0
        shards: '{}'
        timed_out: true
        aggregations: '{}'
      properties:
        took:
          type: integer
        timed_out:
          type: boolean
        shards:
          type: object
        hits:
          $ref: '#/components/schemas/SearchHits'
        aggregations:
          type: object
      type: object
    SearchHits:
      example:
        hits:
        - _id: _id
          _score: 1.4658129805029452
        - _id: _id
          _score: 1.4658129805029452
        total: '{}'
        max_score: 6.027456183070403
      properties:
        total:
          type: object
        max_score:
          format: double
          type: number
        hits:
          items:
            $ref: '#/components/schemas/SearchHit'
          type: array
      type: object
    SearchHit:
      example:
        _id: _id
        _score: 1.4658129805029452
      properties:
        _id:
          type: string
        _score:
          format: double
          type: number
      type: object
    inline_object:
      properties:
        file:
          format: binary
          type: string
      type: object
    inline_object_1:
      properties:
        file:
          format: binary
          type: string
      type: object
    inline_object_2:
      properties:
        file:
          format: binary
          type: string
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http

