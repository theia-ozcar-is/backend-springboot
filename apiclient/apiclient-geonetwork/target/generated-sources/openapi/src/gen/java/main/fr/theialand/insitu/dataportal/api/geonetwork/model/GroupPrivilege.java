/*
 * GeoNetwork 4.0.0 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.theialand.insitu.dataportal.api.geonetwork.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * GroupPrivilege
 */
@JsonPropertyOrder({
  GroupPrivilege.JSON_PROPERTY_OPERATIONS,
  GroupPrivilege.JSON_PROPERTY_GROUP,
  GroupPrivilege.JSON_PROPERTY_USER_PROFILES,
  GroupPrivilege.JSON_PROPERTY_USER_GROUP,
  GroupPrivilege.JSON_PROPERTY_RESERVED,
  GroupPrivilege.JSON_PROPERTY_USER_PROFILE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-13T11:23:44.539800+02:00[Europe/Paris]")
public class GroupPrivilege {
  public static final String JSON_PROPERTY_OPERATIONS = "operations";
  private Map<String, Boolean> operations = null;

  public static final String JSON_PROPERTY_GROUP = "group";
  private Integer group;

  /**
   * Gets or Sets userProfiles
   */
  public enum UserProfilesEnum {
    ADMINISTRATOR("Administrator"),
    
    USERADMIN("UserAdmin"),
    
    REVIEWER("Reviewer"),
    
    EDITOR("Editor"),
    
    REGISTEREDUSER("RegisteredUser"),
    
    GUEST("Guest"),
    
    MONITOR("Monitor");

    private String value;

    UserProfilesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserProfilesEnum fromValue(String value) {
      for (UserProfilesEnum b : UserProfilesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_USER_PROFILES = "userProfiles";
  private List<UserProfilesEnum> userProfiles = null;

  public static final String JSON_PROPERTY_USER_GROUP = "userGroup";
  private Boolean userGroup;

  public static final String JSON_PROPERTY_RESERVED = "reserved";
  private Boolean reserved;

  /**
   * Gets or Sets userProfile
   */
  public enum UserProfileEnum {
    ADMINISTRATOR("Administrator"),
    
    USERADMIN("UserAdmin"),
    
    REVIEWER("Reviewer"),
    
    EDITOR("Editor"),
    
    REGISTEREDUSER("RegisteredUser"),
    
    GUEST("Guest"),
    
    MONITOR("Monitor");

    private String value;

    UserProfileEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserProfileEnum fromValue(String value) {
      for (UserProfileEnum b : UserProfileEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_USER_PROFILE = "userProfile";
  private List<UserProfileEnum> userProfile = null;


  public GroupPrivilege operations(Map<String, Boolean> operations) {
    
    this.operations = operations;
    return this;
  }

  public GroupPrivilege putOperationsItem(String key, Boolean operationsItem) {
    if (this.operations == null) {
      this.operations = new HashMap<>();
    }
    this.operations.put(key, operationsItem);
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Boolean> getOperations() {
    return operations;
  }


  public void setOperations(Map<String, Boolean> operations) {
    this.operations = operations;
  }


  public GroupPrivilege group(Integer group) {
    
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGroup() {
    return group;
  }


  public void setGroup(Integer group) {
    this.group = group;
  }


  public GroupPrivilege userProfiles(List<UserProfilesEnum> userProfiles) {
    
    this.userProfiles = userProfiles;
    return this;
  }

  public GroupPrivilege addUserProfilesItem(UserProfilesEnum userProfilesItem) {
    if (this.userProfiles == null) {
      this.userProfiles = new ArrayList<>();
    }
    this.userProfiles.add(userProfilesItem);
    return this;
  }

   /**
   * Get userProfiles
   * @return userProfiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_PROFILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserProfilesEnum> getUserProfiles() {
    return userProfiles;
  }


  public void setUserProfiles(List<UserProfilesEnum> userProfiles) {
    this.userProfiles = userProfiles;
  }


  public GroupPrivilege userGroup(Boolean userGroup) {
    
    this.userGroup = userGroup;
    return this;
  }

   /**
   * Get userGroup
   * @return userGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUserGroup() {
    return userGroup;
  }


  public void setUserGroup(Boolean userGroup) {
    this.userGroup = userGroup;
  }


  public GroupPrivilege reserved(Boolean reserved) {
    
    this.reserved = reserved;
    return this;
  }

   /**
   * Get reserved
   * @return reserved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESERVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReserved() {
    return reserved;
  }


  public void setReserved(Boolean reserved) {
    this.reserved = reserved;
  }


  public GroupPrivilege userProfile(List<UserProfileEnum> userProfile) {
    
    this.userProfile = userProfile;
    return this;
  }

  public GroupPrivilege addUserProfileItem(UserProfileEnum userProfileItem) {
    if (this.userProfile == null) {
      this.userProfile = new ArrayList<>();
    }
    this.userProfile.add(userProfileItem);
    return this;
  }

   /**
   * Get userProfile
   * @return userProfile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserProfileEnum> getUserProfile() {
    return userProfile;
  }


  public void setUserProfile(List<UserProfileEnum> userProfile) {
    this.userProfile = userProfile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupPrivilege groupPrivilege = (GroupPrivilege) o;
    return Objects.equals(this.operations, groupPrivilege.operations) &&
        Objects.equals(this.group, groupPrivilege.group) &&
        Objects.equals(this.userProfiles, groupPrivilege.userProfiles) &&
        Objects.equals(this.userGroup, groupPrivilege.userGroup) &&
        Objects.equals(this.reserved, groupPrivilege.reserved) &&
        Objects.equals(this.userProfile, groupPrivilege.userProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operations, group, userProfiles, userGroup, reserved, userProfile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupPrivilege {\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    userProfiles: ").append(toIndentedString(userProfiles)).append("\n");
    sb.append("    userGroup: ").append(toIndentedString(userGroup)).append("\n");
    sb.append("    reserved: ").append(toIndentedString(reserved)).append("\n");
    sb.append("    userProfile: ").append(toIndentedString(userProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

