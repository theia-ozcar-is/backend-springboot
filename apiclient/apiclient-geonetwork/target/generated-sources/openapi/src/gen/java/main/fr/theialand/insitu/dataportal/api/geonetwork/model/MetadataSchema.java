/*
 * GeoNetwork 4.0.0 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.theialand.insitu.dataportal.api.geonetwork.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.theialand.insitu.dataportal.api.geonetwork.model.Element;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * MetadataSchema
 */
@JsonPropertyOrder({
  MetadataSchema.JSON_PROPERTY_NAME,
  MetadataSchema.JSON_PROPERTY_TITLES,
  MetadataSchema.JSON_PROPERTY_DESCRIPTIONS,
  MetadataSchema.JSON_PROPERTY_STANDARD_URL,
  MetadataSchema.JSON_PROPERTY_TARGET_NAMESPACE,
  MetadataSchema.JSON_PROPERTY_NAMESPACES,
  MetadataSchema.JSON_PROPERTY_READWRITE_U_U_I_D,
  MetadataSchema.JSON_PROPERTY_SCHEMATRON_RULES,
  MetadataSchema.JSON_PROPERTY_VERSION,
  MetadataSchema.JSON_PROPERTY_APP_MINOR_VERSION_SUPPORTED,
  MetadataSchema.JSON_PROPERTY_APP_MAJOR_VERSION_SUPPORTED,
  MetadataSchema.JSON_PROPERTY_CAN_EDIT,
  MetadataSchema.JSON_PROPERTY_ROOT_APP_INFO_ELEMENTS,
  MetadataSchema.JSON_PROPERTY_DEPENDS_ON,
  MetadataSchema.JSON_PROPERTY_OPERATION_FILTERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-13T11:23:44.539800+02:00[Europe/Paris]")
public class MetadataSchema {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TITLES = "titles";
  private Map<String, String> titles = null;

  public static final String JSON_PROPERTY_DESCRIPTIONS = "descriptions";
  private Map<String, String> descriptions = null;

  public static final String JSON_PROPERTY_STANDARD_URL = "standardUrl";
  private String standardUrl;

  public static final String JSON_PROPERTY_TARGET_NAMESPACE = "targetNamespace";
  private String targetNamespace;

  public static final String JSON_PROPERTY_NAMESPACES = "namespaces";
  private Map<String, String> namespaces = null;

  public static final String JSON_PROPERTY_READWRITE_U_U_I_D = "readwriteUUID";
  private Boolean readwriteUUID;

  public static final String JSON_PROPERTY_SCHEMATRON_RULES = "schematronRules";
  private List<String> schematronRules = null;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_APP_MINOR_VERSION_SUPPORTED = "appMinorVersionSupported";
  private String appMinorVersionSupported;

  public static final String JSON_PROPERTY_APP_MAJOR_VERSION_SUPPORTED = "appMajorVersionSupported";
  private String appMajorVersionSupported;

  public static final String JSON_PROPERTY_CAN_EDIT = "canEdit";
  private Boolean canEdit;

  public static final String JSON_PROPERTY_ROOT_APP_INFO_ELEMENTS = "rootAppInfoElements";
  private List<Element> rootAppInfoElements = null;

  public static final String JSON_PROPERTY_DEPENDS_ON = "dependsOn";
  private String dependsOn;

  public static final String JSON_PROPERTY_OPERATION_FILTERS = "operationFilters";
  private Map<String, Object> operationFilters = null;


  public MetadataSchema name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MetadataSchema titles(Map<String, String> titles) {
    
    this.titles = titles;
    return this;
  }

  public MetadataSchema putTitlesItem(String key, String titlesItem) {
    if (this.titles == null) {
      this.titles = new HashMap<>();
    }
    this.titles.put(key, titlesItem);
    return this;
  }

   /**
   * Get titles
   * @return titles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TITLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTitles() {
    return titles;
  }


  public void setTitles(Map<String, String> titles) {
    this.titles = titles;
  }


  public MetadataSchema descriptions(Map<String, String> descriptions) {
    
    this.descriptions = descriptions;
    return this;
  }

  public MetadataSchema putDescriptionsItem(String key, String descriptionsItem) {
    if (this.descriptions == null) {
      this.descriptions = new HashMap<>();
    }
    this.descriptions.put(key, descriptionsItem);
    return this;
  }

   /**
   * Get descriptions
   * @return descriptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getDescriptions() {
    return descriptions;
  }


  public void setDescriptions(Map<String, String> descriptions) {
    this.descriptions = descriptions;
  }


  public MetadataSchema standardUrl(String standardUrl) {
    
    this.standardUrl = standardUrl;
    return this;
  }

   /**
   * Get standardUrl
   * @return standardUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STANDARD_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStandardUrl() {
    return standardUrl;
  }


  public void setStandardUrl(String standardUrl) {
    this.standardUrl = standardUrl;
  }


  public MetadataSchema targetNamespace(String targetNamespace) {
    
    this.targetNamespace = targetNamespace;
    return this;
  }

   /**
   * Get targetNamespace
   * @return targetNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TARGET_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetNamespace() {
    return targetNamespace;
  }


  public void setTargetNamespace(String targetNamespace) {
    this.targetNamespace = targetNamespace;
  }


  public MetadataSchema namespaces(Map<String, String> namespaces) {
    
    this.namespaces = namespaces;
    return this;
  }

  public MetadataSchema putNamespacesItem(String key, String namespacesItem) {
    if (this.namespaces == null) {
      this.namespaces = new HashMap<>();
    }
    this.namespaces.put(key, namespacesItem);
    return this;
  }

   /**
   * Get namespaces
   * @return namespaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAMESPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getNamespaces() {
    return namespaces;
  }


  public void setNamespaces(Map<String, String> namespaces) {
    this.namespaces = namespaces;
  }


  public MetadataSchema readwriteUUID(Boolean readwriteUUID) {
    
    this.readwriteUUID = readwriteUUID;
    return this;
  }

   /**
   * Get readwriteUUID
   * @return readwriteUUID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_READWRITE_U_U_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReadwriteUUID() {
    return readwriteUUID;
  }


  public void setReadwriteUUID(Boolean readwriteUUID) {
    this.readwriteUUID = readwriteUUID;
  }


  public MetadataSchema schematronRules(List<String> schematronRules) {
    
    this.schematronRules = schematronRules;
    return this;
  }

  public MetadataSchema addSchematronRulesItem(String schematronRulesItem) {
    if (this.schematronRules == null) {
      this.schematronRules = new ArrayList<>();
    }
    this.schematronRules.add(schematronRulesItem);
    return this;
  }

   /**
   * Get schematronRules
   * @return schematronRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEMATRON_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSchematronRules() {
    return schematronRules;
  }


  public void setSchematronRules(List<String> schematronRules) {
    this.schematronRules = schematronRules;
  }


  public MetadataSchema version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public MetadataSchema appMinorVersionSupported(String appMinorVersionSupported) {
    
    this.appMinorVersionSupported = appMinorVersionSupported;
    return this;
  }

   /**
   * Get appMinorVersionSupported
   * @return appMinorVersionSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_APP_MINOR_VERSION_SUPPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppMinorVersionSupported() {
    return appMinorVersionSupported;
  }


  public void setAppMinorVersionSupported(String appMinorVersionSupported) {
    this.appMinorVersionSupported = appMinorVersionSupported;
  }


  public MetadataSchema appMajorVersionSupported(String appMajorVersionSupported) {
    
    this.appMajorVersionSupported = appMajorVersionSupported;
    return this;
  }

   /**
   * Get appMajorVersionSupported
   * @return appMajorVersionSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_APP_MAJOR_VERSION_SUPPORTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppMajorVersionSupported() {
    return appMajorVersionSupported;
  }


  public void setAppMajorVersionSupported(String appMajorVersionSupported) {
    this.appMajorVersionSupported = appMajorVersionSupported;
  }


  public MetadataSchema canEdit(Boolean canEdit) {
    
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CAN_EDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanEdit() {
    return canEdit;
  }


  public void setCanEdit(Boolean canEdit) {
    this.canEdit = canEdit;
  }


  public MetadataSchema rootAppInfoElements(List<Element> rootAppInfoElements) {
    
    this.rootAppInfoElements = rootAppInfoElements;
    return this;
  }

  public MetadataSchema addRootAppInfoElementsItem(Element rootAppInfoElementsItem) {
    if (this.rootAppInfoElements == null) {
      this.rootAppInfoElements = new ArrayList<>();
    }
    this.rootAppInfoElements.add(rootAppInfoElementsItem);
    return this;
  }

   /**
   * Get rootAppInfoElements
   * @return rootAppInfoElements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROOT_APP_INFO_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Element> getRootAppInfoElements() {
    return rootAppInfoElements;
  }


  public void setRootAppInfoElements(List<Element> rootAppInfoElements) {
    this.rootAppInfoElements = rootAppInfoElements;
  }


  public MetadataSchema dependsOn(String dependsOn) {
    
    this.dependsOn = dependsOn;
    return this;
  }

   /**
   * Get dependsOn
   * @return dependsOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEPENDS_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDependsOn() {
    return dependsOn;
  }


  public void setDependsOn(String dependsOn) {
    this.dependsOn = dependsOn;
  }


  public MetadataSchema operationFilters(Map<String, Object> operationFilters) {
    
    this.operationFilters = operationFilters;
    return this;
  }

  public MetadataSchema putOperationFiltersItem(String key, Object operationFiltersItem) {
    if (this.operationFilters == null) {
      this.operationFilters = new HashMap<>();
    }
    this.operationFilters.put(key, operationFiltersItem);
    return this;
  }

   /**
   * Get operationFilters
   * @return operationFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPERATION_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getOperationFilters() {
    return operationFilters;
  }


  public void setOperationFilters(Map<String, Object> operationFilters) {
    this.operationFilters = operationFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataSchema metadataSchema = (MetadataSchema) o;
    return Objects.equals(this.name, metadataSchema.name) &&
        Objects.equals(this.titles, metadataSchema.titles) &&
        Objects.equals(this.descriptions, metadataSchema.descriptions) &&
        Objects.equals(this.standardUrl, metadataSchema.standardUrl) &&
        Objects.equals(this.targetNamespace, metadataSchema.targetNamespace) &&
        Objects.equals(this.namespaces, metadataSchema.namespaces) &&
        Objects.equals(this.readwriteUUID, metadataSchema.readwriteUUID) &&
        Objects.equals(this.schematronRules, metadataSchema.schematronRules) &&
        Objects.equals(this.version, metadataSchema.version) &&
        Objects.equals(this.appMinorVersionSupported, metadataSchema.appMinorVersionSupported) &&
        Objects.equals(this.appMajorVersionSupported, metadataSchema.appMajorVersionSupported) &&
        Objects.equals(this.canEdit, metadataSchema.canEdit) &&
        Objects.equals(this.rootAppInfoElements, metadataSchema.rootAppInfoElements) &&
        Objects.equals(this.dependsOn, metadataSchema.dependsOn) &&
        Objects.equals(this.operationFilters, metadataSchema.operationFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, titles, descriptions, standardUrl, targetNamespace, namespaces, readwriteUUID, schematronRules, version, appMinorVersionSupported, appMajorVersionSupported, canEdit, rootAppInfoElements, dependsOn, operationFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataSchema {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    titles: ").append(toIndentedString(titles)).append("\n");
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    standardUrl: ").append(toIndentedString(standardUrl)).append("\n");
    sb.append("    targetNamespace: ").append(toIndentedString(targetNamespace)).append("\n");
    sb.append("    namespaces: ").append(toIndentedString(namespaces)).append("\n");
    sb.append("    readwriteUUID: ").append(toIndentedString(readwriteUUID)).append("\n");
    sb.append("    schematronRules: ").append(toIndentedString(schematronRules)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    appMinorVersionSupported: ").append(toIndentedString(appMinorVersionSupported)).append("\n");
    sb.append("    appMajorVersionSupported: ").append(toIndentedString(appMajorVersionSupported)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    rootAppInfoElements: ").append(toIndentedString(rootAppInfoElements)).append("\n");
    sb.append("    dependsOn: ").append(toIndentedString(dependsOn)).append("\n");
    sb.append("    operationFilters: ").append(toIndentedString(operationFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

