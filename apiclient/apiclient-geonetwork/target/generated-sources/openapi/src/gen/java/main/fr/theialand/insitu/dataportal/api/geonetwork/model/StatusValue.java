/*
 * GeoNetwork 4.0.0 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.theialand.insitu.dataportal.api.geonetwork.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * StatusValue
 */
@JsonPropertyOrder({
  StatusValue.JSON_PROPERTY_TYPE,
  StatusValue.JSON_PROPERTY_NOTIFICATION_LEVEL,
  StatusValue.JSON_PROPERTY_DISPLAY_ORDER,
  StatusValue.JSON_PROPERTY_NAME,
  StatusValue.JSON_PROPERTY_ID,
  StatusValue.JSON_PROPERTY_RESERVED_JPA_WORKAROUND,
  StatusValue.JSON_PROPERTY_RESERVED,
  StatusValue.JSON_PROPERTY_LABEL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-13T11:23:44.539800+02:00[Europe/Paris]")
public class StatusValue {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    WORKFLOW("workflow"),
    
    TASK("task"),
    
    EVENT("event");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Gets or Sets notificationLevel
   */
  public enum NotificationLevelEnum {
    STATUSUSEROWNER("statusUserOwner"),
    
    CATALOGUEADMINISTRATOR("catalogueAdministrator"),
    
    CATALOGUEPROFILEADMINISTRATOR("catalogueProfileAdministrator"),
    
    CATALOGUEPROFILEUSERADMIN("catalogueProfileUserAdmin"),
    
    CATALOGUEPROFILEREVIEWER("catalogueProfileReviewer"),
    
    CATALOGUEPROFILEEDITOR("catalogueProfileEditor"),
    
    CATALOGUEPROFILEREGISTEREDUSER("catalogueProfileRegisteredUser"),
    
    CATALOGUEPROFILEGUEST("catalogueProfileGuest"),
    
    RECORDPROFILEREVIEWER("recordProfileReviewer"),
    
    RECORDUSERAUTHOR("recordUserAuthor");

    private String value;

    NotificationLevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NotificationLevelEnum fromValue(String value) {
      for (NotificationLevelEnum b : NotificationLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_NOTIFICATION_LEVEL = "notificationLevel";
  private NotificationLevelEnum notificationLevel;

  public static final String JSON_PROPERTY_DISPLAY_ORDER = "displayOrder";
  private Integer displayOrder;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_RESERVED_JPA_WORKAROUND = "reserved_JpaWorkaround";
  private String reservedJpaWorkaround;

  public static final String JSON_PROPERTY_RESERVED = "reserved";
  private Boolean reserved;

  public static final String JSON_PROPERTY_LABEL = "label";
  private Map<String, String> label = null;


  public StatusValue type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public StatusValue notificationLevel(NotificationLevelEnum notificationLevel) {
    
    this.notificationLevel = notificationLevel;
    return this;
  }

   /**
   * Get notificationLevel
   * @return notificationLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NotificationLevelEnum getNotificationLevel() {
    return notificationLevel;
  }


  public void setNotificationLevel(NotificationLevelEnum notificationLevel) {
    this.notificationLevel = notificationLevel;
  }


  public StatusValue displayOrder(Integer displayOrder) {
    
    this.displayOrder = displayOrder;
    return this;
  }

   /**
   * Get displayOrder
   * @return displayOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDisplayOrder() {
    return displayOrder;
  }


  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }


  public StatusValue name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public StatusValue id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public StatusValue reservedJpaWorkaround(String reservedJpaWorkaround) {
    
    this.reservedJpaWorkaround = reservedJpaWorkaround;
    return this;
  }

   /**
   * Get reservedJpaWorkaround
   * @return reservedJpaWorkaround
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESERVED_JPA_WORKAROUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReservedJpaWorkaround() {
    return reservedJpaWorkaround;
  }


  public void setReservedJpaWorkaround(String reservedJpaWorkaround) {
    this.reservedJpaWorkaround = reservedJpaWorkaround;
  }


  public StatusValue reserved(Boolean reserved) {
    
    this.reserved = reserved;
    return this;
  }

   /**
   * Get reserved
   * @return reserved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESERVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReserved() {
    return reserved;
  }


  public void setReserved(Boolean reserved) {
    this.reserved = reserved;
  }


  public StatusValue label(Map<String, String> label) {
    
    this.label = label;
    return this;
  }

  public StatusValue putLabelItem(String key, String labelItem) {
    if (this.label == null) {
      this.label = new HashMap<>();
    }
    this.label.put(key, labelItem);
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getLabel() {
    return label;
  }


  public void setLabel(Map<String, String> label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusValue statusValue = (StatusValue) o;
    return Objects.equals(this.type, statusValue.type) &&
        Objects.equals(this.notificationLevel, statusValue.notificationLevel) &&
        Objects.equals(this.displayOrder, statusValue.displayOrder) &&
        Objects.equals(this.name, statusValue.name) &&
        Objects.equals(this.id, statusValue.id) &&
        Objects.equals(this.reservedJpaWorkaround, statusValue.reservedJpaWorkaround) &&
        Objects.equals(this.reserved, statusValue.reserved) &&
        Objects.equals(this.label, statusValue.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, notificationLevel, displayOrder, name, id, reservedJpaWorkaround, reserved, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusValue {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    notificationLevel: ").append(toIndentedString(notificationLevel)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    reservedJpaWorkaround: ").append(toIndentedString(reservedJpaWorkaround)).append("\n");
    sb.append("    reserved: ").append(toIndentedString(reserved)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

