/*
 * GeoNetwork 4.0.0 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.theialand.insitu.dataportal.api.geonetwork.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Field
 */
@JsonPropertyOrder({
  Field.JSON_PROPERTY_TEMPLATE,
  Field.JSON_PROPERTY_NAME,
  Field.JSON_PROPERTY_XPATH,
  Field.JSON_PROPERTY_INDEX_FIELD,
  Field.JSON_PROPERTY_USE,
  Field.JSON_PROPERTY_REMOVABLE,
  Field.JSON_PROPERTY_INSERT_MODE,
  Field.JSON_PROPERTY_CODELIST
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-13T11:23:44.539800+02:00[Europe/Paris]")
public class Field {
  public static final String JSON_PROPERTY_TEMPLATE = "template";
  private String template;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_XPATH = "xpath";
  private String xpath;

  public static final String JSON_PROPERTY_INDEX_FIELD = "indexField";
  private String indexField;

  public static final String JSON_PROPERTY_USE = "use";
  private String use;

  public static final String JSON_PROPERTY_REMOVABLE = "removable";
  private Boolean removable;

  public static final String JSON_PROPERTY_INSERT_MODE = "insertMode";
  private String insertMode;

  public static final String JSON_PROPERTY_CODELIST = "codelist";
  private String codelist;


  public Field template(String template) {
    
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplate() {
    return template;
  }


  public void setTemplate(String template) {
    this.template = template;
  }


  public Field name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Field xpath(String xpath) {
    
    this.xpath = xpath;
    return this;
  }

   /**
   * Get xpath
   * @return xpath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_XPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getXpath() {
    return xpath;
  }


  public void setXpath(String xpath) {
    this.xpath = xpath;
  }


  public Field indexField(String indexField) {
    
    this.indexField = indexField;
    return this;
  }

   /**
   * Get indexField
   * @return indexField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDEX_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIndexField() {
    return indexField;
  }


  public void setIndexField(String indexField) {
    this.indexField = indexField;
  }


  public Field use(String use) {
    
    this.use = use;
    return this;
  }

   /**
   * Get use
   * @return use
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUse() {
    return use;
  }


  public void setUse(String use) {
    this.use = use;
  }


  public Field removable(Boolean removable) {
    
    this.removable = removable;
    return this;
  }

   /**
   * Get removable
   * @return removable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REMOVABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRemovable() {
    return removable;
  }


  public void setRemovable(Boolean removable) {
    this.removable = removable;
  }


  public Field insertMode(String insertMode) {
    
    this.insertMode = insertMode;
    return this;
  }

   /**
   * Get insertMode
   * @return insertMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSERT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInsertMode() {
    return insertMode;
  }


  public void setInsertMode(String insertMode) {
    this.insertMode = insertMode;
  }


  public Field codelist(String codelist) {
    
    this.codelist = codelist;
    return this;
  }

   /**
   * Get codelist
   * @return codelist
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CODELIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCodelist() {
    return codelist;
  }


  public void setCodelist(String codelist) {
    this.codelist = codelist;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Field field = (Field) o;
    return Objects.equals(this.template, field.template) &&
        Objects.equals(this.name, field.name) &&
        Objects.equals(this.xpath, field.xpath) &&
        Objects.equals(this.indexField, field.indexField) &&
        Objects.equals(this.use, field.use) &&
        Objects.equals(this.removable, field.removable) &&
        Objects.equals(this.insertMode, field.insertMode) &&
        Objects.equals(this.codelist, field.codelist);
  }

  @Override
  public int hashCode() {
    return Objects.hash(template, name, xpath, indexField, use, removable, insertMode, codelist);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Field {\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    xpath: ").append(toIndentedString(xpath)).append("\n");
    sb.append("    indexField: ").append(toIndentedString(indexField)).append("\n");
    sb.append("    use: ").append(toIndentedString(use)).append("\n");
    sb.append("    removable: ").append(toIndentedString(removable)).append("\n");
    sb.append("    insertMode: ").append(toIndentedString(insertMode)).append("\n");
    sb.append("    codelist: ").append(toIndentedString(codelist)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

