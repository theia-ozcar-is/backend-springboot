/*
 * GeoNetwork 4.0.0 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.theialand.insitu.dataportal.api.geonetwork.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * PageJSONWrapper
 */
@JsonPropertyOrder({
  PageJSONWrapper.JSON_PROPERTY_FORMAT,
  PageJSONWrapper.JSON_PROPERTY_LANGUAGE,
  PageJSONWrapper.JSON_PROPERTY_STATUS,
  PageJSONWrapper.JSON_PROPERTY_LINK,
  PageJSONWrapper.JSON_PROPERTY_SECTIONS,
  PageJSONWrapper.JSON_PROPERTY_LINK_TEXT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-13T11:23:44.539800+02:00[Europe/Paris]")
public class PageJSONWrapper {
  /**
   * Gets or Sets format
   */
  public enum FormatEnum {
    LINK("LINK"),
    
    HTML("HTML"),
    
    TEXT("TEXT"),
    
    MARKDOWN("MARKDOWN"),
    
    WIKI("WIKI");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FORMAT = "format";
  private FormatEnum format;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private String language;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    PUBLIC("PUBLIC"),
    
    PUBLIC_ONLY("PUBLIC_ONLY"),
    
    PRIVATE("PRIVATE"),
    
    HIDDEN("HIDDEN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_LINK = "link";
  private String link;

  /**
   * Gets or Sets sections
   */
  public enum SectionsEnum {
    ALL("ALL"),
    
    TOP("TOP"),
    
    FOOTER("FOOTER"),
    
    MENU("MENU"),
    
    SUBMENU("SUBMENU"),
    
    CUSTOM_MENU1("CUSTOM_MENU1"),
    
    CUSTOM_MENU2("CUSTOM_MENU2"),
    
    CUSTOM_MENU3("CUSTOM_MENU3"),
    
    DRAFT("DRAFT");

    private String value;

    SectionsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SectionsEnum fromValue(String value) {
      for (SectionsEnum b : SectionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SECTIONS = "sections";
  private List<SectionsEnum> sections = null;

  public static final String JSON_PROPERTY_LINK_TEXT = "linkText";
  private String linkText;


  public PageJSONWrapper format(FormatEnum format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FormatEnum getFormat() {
    return format;
  }


  public void setFormat(FormatEnum format) {
    this.format = format;
  }


  public PageJSONWrapper language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public PageJSONWrapper status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public PageJSONWrapper link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLink() {
    return link;
  }


  public void setLink(String link) {
    this.link = link;
  }


  public PageJSONWrapper sections(List<SectionsEnum> sections) {
    
    this.sections = sections;
    return this;
  }

  public PageJSONWrapper addSectionsItem(SectionsEnum sectionsItem) {
    if (this.sections == null) {
      this.sections = new ArrayList<>();
    }
    this.sections.add(sectionsItem);
    return this;
  }

   /**
   * Get sections
   * @return sections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SectionsEnum> getSections() {
    return sections;
  }


  public void setSections(List<SectionsEnum> sections) {
    this.sections = sections;
  }


  public PageJSONWrapper linkText(String linkText) {
    
    this.linkText = linkText;
    return this;
  }

   /**
   * Get linkText
   * @return linkText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINK_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkText() {
    return linkText;
  }


  public void setLinkText(String linkText) {
    this.linkText = linkText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageJSONWrapper pageJSONWrapper = (PageJSONWrapper) o;
    return Objects.equals(this.format, pageJSONWrapper.format) &&
        Objects.equals(this.language, pageJSONWrapper.language) &&
        Objects.equals(this.status, pageJSONWrapper.status) &&
        Objects.equals(this.link, pageJSONWrapper.link) &&
        Objects.equals(this.sections, pageJSONWrapper.sections) &&
        Objects.equals(this.linkText, pageJSONWrapper.linkText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, language, status, link, sections, linkText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageJSONWrapper {\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("    linkText: ").append(toIndentedString(linkText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

