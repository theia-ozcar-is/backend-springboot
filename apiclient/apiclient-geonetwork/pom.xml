<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>apiclient</artifactId>
        <groupId>fr.theialand.insitu</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>apiclient-geonetwork</artifactId>
    <description>Client module for Geonetwork, expose a few signatures around the Records API</description>

    <properties>
<!--        <apache.sis.version>1.1-M1</apache.sis.version>-->
        <apache.sis.version>2.0-M0070</apache.sis.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>fr.theialand.insitu</groupId>
            <artifactId>apiclient-common</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <!-- Needed by the code generated by codegen -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.6.2</version>
        </dependency>

        <!-- The ETL is based on Apache SIS and parts of Geotk.,
        Latests versions at geomatys repo -->
        <dependency>
            <groupId>org.apache.sis.core</groupId>
            <artifactId>sis-metadata</artifactId>
            <version>${apache.sis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sis.core</groupId>
            <artifactId>sis-referencing</artifactId>
            <version>${apache.sis.version}</version>
        </dependency>

        <!-- For marshalling the XML in/out of SIS -->
        <!-- API, java.xml.bind module, removed from java 11 -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>2.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.2</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Needed by the generator > 4.1.0 for @Nullable unofficial annotations
         issue : https://github.com/OpenAPITools/openapi-generator/issues/7177 -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
    </dependencies>

    <repositories>
        <!-- Home of some of the cutting edge Geo libs, Apache SIS and its counterpart Geotoolkit -->
        <repository>
            <id>geomatys</id>
            <name>Geomatys GeoToolkit Repository</name>
            <url>https://nexus.geomatys.com/repository/geotoolkit/</url>
            <snapshots><enabled>false</enabled></snapshots>
            <releases><enabled>true</enabled></releases>
        </repository>
    </repositories>

    <build>
        <plugins>
            <!-- Due to some bugs in the API file related to MediaTypes and Responses,
            we need to apply a custom made patch
            an issue has been posted there : https://github.com/geonetwork/core-geonetwork/issues/5171
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-patch-plugin</artifactId>
                <version>1.2</version>
                <configuration>
                    <originalFile>${project.basedir}/src/main/resources/geonetworkApi.json</originalFile>
                    <patchFile>${project.basedir}/src/main/resources/geonetworkApi.patch</patchFile>
                    <destFile>${project.basedir}/target/geonetworkApiPatched.json</destFile>
                </configuration>
                <executions>
                    <execution>
                        <id>patch</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Now we can generate the spring REST client, based on restTemplate -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>4.3.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/target/geonetworkApiPatched.json</inputSpec>
                            <generatorName>java</generatorName>
                            <skipValidateSpec>true</skipValidateSpec>

                            <configOptions>
                                <java8>true</java8>
                                <openApiNullable>false</openApiNullable>

                                <dateLibrary>java8</dateLibrary> <!-- java.time new lib -->
                                <library>resttemplate</library> <!-- Spring http client -->
                                <serializationLibrary>jackson</serializationLibrary>
                                <withXml>false</withXml>
                                <sourceFolder>src/gen/java/main</sourceFolder>
                            </configOptions>


                            <modelPackage>${project.groupId}.dataportal.api.geonetwork.model</modelPackage>
                            <apiPackage>${project.groupId}.dataportal.api.geonetwork.api</apiPackage>
                            <invokerPackage>${project.groupId}.dataportal.api.geonetwork.handler</invokerPackage>
                            <generateSupportingFiles>true</generateSupportingFiles>

                            <!-- other stuff generated by the codegen is buggy as sh*t , no need-->
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <generateApiTests>false</generateApiTests>
                            <generateApiDocumentation>false</generateApiDocumentation>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
